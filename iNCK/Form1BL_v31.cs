using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SQLite;


namespace iNCK
{
    public partial class Form1BL_v31 : Form
    {
        private bool IsSearch = false;
        private bool IsUpdate = false;
        private bool IsUpdate1 = false;
        private string comp_name = "";
        private string user_name = "";
        private string error_fldName = "";
        private bool IsError = false;


        public Form1BL_v31()
        {
            InitializeComponent();
        }

        private void frmForm1BL_Load(object sender, EventArgs e)
        {

        }





        private void IA01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IA01.Text))
                {
                    MessageBox.Show("Please enter supervisor name ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IA01.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IA01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IA01);
        }


        private void IA02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IA02'", IA02.Text) == true)
                {
                    IA02.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IA02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IA02);
        }


        private void IA03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IA03.Text))
                {
                    MessageBox.Show("Please enter village name ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IA03.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IA03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IA03);
        }


        private void IA04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IA04.Text))
                {
                    MessageBox.Show("Please enter union council name ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IA04.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IA04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IA04);
        }


        private void IA05_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IA05'", IA05.Text) == true)
                {
                    IA05.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IA05.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IA05);
        }


        private void IB01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IB01.Text))
                {
                    MessageBox.Show("Please enter person name ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB01.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB01);
        }


        private void IB02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB02'", IB02.Text) == true)
                {
                    IB02.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB02);
        }


        private void IB03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB03'", IB03.Text) == true)
                {
                    IB03.Focus();
                }
                else
                {
                    SetAutoScrollMargin(0, 300);
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB03);
        }


        private void IB04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            if (IB04.Text.IndexOf(" ") == -1)
            {
                if (IB04.Text.Length == 10)
                {
                    try
                    {
                        string[] dt1;


                        if (IB04.Text != "  /  /")
                        {
                            dt1 = IB04.Text.ToString().Split('/');

                            DateTime dt = new DateTime();
                            System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                            dt = Convert.ToDateTime(IB04.Text);


                            DateTime study_dt = new DateTime();
                            System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                            study_dt = Convert.ToDateTime("01/06/2021");


                            if (dt > DateTime.Now.Date)
                            {
                                MessageBox.Show("Date cannot be greater than todays's date ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                IB04.Focus();
                            }
                            else
                            {
                                if (dt < study_dt)
                                {
                                    MessageBox.Show("Date cannot be less than study starting date  ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    IB04.Focus();
                                }
                            }

                        }
                        else if (IB04.Text == "  /  /")
                        {
                            MessageBox.Show("Date of form filling cannot be blank ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IB04.Focus();
                        }
                    }

                    catch (Exception ex)
                    {
                        if (ex.Message == "String was not recognized as a valid DateTime.")
                        {
                            MessageBox.Show("Invalid Date format. Date must be entered in dd/mm/yyyy format ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IB04.Focus();
                        }
                        else
                        {
                            MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IB04.Focus();
                        }
                    }

                    finally
                    {
                        obj_op = null;
                    }
                }
                else
                {
                    MessageBox.Show("Please enter complete date ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB04.Focus();
                }
            }
            else
            {
                MessageBox.Show("Please enter complete date ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                IB04.Focus();
            }

            IB04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB04);
        }


        private void IB05_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB05'", IB05.Text) == true)
                {
                    IB05.Focus();
                }
                else
                {
                    if (IB05.Text == "1")
                    {
                        //Consent_Yes();

                        SearchRecord();
                        IB06.Focus();
                    }
                    else
                    {
                        Consent_No();
                        IB06.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB05.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB05);
        }


        private void Consent_Yes()
        {
            CDBOperations obj_op = new CDBOperations();

            //obj_op.EnableControls(IA01);
            //obj_op.EnableControls(IA02);
            //obj_op.EnableControls(IA03);
            //obj_op.EnableControls(IA04);
            //obj_op.EnableControls(IA05);
            //obj_op.EnableControls(IB01);
            //obj_op.EnableControls(IB02);
            //obj_op.EnableControls(IB03);
            //obj_op.EnableControls(IB04);
            //obj_op.EnableControls(IB05);

            obj_op.EnableControls(IB06);
            obj_op.EnableControls(IB07);
            obj_op.EnableControls(IB08);


            if (IB08.Text == "1")
            {
                obj_op.DisableControls(IB0901);
                obj_op.DisableControls(IB0902);
                obj_op.DisableControls(IB0903);
                obj_op.DisableControls(IB0996);
            }
            else if (IB08.Text == "4")
            {
                obj_op.DisableControls(IB0901);
                obj_op.DisableControls(IB0902);
                obj_op.DisableControls(IB0903);
                obj_op.DisableControls(IB0996);
            }
            else
            {
                obj_op.EnableControls(IB0901);
                obj_op.EnableControls(IB0902);
                obj_op.EnableControls(IB0903);
                obj_op.EnableControls(IB0996);
            }


            obj_op.EnableControls(IC01);


            if (IC01.Text == "0")
            {
                obj_op.DisableControls(IC02);
                obj_op.DisableControls(IC03);
                obj_op.DisableControls(IC04);
                obj_op.DisableControls(IC05);


                obj_op.DisableControls(chkBaby1);
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(chkBaby2);
                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(chkBaby3);
                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(chkBaby4);
                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

                obj_op.DisableControls(ID01);


            }
            else if (IC01.Text == "99")
            {

                obj_op.DisableControls(IC02);
                obj_op.DisableControls(IC03);
                obj_op.DisableControls(IC04);
                obj_op.DisableControls(IC05);


                obj_op.DisableControls(chkBaby1);
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(chkBaby2);
                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(chkBaby3);
                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(chkBaby4);
                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

                obj_op.EnableControls(ID01);

            }
            else
            {
                obj_op.EnableControls(IC02);
                obj_op.EnableControls(IC03);
                obj_op.EnableControls(IC04);
                obj_op.EnableControls(IC05);


                obj_op.EnableControls(chkBaby1);
                obj_op.EnableControls(IC0601);
                obj_op.EnableControls(IC0701);
                obj_op.EnableControls(IC0801);
                obj_op.EnableControls(IC0901);
                obj_op.EnableControls(IC01001);
                obj_op.EnableControls(IC01101);


                obj_op.EnableControls(chkBaby2);
                obj_op.EnableControls(IC0602);
                obj_op.EnableControls(IC0702);
                obj_op.EnableControls(IC0802);
                obj_op.EnableControls(IC0902);
                obj_op.EnableControls(IC01002);
                obj_op.EnableControls(IC01102);


                obj_op.EnableControls(chkBaby3);
                obj_op.EnableControls(IC0603);
                obj_op.EnableControls(IC0703);
                obj_op.EnableControls(IC0803);
                obj_op.EnableControls(IC0903);
                obj_op.EnableControls(IC01003);
                obj_op.EnableControls(IC01103);



                obj_op.EnableControls(chkBaby4);
                obj_op.EnableControls(IC0604);
                obj_op.EnableControls(IC0704);
                obj_op.EnableControls(IC0804);
                obj_op.EnableControls(IC0904);
                obj_op.EnableControls(IC01004);
                obj_op.EnableControls(IC01104);

                obj_op.EnableControls(ID01);

            }



            if (IC02.Text == "0")
            {
                obj_op.DisableControls(IC03);
                obj_op.DisableControls(IC04);
                obj_op.DisableControls(IC05);

                obj_op.DisableControls(chkBaby1);
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(chkBaby2);
                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(chkBaby3);
                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(chkBaby4);
                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

                obj_op.DisableControls(ID01);

            }
            else if (IC02.Text == "99")
            {

                obj_op.DisableControls(IC03);
                obj_op.DisableControls(IC04);
                obj_op.DisableControls(IC05);


                obj_op.DisableControls(chkBaby1);
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(chkBaby2);
                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(chkBaby3);
                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(chkBaby4);
                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

                obj_op.EnableControls(ID01);

            }
            else
            {

                obj_op.EnableControls(IC03);
                obj_op.EnableControls(IC04);
                obj_op.EnableControls(IC05);

                obj_op.EnableControls(chkBaby1);
                obj_op.EnableControls(IC0601);
                obj_op.EnableControls(IC0701);
                obj_op.EnableControls(IC0801);
                obj_op.EnableControls(IC0901);
                obj_op.EnableControls(IC01001);
                obj_op.EnableControls(IC01101);


                obj_op.EnableControls(chkBaby2);
                obj_op.EnableControls(IC0602);
                obj_op.EnableControls(IC0702);
                obj_op.EnableControls(IC0802);
                obj_op.EnableControls(IC0902);
                obj_op.EnableControls(IC01002);
                obj_op.EnableControls(IC01102);


                obj_op.EnableControls(chkBaby3);
                obj_op.EnableControls(IC0603);
                obj_op.EnableControls(IC0703);
                obj_op.EnableControls(IC0803);
                obj_op.EnableControls(IC0903);
                obj_op.EnableControls(IC01003);
                obj_op.EnableControls(IC01103);


                obj_op.EnableControls(chkBaby4);
                obj_op.EnableControls(IC0604);
                obj_op.EnableControls(IC0704);
                obj_op.EnableControls(IC0804);
                obj_op.EnableControls(IC0904);
                obj_op.EnableControls(IC01004);
                obj_op.EnableControls(IC01104);

                obj_op.EnableControls(ID01);

            }





            if (IC05.Text == "0")
            {

                obj_op.DisableControls(chkBaby1);
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(chkBaby2);
                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(chkBaby3);
                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(chkBaby4);
                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

            }
            else if (!string.IsNullOrEmpty(IC05.Text))
            {

                if (Convert.ToInt32(IC05.Text) > 1 && Convert.ToInt32(IC05.Text) < 4)
                {

                    obj_op.EnableControls(chkBaby1);
                    obj_op.EnableControls(IC0601);
                    obj_op.EnableControls(IC0701);
                    obj_op.EnableControls(IC0801);
                    obj_op.EnableControls(IC0901);
                    obj_op.EnableControls(IC01001);
                    obj_op.EnableControls(IC01101);

                    obj_op.EnableControls(chkBaby2);
                    obj_op.EnableControls(IC0602);
                    obj_op.EnableControls(IC0702);
                    obj_op.EnableControls(IC0802);
                    obj_op.EnableControls(IC0902);
                    obj_op.EnableControls(IC01002);
                    obj_op.EnableControls(IC01102);

                    obj_op.EnableControls(chkBaby3);
                    obj_op.EnableControls(IC0603);
                    obj_op.EnableControls(IC0703);
                    obj_op.EnableControls(IC0803);
                    obj_op.EnableControls(IC0903);
                    obj_op.EnableControls(IC01003);
                    obj_op.EnableControls(IC01103);

                    obj_op.EnableControls(chkBaby4);
                    obj_op.EnableControls(IC0604);
                    obj_op.EnableControls(IC0704);
                    obj_op.EnableControls(IC0804);
                    obj_op.EnableControls(IC0904);
                    obj_op.EnableControls(IC01004);
                    obj_op.EnableControls(IC01104);



                    obj_op.DisableControls(IC0605);
                    obj_op.DisableControls(IC0705);
                    obj_op.DisableControls(IC0805);
                    obj_op.DisableControls(IC0905);
                    obj_op.DisableControls(IC01005);
                    obj_op.DisableControls(IC01105);

                    obj_op.DisableControls(IC0606);
                    obj_op.DisableControls(IC0706);
                    obj_op.DisableControls(IC0806);
                    obj_op.DisableControls(IC0906);
                    obj_op.DisableControls(IC01006);
                    obj_op.DisableControls(IC01106);

                    obj_op.DisableControls(IC0607);
                    obj_op.DisableControls(IC0707);
                    obj_op.DisableControls(IC0807);
                    obj_op.DisableControls(IC0907);
                    obj_op.DisableControls(IC01007);
                    obj_op.DisableControls(IC01107);

                    obj_op.DisableControls(IC0608);
                    obj_op.DisableControls(IC0708);
                    obj_op.DisableControls(IC0808);
                    obj_op.DisableControls(IC0908);
                    obj_op.DisableControls(IC01008);
                    obj_op.DisableControls(IC01108);

                    obj_op.DisableControls(IC0609);
                    obj_op.DisableControls(IC0709);
                    obj_op.DisableControls(IC0809);
                    obj_op.DisableControls(IC0909);
                    obj_op.DisableControls(IC01009);
                    obj_op.DisableControls(IC01109);

                    obj_op.DisableControls(IC06010);
                    obj_op.DisableControls(IC07010);
                    obj_op.DisableControls(IC08010);
                    obj_op.DisableControls(IC09010);
                    obj_op.DisableControls(IC01010);
                    obj_op.DisableControls(IC01110);

                    obj_op.DisableControls(IC06011);
                    obj_op.DisableControls(IC07011);
                    obj_op.DisableControls(IC08011);
                    obj_op.DisableControls(IC09011);
                    obj_op.DisableControls(IC01011);
                    obj_op.DisableControls(IC01111);

                }
                else if (Convert.ToInt32(IC05.Text) > 5)
                {

                    obj_op.EnableControls(chkBaby1);
                    obj_op.EnableControls(IC0601);
                    obj_op.EnableControls(IC0701);
                    obj_op.EnableControls(IC0801);
                    obj_op.EnableControls(IC0901);
                    obj_op.EnableControls(IC01001);
                    obj_op.EnableControls(IC01101);


                    obj_op.EnableControls(chkBaby2);
                    obj_op.EnableControls(IC0602);
                    obj_op.EnableControls(IC0702);
                    obj_op.EnableControls(IC0802);
                    obj_op.EnableControls(IC0902);
                    obj_op.EnableControls(IC01002);
                    obj_op.EnableControls(IC01102);


                    obj_op.EnableControls(chkBaby3);
                    obj_op.EnableControls(IC0603);
                    obj_op.EnableControls(IC0703);
                    obj_op.EnableControls(IC0803);
                    obj_op.EnableControls(IC0903);
                    obj_op.EnableControls(IC01003);
                    obj_op.EnableControls(IC01103);


                    obj_op.EnableControls(chkBaby4);
                    obj_op.EnableControls(IC0604);
                    obj_op.EnableControls(IC0704);
                    obj_op.EnableControls(IC0804);
                    obj_op.EnableControls(IC0904);
                    obj_op.EnableControls(IC01004);
                    obj_op.EnableControls(IC01104);



                    obj_op.EnableControls(IC0605);
                    obj_op.EnableControls(IC0705);
                    obj_op.EnableControls(IC0805);
                    obj_op.EnableControls(IC0905);
                    obj_op.EnableControls(IC01005);
                    obj_op.EnableControls(IC01105);

                    obj_op.EnableControls(IC0606);
                    obj_op.EnableControls(IC0706);
                    obj_op.EnableControls(IC0806);
                    obj_op.EnableControls(IC0906);
                    obj_op.EnableControls(IC01006);
                    obj_op.EnableControls(IC01106);

                    obj_op.EnableControls(IC0607);
                    obj_op.EnableControls(IC0707);
                    obj_op.EnableControls(IC0807);
                    obj_op.EnableControls(IC0907);
                    obj_op.EnableControls(IC01007);
                    obj_op.EnableControls(IC01107);

                    obj_op.EnableControls(IC0608);
                    obj_op.EnableControls(IC0708);
                    obj_op.EnableControls(IC0808);
                    obj_op.EnableControls(IC0908);
                    obj_op.EnableControls(IC01008);
                    obj_op.EnableControls(IC01108);

                    obj_op.EnableControls(IC0609);
                    obj_op.EnableControls(IC0709);
                    obj_op.EnableControls(IC0809);
                    obj_op.EnableControls(IC0909);
                    obj_op.EnableControls(IC01009);
                    obj_op.EnableControls(IC01109);

                    obj_op.EnableControls(IC06010);
                    obj_op.EnableControls(IC07010);
                    obj_op.EnableControls(IC08010);
                    obj_op.EnableControls(IC09010);
                    obj_op.EnableControls(IC01010);
                    obj_op.EnableControls(IC01110);

                    obj_op.EnableControls(IC06011);
                    obj_op.EnableControls(IC07011);
                    obj_op.EnableControls(IC08011);
                    obj_op.EnableControls(IC09011);
                    obj_op.EnableControls(IC01011);
                    obj_op.EnableControls(IC01111);


                }

            }
            else
            {
                if (IC01.Text != "0")
                {
                    if (IC02.Text != "0")
                    {

                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);

                        obj_op.EnableControls(chkBaby2);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);

                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);

                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);

                    }

                }


            }



            if (chkBaby1.Text == "1")
            {
                obj_op.EnableControls(IC0601);
                obj_op.EnableControls(IC0701);
                obj_op.EnableControls(IC0801);
                obj_op.EnableControls(IC0901);
                obj_op.EnableControls(IC01001);
                obj_op.EnableControls(IC01101);
            }
            else
            {
                obj_op.DisableControls(IC0601);
                obj_op.DisableControls(IC0701);
                obj_op.DisableControls(IC0801);
                obj_op.DisableControls(IC0901);
                obj_op.DisableControls(IC01001);
                obj_op.DisableControls(IC01101);


                obj_op.DisableControls(IC0602);
                obj_op.DisableControls(IC0702);
                obj_op.DisableControls(IC0802);
                obj_op.DisableControls(IC0902);
                obj_op.DisableControls(IC01002);
                obj_op.DisableControls(IC01102);


                obj_op.DisableControls(IC0603);
                obj_op.DisableControls(IC0703);
                obj_op.DisableControls(IC0803);
                obj_op.DisableControls(IC0903);
                obj_op.DisableControls(IC01003);
                obj_op.DisableControls(IC01103);


                obj_op.DisableControls(IC0604);
                obj_op.DisableControls(IC0704);
                obj_op.DisableControls(IC0804);
                obj_op.DisableControls(IC0904);
                obj_op.DisableControls(IC01004);
                obj_op.DisableControls(IC01104);

            }





            obj_op.EnableControls(ID01);
            obj_op.EnableControls(ID02);


            if (ID02.Text == "0")
            {
                obj_op.DisableControls(ID03);
                obj_op.DisableControls(ID04);
            }
            else
            {
                obj_op.EnableControls(ID03);
                obj_op.EnableControls(ID04);
            }



            obj_op.EnableControls(IE01);


            if (IE01.Text == "0")
            {
                obj_op.DisableControls(IE02);
                obj_op.DisableControls(IE03);
                obj_op.DisableControls(IE04);
                obj_op.DisableControls(chkHHMem1);
                obj_op.DisableControls(chkHHMem2);
                obj_op.DisableControls(chkHHMem3);
                obj_op.DisableControls(chkHHMem4);
                obj_op.DisableControls(IE0701);
                obj_op.DisableControls(IE0702);
                obj_op.DisableControls(IE0703);
                obj_op.DisableControls(IE0704);

            }
            else
            {

                obj_op.EnableControls(IE02);
                obj_op.EnableControls(IE03);


                if (IE03.Text == "0")
                {
                    obj_op.DisableControls(IE04);
                    obj_op.EnableControls(chkHHMem1);
                    obj_op.EnableControls(chkHHMem2);
                    obj_op.EnableControls(chkHHMem3);
                    obj_op.EnableControls(chkHHMem4);
                    obj_op.EnableControls(IE0701);
                    obj_op.EnableControls(IE0702);
                    obj_op.EnableControls(IE0703);
                    obj_op.EnableControls(IE0704);

                    obj_op.EnableControls(IE0801);
                    obj_op.EnableControls(IE0802);
                    obj_op.EnableControls(IE0803);
                    obj_op.EnableControls(IE0804);

                    obj_op.EnableControls(IE0901);
                    obj_op.EnableControls(IE0902);
                    obj_op.EnableControls(IE0903);
                    obj_op.EnableControls(IE0904);


                }
                else
                {
                    obj_op.EnableControls(IE04);
                    obj_op.EnableControls(chkHHMem1);
                    obj_op.EnableControls(chkHHMem2);
                    obj_op.EnableControls(chkHHMem3);
                    obj_op.EnableControls(chkHHMem4);
                    obj_op.EnableControls(IE0701);
                    obj_op.EnableControls(IE0702);
                    obj_op.EnableControls(IE0703);
                    obj_op.EnableControls(IE0704);

                    obj_op.EnableControls(IE0801);
                    obj_op.EnableControls(IE0802);
                    obj_op.EnableControls(IE0803);
                    obj_op.EnableControls(IE0804);

                    obj_op.EnableControls(IE0901);
                    obj_op.EnableControls(IE0902);
                    obj_op.EnableControls(IE0903);
                    obj_op.EnableControls(IE0904);

                }

            }




            if (IE0801.Text == "0")
            {
                obj_op.DisableControls(IE0901);
            }
            else
            {
                obj_op.EnableControls(IE0901);
            }




            if (IE0802.Text == "0")
            {
                obj_op.DisableControls(IE0902);
            }
            else
            {
                obj_op.EnableControls(IE0902);
            }




            if (IE0803.Text == "0")
            {
                obj_op.DisableControls(IE0903);
            }
            else
            {
                obj_op.EnableControls(IE0903);
            }




            if (IE0804.Text == "0")
            {
                obj_op.DisableControls(IE0904);
            }
            else
            {
                obj_op.EnableControls(IE0904);
            }






            obj_op.EnableControls(IF01);
            obj_op.EnableControls(IF02);
            obj_op.EnableControls(IF03);


            if (IF03.Text == "0")
            {
                obj_op.DisableControls(IF04);
            }
            else
            {
                obj_op.EnableControls(IF04);
            }



            obj_op.EnableControls(chkPW1);
            obj_op.EnableControls(IF0601);
            obj_op.EnableControls(chkPW2);
            obj_op.EnableControls(IF0602);
            obj_op.EnableControls(chkPW3);
            obj_op.EnableControls(IF0603);
            obj_op.EnableControls(chkPW4);
            obj_op.EnableControls(IF0604);
            obj_op.EnableControls(IG01);



            if (IG01.Text == "0")
            {
                obj_op.DisableControls(IG02);
                obj_op.DisableControls(IG0301);
                obj_op.DisableControls(IG0302);
                obj_op.DisableControls(IG0303);
                obj_op.DisableControls(IG0304);
                obj_op.DisableControls(IG0305);
                obj_op.DisableControls(IG0306);
                obj_op.DisableControls(IG0307);
                obj_op.DisableControls(IG0308);
                obj_op.DisableControls(IG0309);
                obj_op.DisableControls(IG03010);

                obj_op.DisableControls(chkMember1);
                obj_op.DisableControls(chkMember2);
                obj_op.DisableControls(chkMember3);
                obj_op.DisableControls(chkMember4);
                obj_op.DisableControls(chkMember5);

                obj_op.DisableControls(IG0401);
                obj_op.DisableControls(IG0501);
                obj_op.DisableControls(IG060101);
                obj_op.DisableControls(IG060201);
                obj_op.DisableControls(IG060301);
                obj_op.DisableControls(IG060401);
                obj_op.DisableControls(IG060501);

                obj_op.DisableControls(IG070101);
                obj_op.DisableControls(IG070201);
                obj_op.DisableControls(IG070301);
                obj_op.DisableControls(IG070401);
                obj_op.DisableControls(IG070501);
                obj_op.DisableControls(IG070601);
                obj_op.DisableControls(IG070701);
                obj_op.DisableControls(IG070801);
                obj_op.DisableControls(IG070901);
                obj_op.DisableControls(IG0701001);
                obj_op.DisableControls(IG0701101);
                obj_op.DisableControls(IG0701201);
                obj_op.DisableControls(IG0701301);
                obj_op.DisableControls(IG0801);
                obj_op.DisableControls(IG0901);
                obj_op.DisableControls(IG01001);
                obj_op.DisableControls(IG01101);
                obj_op.DisableControls(IG01201);
                obj_op.DisableControls(IG01301);
                obj_op.DisableControls(IG01401);
                obj_op.DisableControls(IG01501);
                obj_op.DisableControls(IG160101);
                obj_op.DisableControls(IG160201);
                obj_op.DisableControls(IG160301);
                obj_op.DisableControls(IG160401);
                obj_op.DisableControls(IG160501);
                obj_op.DisableControls(IG160601);
                obj_op.DisableControls(IG160701);
                obj_op.DisableControls(IG160801);
                obj_op.DisableControls(IG160901);
                obj_op.DisableControls(IG1601001);
                obj_op.DisableControls(IG1601101);
                obj_op.DisableControls(IG1601201);



                obj_op.DisableControls(IG0402);
                obj_op.DisableControls(IG0502);
                obj_op.DisableControls(IG060102);
                obj_op.DisableControls(IG060202);
                obj_op.DisableControls(IG060302);
                obj_op.DisableControls(IG060402);
                obj_op.DisableControls(IG060502);

                obj_op.DisableControls(IG070102);
                obj_op.DisableControls(IG070202);
                obj_op.DisableControls(IG070302);
                obj_op.DisableControls(IG070402);
                obj_op.DisableControls(IG070502);
                obj_op.DisableControls(IG070602);
                obj_op.DisableControls(IG070702);
                obj_op.DisableControls(IG070802);
                obj_op.DisableControls(IG070902);
                obj_op.DisableControls(IG0701002);
                obj_op.DisableControls(IG0701102);
                obj_op.DisableControls(IG0701202);
                obj_op.DisableControls(IG0701302);
                obj_op.DisableControls(IG0802);
                obj_op.DisableControls(IG0902);
                obj_op.DisableControls(IG01002);
                obj_op.DisableControls(IG01102);
                obj_op.DisableControls(IG01202);
                obj_op.DisableControls(IG01302);
                obj_op.DisableControls(IG01402);
                obj_op.DisableControls(IG01502);
                obj_op.DisableControls(IG160102);
                obj_op.DisableControls(IG160202);
                obj_op.DisableControls(IG160302);
                obj_op.DisableControls(IG160402);
                obj_op.DisableControls(IG160502);
                obj_op.DisableControls(IG160602);
                obj_op.DisableControls(IG160702);
                obj_op.DisableControls(IG160802);
                obj_op.DisableControls(IG160902);
                obj_op.DisableControls(IG1601002);
                obj_op.DisableControls(IG1601102);
                obj_op.DisableControls(IG1601202);


                obj_op.DisableControls(IG0403);
                obj_op.DisableControls(IG0503);
                obj_op.DisableControls(IG060103);
                obj_op.DisableControls(IG060203);
                obj_op.DisableControls(IG060303);
                obj_op.DisableControls(IG060403);
                obj_op.DisableControls(IG060503);

                obj_op.DisableControls(IG070103);
                obj_op.DisableControls(IG070203);
                obj_op.DisableControls(IG070303);
                obj_op.DisableControls(IG070403);
                obj_op.DisableControls(IG070503);
                obj_op.DisableControls(IG070603);
                obj_op.DisableControls(IG070703);
                obj_op.DisableControls(IG070803);
                obj_op.DisableControls(IG070903);
                obj_op.DisableControls(IG0701003);
                obj_op.DisableControls(IG0701103);
                obj_op.DisableControls(IG0701203);
                obj_op.DisableControls(IG0701303);
                obj_op.DisableControls(IG0803);
                obj_op.DisableControls(IG0903);
                obj_op.DisableControls(IG01003);
                obj_op.DisableControls(IG01103);
                obj_op.DisableControls(IG01203);
                obj_op.DisableControls(IG01303);
                obj_op.DisableControls(IG01403);
                obj_op.DisableControls(IG01503);
                obj_op.DisableControls(IG160103);
                obj_op.DisableControls(IG160203);
                obj_op.DisableControls(IG160303);
                obj_op.DisableControls(IG160403);
                obj_op.DisableControls(IG160503);
                obj_op.DisableControls(IG160603);
                obj_op.DisableControls(IG160703);
                obj_op.DisableControls(IG160803);
                obj_op.DisableControls(IG160903);
                obj_op.DisableControls(IG1601003);
                obj_op.DisableControls(IG1601103);
                obj_op.DisableControls(IG1601203);



                obj_op.DisableControls(IG0404);
                obj_op.DisableControls(IG0504);
                obj_op.DisableControls(IG060104);
                obj_op.DisableControls(IG060204);
                obj_op.DisableControls(IG060304);
                obj_op.DisableControls(IG060404);
                obj_op.DisableControls(IG060504);

                obj_op.DisableControls(IG070104);
                obj_op.DisableControls(IG070204);
                obj_op.DisableControls(IG070304);
                obj_op.DisableControls(IG070404);
                obj_op.DisableControls(IG070504);
                obj_op.DisableControls(IG070604);
                obj_op.DisableControls(IG070704);
                obj_op.DisableControls(IG070804);
                obj_op.DisableControls(IG070904);
                obj_op.DisableControls(IG0701004);
                obj_op.DisableControls(IG0701104);
                obj_op.DisableControls(IG0701204);
                obj_op.DisableControls(IG0701304);
                obj_op.DisableControls(IG0804);
                obj_op.DisableControls(IG0904);
                obj_op.DisableControls(IG01004);
                obj_op.DisableControls(IG01104);
                obj_op.DisableControls(IG01204);
                obj_op.DisableControls(IG01304);
                obj_op.DisableControls(IG01404);
                obj_op.DisableControls(IG01504);
                obj_op.DisableControls(IG160104);
                obj_op.DisableControls(IG160204);
                obj_op.DisableControls(IG160304);
                obj_op.DisableControls(IG160404);
                obj_op.DisableControls(IG160504);
                obj_op.DisableControls(IG160604);
                obj_op.DisableControls(IG160704);
                obj_op.DisableControls(IG160804);
                obj_op.DisableControls(IG160904);
                obj_op.DisableControls(IG1601004);
                obj_op.DisableControls(IG1601104);
                obj_op.DisableControls(IG1601204);



                obj_op.DisableControls(IG0405);
                obj_op.DisableControls(IG0505);
                obj_op.DisableControls(IG060105);
                obj_op.DisableControls(IG060205);
                obj_op.DisableControls(IG060305);
                obj_op.DisableControls(IG060405);
                obj_op.DisableControls(IG060505);

                obj_op.DisableControls(IG070105);
                obj_op.DisableControls(IG070205);
                obj_op.DisableControls(IG070305);
                obj_op.DisableControls(IG070405);
                obj_op.DisableControls(IG070505);
                obj_op.DisableControls(IG070605);
                obj_op.DisableControls(IG070705);
                obj_op.DisableControls(IG070805);
                obj_op.DisableControls(IG070905);
                obj_op.DisableControls(IG0701005);
                obj_op.DisableControls(IG0701105);
                obj_op.DisableControls(IG0701205);
                obj_op.DisableControls(IG0701305);
                obj_op.DisableControls(IG0805);
                obj_op.DisableControls(IG0905);
                obj_op.DisableControls(IG01005);
                obj_op.DisableControls(IG01105);
                obj_op.DisableControls(IG01205);
                obj_op.DisableControls(IG01305);
                obj_op.DisableControls(IG01405);
                obj_op.DisableControls(IG01505);
                obj_op.DisableControls(IG160105);
                obj_op.DisableControls(IG160205);
                obj_op.DisableControls(IG160305);
                obj_op.DisableControls(IG160405);
                obj_op.DisableControls(IG160505);
                obj_op.DisableControls(IG160605);
                obj_op.DisableControls(IG160705);
                obj_op.DisableControls(IG160805);
                obj_op.DisableControls(IG160905);
                obj_op.DisableControls(IG1601005);
                obj_op.DisableControls(IG1601105);
                obj_op.DisableControls(IG1601205);

            }
            else
            {

                obj_op.EnableControls(IG02);
                obj_op.EnableControls(IG0301);
                obj_op.EnableControls(IG0302);
                obj_op.EnableControls(IG0303);
                obj_op.EnableControls(IG0304);
                obj_op.EnableControls(IG0305);
                obj_op.EnableControls(IG0306);
                obj_op.EnableControls(IG0307);
                obj_op.EnableControls(IG0308);
                obj_op.EnableControls(IG0309);
                obj_op.EnableControls(IG03010);

                obj_op.EnableControls(chkMember1);
                obj_op.EnableControls(chkMember2);
                obj_op.EnableControls(chkMember3);
                obj_op.EnableControls(chkMember4);
                obj_op.EnableControls(chkMember5);

                obj_op.EnableControls(IG0401);
                obj_op.EnableControls(IG0501);
                obj_op.EnableControls(IG060101);
                obj_op.EnableControls(IG060201);
                obj_op.EnableControls(IG060301);
                obj_op.EnableControls(IG060401);
                obj_op.EnableControls(IG060501);

                obj_op.EnableControls(IG070101);
                obj_op.EnableControls(IG070201);
                obj_op.EnableControls(IG070301);
                obj_op.EnableControls(IG070401);
                obj_op.EnableControls(IG070501);
                obj_op.EnableControls(IG070601);
                obj_op.EnableControls(IG070701);
                obj_op.EnableControls(IG070801);
                obj_op.EnableControls(IG070901);
                obj_op.EnableControls(IG0701001);
                obj_op.EnableControls(IG0701101);
                obj_op.EnableControls(IG0701201);
                obj_op.EnableControls(IG0701301);
                obj_op.EnableControls(IG0801);
                obj_op.EnableControls(IG0901);
                obj_op.EnableControls(IG01001);
                obj_op.EnableControls(IG01101);
                obj_op.EnableControls(IG01201);
                obj_op.EnableControls(IG01301);
                obj_op.EnableControls(IG01401);
                obj_op.EnableControls(IG01501);
                obj_op.EnableControls(IG160101);
                obj_op.EnableControls(IG160201);
                obj_op.EnableControls(IG160301);
                obj_op.EnableControls(IG160401);
                obj_op.EnableControls(IG160501);
                obj_op.EnableControls(IG160601);
                obj_op.EnableControls(IG160701);
                obj_op.EnableControls(IG160801);
                obj_op.EnableControls(IG160901);
                obj_op.EnableControls(IG1601001);
                obj_op.EnableControls(IG1601101);
                obj_op.EnableControls(IG1601201);



                obj_op.EnableControls(IG0402);
                obj_op.EnableControls(IG0502);
                obj_op.EnableControls(IG060102);
                obj_op.EnableControls(IG060202);
                obj_op.EnableControls(IG060302);
                obj_op.EnableControls(IG060402);
                obj_op.EnableControls(IG060502);

                obj_op.EnableControls(IG070102);
                obj_op.EnableControls(IG070202);
                obj_op.EnableControls(IG070302);
                obj_op.EnableControls(IG070402);
                obj_op.EnableControls(IG070502);
                obj_op.EnableControls(IG070602);
                obj_op.EnableControls(IG070702);
                obj_op.EnableControls(IG070802);
                obj_op.EnableControls(IG070902);
                obj_op.EnableControls(IG0701002);
                obj_op.EnableControls(IG0701102);
                obj_op.EnableControls(IG0701202);
                obj_op.EnableControls(IG0701302);
                obj_op.EnableControls(IG0802);
                obj_op.EnableControls(IG0902);
                obj_op.EnableControls(IG01002);
                obj_op.EnableControls(IG01102);
                obj_op.EnableControls(IG01202);
                obj_op.EnableControls(IG01302);
                obj_op.EnableControls(IG01402);
                obj_op.EnableControls(IG01502);
                obj_op.EnableControls(IG160102);
                obj_op.EnableControls(IG160202);
                obj_op.EnableControls(IG160302);
                obj_op.EnableControls(IG160402);
                obj_op.EnableControls(IG160502);
                obj_op.EnableControls(IG160602);
                obj_op.EnableControls(IG160702);
                obj_op.EnableControls(IG160802);
                obj_op.EnableControls(IG160902);
                obj_op.EnableControls(IG1601002);
                obj_op.EnableControls(IG1601102);
                obj_op.EnableControls(IG1601202);


                obj_op.EnableControls(IG0403);
                obj_op.EnableControls(IG0503);
                obj_op.EnableControls(IG060103);
                obj_op.EnableControls(IG060203);
                obj_op.EnableControls(IG060303);
                obj_op.EnableControls(IG060403);
                obj_op.EnableControls(IG060503);

                obj_op.EnableControls(IG070103);
                obj_op.EnableControls(IG070203);
                obj_op.EnableControls(IG070303);
                obj_op.EnableControls(IG070403);
                obj_op.EnableControls(IG070503);
                obj_op.EnableControls(IG070603);
                obj_op.EnableControls(IG070703);
                obj_op.EnableControls(IG070803);
                obj_op.EnableControls(IG070903);
                obj_op.EnableControls(IG0701003);
                obj_op.EnableControls(IG0701103);
                obj_op.EnableControls(IG0701203);
                obj_op.EnableControls(IG0701303);
                obj_op.EnableControls(IG0803);
                obj_op.EnableControls(IG0903);
                obj_op.EnableControls(IG01003);
                obj_op.EnableControls(IG01103);
                obj_op.EnableControls(IG01203);
                obj_op.EnableControls(IG01303);
                obj_op.EnableControls(IG01403);
                obj_op.EnableControls(IG01503);
                obj_op.EnableControls(IG160103);
                obj_op.EnableControls(IG160203);
                obj_op.EnableControls(IG160303);
                obj_op.EnableControls(IG160403);
                obj_op.EnableControls(IG160503);
                obj_op.EnableControls(IG160603);
                obj_op.EnableControls(IG160703);
                obj_op.EnableControls(IG160803);
                obj_op.EnableControls(IG160903);
                obj_op.EnableControls(IG1601003);
                obj_op.EnableControls(IG1601103);
                obj_op.EnableControls(IG1601203);



                obj_op.EnableControls(IG0404);
                obj_op.EnableControls(IG0504);
                obj_op.EnableControls(IG060104);
                obj_op.EnableControls(IG060204);
                obj_op.EnableControls(IG060304);
                obj_op.EnableControls(IG060404);
                obj_op.EnableControls(IG060504);

                obj_op.EnableControls(IG070104);
                obj_op.EnableControls(IG070204);
                obj_op.EnableControls(IG070304);
                obj_op.EnableControls(IG070404);
                obj_op.EnableControls(IG070504);
                obj_op.EnableControls(IG070604);
                obj_op.EnableControls(IG070704);
                obj_op.EnableControls(IG070804);
                obj_op.EnableControls(IG070904);
                obj_op.EnableControls(IG0701004);
                obj_op.EnableControls(IG0701104);
                obj_op.EnableControls(IG0701204);
                obj_op.EnableControls(IG0701304);
                obj_op.EnableControls(IG0804);
                obj_op.EnableControls(IG0904);
                obj_op.EnableControls(IG01004);
                obj_op.EnableControls(IG01104);
                obj_op.EnableControls(IG01204);
                obj_op.EnableControls(IG01304);
                obj_op.EnableControls(IG01404);
                obj_op.EnableControls(IG01504);
                obj_op.EnableControls(IG160104);
                obj_op.EnableControls(IG160204);
                obj_op.EnableControls(IG160304);
                obj_op.EnableControls(IG160404);
                obj_op.EnableControls(IG160504);
                obj_op.EnableControls(IG160604);
                obj_op.EnableControls(IG160704);
                obj_op.EnableControls(IG160804);
                obj_op.EnableControls(IG160904);
                obj_op.EnableControls(IG1601004);
                obj_op.EnableControls(IG1601104);
                obj_op.EnableControls(IG1601204);



                obj_op.EnableControls(IG0405);
                obj_op.EnableControls(IG0505);
                obj_op.EnableControls(IG060105);
                obj_op.EnableControls(IG060205);
                obj_op.EnableControls(IG060305);
                obj_op.EnableControls(IG060405);
                obj_op.EnableControls(IG060505);

                obj_op.EnableControls(IG070105);
                obj_op.EnableControls(IG070205);
                obj_op.EnableControls(IG070305);
                obj_op.EnableControls(IG070405);
                obj_op.EnableControls(IG070505);
                obj_op.EnableControls(IG070605);
                obj_op.EnableControls(IG070705);
                obj_op.EnableControls(IG070805);
                obj_op.EnableControls(IG070905);
                obj_op.EnableControls(IG0701005);
                obj_op.EnableControls(IG0701105);
                obj_op.EnableControls(IG0701205);
                obj_op.EnableControls(IG0701305);
                obj_op.EnableControls(IG0805);
                obj_op.EnableControls(IG0905);
                obj_op.EnableControls(IG01005);
                obj_op.EnableControls(IG01105);
                obj_op.EnableControls(IG01205);
                obj_op.EnableControls(IG01305);
                obj_op.EnableControls(IG01405);
                obj_op.EnableControls(IG01505);
                obj_op.EnableControls(IG160105);
                obj_op.EnableControls(IG160205);
                obj_op.EnableControls(IG160305);
                obj_op.EnableControls(IG160405);
                obj_op.EnableControls(IG160505);
                obj_op.EnableControls(IG160605);
                obj_op.EnableControls(IG160705);
                obj_op.EnableControls(IG160805);
                obj_op.EnableControls(IG160905);
                obj_op.EnableControls(IG1601005);
                obj_op.EnableControls(IG1601105);
                obj_op.EnableControls(IG1601205);


            }




            obj_op.EnableControls(chkBaby5);
            obj_op.EnableControls(IC0605);
            obj_op.EnableControls(IC0705);
            obj_op.EnableControls(IC0805);
            obj_op.EnableControls(IC0905);
            obj_op.EnableControls(IC01005);
            obj_op.EnableControls(IC01105);
            obj_op.EnableControls(chkBaby6);
            obj_op.EnableControls(IC0606);
            obj_op.EnableControls(IC0706);
            obj_op.EnableControls(IC0806);
            obj_op.EnableControls(IC0906);
            obj_op.EnableControls(IC01006);
            obj_op.EnableControls(IC01106);
            obj_op.EnableControls(chkBaby7);
            obj_op.EnableControls(IC0607);
            obj_op.EnableControls(IC0707);
            obj_op.EnableControls(IC0807);
            obj_op.EnableControls(IC0907);
            obj_op.EnableControls(IC01007);
            obj_op.EnableControls(IC01107);
            obj_op.EnableControls(chkBaby8);
            obj_op.EnableControls(IC0608);
            obj_op.EnableControls(IC0708);
            obj_op.EnableControls(IC0808);
            obj_op.EnableControls(IC0908);
            obj_op.EnableControls(IC01008);
            obj_op.EnableControls(IC01108);
            obj_op.EnableControls(chkBaby9);
            obj_op.EnableControls(IC0609);
            obj_op.EnableControls(IC0709);
            obj_op.EnableControls(IC0809);
            obj_op.EnableControls(IC0909);
            obj_op.EnableControls(IC01009);
            obj_op.EnableControls(IC01109);
            obj_op.EnableControls(chkBaby10);
            obj_op.EnableControls(IC06010);
            obj_op.EnableControls(IC07010);
            obj_op.EnableControls(IC08010);
            obj_op.EnableControls(IC09010);
            obj_op.EnableControls(IC01010);
            obj_op.EnableControls(IC01110);
            obj_op.EnableControls(chkBaby11);
            obj_op.EnableControls(IC06011);
            obj_op.EnableControls(IC07011);
            obj_op.EnableControls(IC08011);
            obj_op.EnableControls(IC09011);
            obj_op.EnableControls(IC01011);
            obj_op.EnableControls(IC01111);
            obj_op.EnableControls(chkMember6);


            obj_op.EnableControls(IG0406);
            obj_op.EnableControls(IG0506);
            obj_op.EnableControls(IG060106);
            obj_op.EnableControls(IG060206);
            obj_op.EnableControls(IG060306);
            obj_op.EnableControls(IG060406);
            obj_op.EnableControls(IG060506);
            obj_op.EnableControls(IG070106);
            obj_op.EnableControls(IG070206);
            obj_op.EnableControls(IG070306);
            obj_op.EnableControls(IG070406);
            obj_op.EnableControls(IG070506);
            obj_op.EnableControls(IG070606);
            obj_op.EnableControls(IG070706);
            obj_op.EnableControls(IG070806);
            obj_op.EnableControls(IG070906);
            obj_op.EnableControls(IG0701006);
            obj_op.EnableControls(IG0701106);
            obj_op.EnableControls(IG0701206);
            obj_op.EnableControls(IG0701306);
            obj_op.EnableControls(IG0806);
            obj_op.EnableControls(IG0906);
            obj_op.EnableControls(IG01006);
            obj_op.EnableControls(chkMember7);
            obj_op.EnableControls(IG0407);
            obj_op.EnableControls(IG0507);
            obj_op.EnableControls(IG060107);
            obj_op.EnableControls(IG060207);
            obj_op.EnableControls(IG060307);
            obj_op.EnableControls(IG060407);
            obj_op.EnableControls(IG060507);
            obj_op.EnableControls(IG070107);
            obj_op.EnableControls(IG070207);
            obj_op.EnableControls(IG070307);
            obj_op.EnableControls(IG070407);
            obj_op.EnableControls(IG070507);
            obj_op.EnableControls(IG070607);
            obj_op.EnableControls(IG070707);
            obj_op.EnableControls(IG070807);
            obj_op.EnableControls(IG070907);
            obj_op.EnableControls(IG0701007);
            obj_op.EnableControls(IG0701107);
            obj_op.EnableControls(IG0701207);
            obj_op.EnableControls(IG0701307);
            obj_op.EnableControls(IG0807);
            obj_op.EnableControls(IG0907);
            obj_op.EnableControls(IG01007);
            obj_op.EnableControls(chkMember8);
            obj_op.EnableControls(IG0408);
            obj_op.EnableControls(IG0508);
            obj_op.EnableControls(IG060108);
            obj_op.EnableControls(IG060208);
            obj_op.EnableControls(IG060308);
            obj_op.EnableControls(IG060408);
            obj_op.EnableControls(IG060508);
            obj_op.EnableControls(IG070108);
            obj_op.EnableControls(IG070208);
            obj_op.EnableControls(IG070308);
            obj_op.EnableControls(IG070408);
            obj_op.EnableControls(IG070508);
            obj_op.EnableControls(IG070608);
            obj_op.EnableControls(IG070708);
            obj_op.EnableControls(IG070808);
            obj_op.EnableControls(IG070908);
            obj_op.EnableControls(IG0701008);
            obj_op.EnableControls(IG0701108);
            obj_op.EnableControls(IG0701208);
            obj_op.EnableControls(IG0701308);
            obj_op.EnableControls(IG0808);
            obj_op.EnableControls(IG0908);
            obj_op.EnableControls(IG01008);
            obj_op.EnableControls(chkMember9);
            obj_op.EnableControls(IG0409);
            obj_op.EnableControls(IG0509);
            obj_op.EnableControls(IG060109);
            obj_op.EnableControls(IG060209);
            obj_op.EnableControls(IG060309);
            obj_op.EnableControls(IG060409);
            obj_op.EnableControls(IG060509);
            obj_op.EnableControls(IG070109);
            obj_op.EnableControls(IG070209);
            obj_op.EnableControls(IG070309);
            obj_op.EnableControls(IG070409);
            obj_op.EnableControls(IG070509);
            obj_op.EnableControls(IG070609);
            obj_op.EnableControls(IG070709);
            obj_op.EnableControls(IG070809);
            obj_op.EnableControls(IG070909);
            obj_op.EnableControls(IG0701009);
            obj_op.EnableControls(IG0701109);
            obj_op.EnableControls(IG0701209);
            obj_op.EnableControls(IG0701309);
            obj_op.EnableControls(IG0809);
            obj_op.EnableControls(IG0909);
            obj_op.EnableControls(IG01009);
            obj_op.EnableControls(chkMember10);
            obj_op.EnableControls(IG0410);
            obj_op.EnableControls(IG0510);
            obj_op.EnableControls(IG060110);
            obj_op.EnableControls(IG060210);
            obj_op.EnableControls(IG060310);
            obj_op.EnableControls(IG060410);
            obj_op.EnableControls(IG060510);
            obj_op.EnableControls(IG070110);
            obj_op.EnableControls(IG070210);
            obj_op.EnableControls(IG070310);
            obj_op.EnableControls(IG070410);
            obj_op.EnableControls(IG070510);
            obj_op.EnableControls(IG070610);
            obj_op.EnableControls(IG070710);
            obj_op.EnableControls(IG070810);
            obj_op.EnableControls(IG070910);
            obj_op.EnableControls(IG0701010);
            obj_op.EnableControls(IG0701110);
            obj_op.EnableControls(IG0701210);
            obj_op.EnableControls(IG0701310);
            obj_op.EnableControls(IG0810);
            obj_op.EnableControls(IG0910);
            obj_op.EnableControls(IG01010);
            obj_op.EnableControls(IG01106);
            obj_op.EnableControls(IG01206);
            obj_op.EnableControls(IG01306);
            obj_op.EnableControls(IG01406);
            obj_op.EnableControls(IG01506);
            obj_op.EnableControls(IG01107);
            obj_op.EnableControls(IG01207);
            obj_op.EnableControls(IG01307);
            obj_op.EnableControls(IG01407);
            obj_op.EnableControls(IG01507);
            obj_op.EnableControls(IG01108);
            obj_op.EnableControls(IG01208);
            obj_op.EnableControls(IG01308);
            obj_op.EnableControls(IG01408);
            obj_op.EnableControls(IG01508);
            obj_op.EnableControls(IG01109);
            obj_op.EnableControls(IG01209);
            obj_op.EnableControls(IG01309);
            obj_op.EnableControls(IG01409);
            obj_op.EnableControls(IG01509);
            obj_op.EnableControls(IG01110);
            obj_op.EnableControls(IG01210);
            obj_op.EnableControls(IG01310);
            obj_op.EnableControls(IG01410);
            obj_op.EnableControls(IG01510);
            obj_op.EnableControls(IG160106);
            obj_op.EnableControls(IG160206);
            obj_op.EnableControls(IG160306);
            obj_op.EnableControls(IG160406);
            obj_op.EnableControls(IG160506);
            obj_op.EnableControls(IG160606);
            obj_op.EnableControls(IG160706);
            obj_op.EnableControls(IG160806);
            obj_op.EnableControls(IG160906);
            obj_op.EnableControls(IG1601006);
            obj_op.EnableControls(IG1601106);
            obj_op.EnableControls(IG1601206);
            obj_op.EnableControls(IG160107);
            obj_op.EnableControls(IG160207);
            obj_op.EnableControls(IG160307);
            obj_op.EnableControls(IG160407);
            obj_op.EnableControls(IG160507);
            obj_op.EnableControls(IG160607);
            obj_op.EnableControls(IG160707);
            obj_op.EnableControls(IG160807);
            obj_op.EnableControls(IG160907);
            obj_op.EnableControls(IG1601007);
            obj_op.EnableControls(IG1601107);
            obj_op.EnableControls(IG1601207);
            obj_op.EnableControls(IG160108);
            obj_op.EnableControls(IG160208);
            obj_op.EnableControls(IG160308);
            obj_op.EnableControls(IG160408);
            obj_op.EnableControls(IG160508);
            obj_op.EnableControls(IG160608);
            obj_op.EnableControls(IG160708);
            obj_op.EnableControls(IG160808);
            obj_op.EnableControls(IG160908);
            obj_op.EnableControls(IG1601008);
            obj_op.EnableControls(IG1601108);
            obj_op.EnableControls(IG1601208);
            obj_op.EnableControls(IG160109);
            obj_op.EnableControls(IG160209);
            obj_op.EnableControls(IG160309);
            obj_op.EnableControls(IG160409);
            obj_op.EnableControls(IG160509);
            obj_op.EnableControls(IG160609);
            obj_op.EnableControls(IG160709);
            obj_op.EnableControls(IG160809);
            obj_op.EnableControls(IG160909);
            obj_op.EnableControls(IG1601009);
            obj_op.EnableControls(IG1601109);
            obj_op.EnableControls(IG1601209);
            obj_op.EnableControls(IG160110);
            obj_op.EnableControls(IG160210);
            obj_op.EnableControls(IG160310);
            obj_op.EnableControls(IG160410);
            obj_op.EnableControls(IG160510);
            obj_op.EnableControls(IG160610);
            obj_op.EnableControls(IG160710);
            obj_op.EnableControls(IG160810);
            obj_op.EnableControls(IG160910);
            obj_op.EnableControls(IG1601010);
            obj_op.EnableControls(IG1601110);
            obj_op.EnableControls(IG1601210);
            obj_op.EnableControls(chkMember11);
            obj_op.EnableControls(IG0411);
            obj_op.EnableControls(IG0511);
            obj_op.EnableControls(IG060111);
            obj_op.EnableControls(IG060211);
            obj_op.EnableControls(IG060311);
            obj_op.EnableControls(IG060411);
            obj_op.EnableControls(IG060511);
            obj_op.EnableControls(chkMember12);
            obj_op.EnableControls(IG0412);
            obj_op.EnableControls(IG0512);
            obj_op.EnableControls(IG060112);
            obj_op.EnableControls(IG060212);
            obj_op.EnableControls(IG060312);
            obj_op.EnableControls(IG060412);
            obj_op.EnableControls(IG060512);
            obj_op.EnableControls(chkMember13);
            obj_op.EnableControls(IG0413);
            obj_op.EnableControls(IG0513);
            obj_op.EnableControls(IG060113);
            obj_op.EnableControls(IG060213);
            obj_op.EnableControls(IG060313);
            obj_op.EnableControls(IG060413);
            obj_op.EnableControls(IG060513);
            obj_op.EnableControls(chkMember14);
            obj_op.EnableControls(IG0414);
            obj_op.EnableControls(IG0514);
            obj_op.EnableControls(IG060114);
            obj_op.EnableControls(IG060214);
            obj_op.EnableControls(IG060314);
            obj_op.EnableControls(IG060414);
            obj_op.EnableControls(IG060514);
            obj_op.EnableControls(chkMember15);
            obj_op.EnableControls(IG0415);
            obj_op.EnableControls(IG0515);
            obj_op.EnableControls(IG060115);
            obj_op.EnableControls(IG060215);
            obj_op.EnableControls(IG060315);
            obj_op.EnableControls(IG060415);
            obj_op.EnableControls(IG060515);
            obj_op.EnableControls(IG070111);
            obj_op.EnableControls(IG070211);
            obj_op.EnableControls(IG070311);
            obj_op.EnableControls(IG070411);
            obj_op.EnableControls(IG070511);
            obj_op.EnableControls(IG070611);
            obj_op.EnableControls(IG070711);
            obj_op.EnableControls(IG070811);
            obj_op.EnableControls(IG070911);
            obj_op.EnableControls(IG0701011);
            obj_op.EnableControls(IG0701111);
            obj_op.EnableControls(IG0701211);
            obj_op.EnableControls(IG0701311);
            obj_op.EnableControls(IG0811);
            obj_op.EnableControls(IG0911);
            obj_op.EnableControls(IG01011);
            obj_op.EnableControls(IG01111);
            obj_op.EnableControls(IG01211);
            obj_op.EnableControls(IG01311);
            obj_op.EnableControls(IG01411);
            obj_op.EnableControls(IG01511);
            obj_op.EnableControls(IG070112);
            obj_op.EnableControls(IG070212);
            obj_op.EnableControls(IG070312);
            obj_op.EnableControls(IG070412);
            obj_op.EnableControls(IG070512);
            obj_op.EnableControls(IG070612);
            obj_op.EnableControls(IG070712);
            obj_op.EnableControls(IG070812);
            obj_op.EnableControls(IG070912);
            obj_op.EnableControls(IG0701012);
            obj_op.EnableControls(IG0701112);
            obj_op.EnableControls(IG0701212);
            obj_op.EnableControls(IG0701312);
            obj_op.EnableControls(IG0812);
            obj_op.EnableControls(IG0912);
            obj_op.EnableControls(IG01012);
            obj_op.EnableControls(IG01112);
            obj_op.EnableControls(IG01212);
            obj_op.EnableControls(IG01312);
            obj_op.EnableControls(IG01412);
            obj_op.EnableControls(IG01512);
            obj_op.EnableControls(IG070113);
            obj_op.EnableControls(IG070213);
            obj_op.EnableControls(IG070313);
            obj_op.EnableControls(IG070413);
            obj_op.EnableControls(IG070513);
            obj_op.EnableControls(IG070613);
            obj_op.EnableControls(IG070713);
            obj_op.EnableControls(IG070813);
            obj_op.EnableControls(IG070913);
            obj_op.EnableControls(IG0701013);
            obj_op.EnableControls(IG0701113);
            obj_op.EnableControls(IG0701213);
            obj_op.EnableControls(IG0701313);
            obj_op.EnableControls(IG0813);
            obj_op.EnableControls(IG0913);
            obj_op.EnableControls(IG01013);
            obj_op.EnableControls(IG01113);
            obj_op.EnableControls(IG01213);
            obj_op.EnableControls(IG01313);
            obj_op.EnableControls(IG01413);
            obj_op.EnableControls(IG01513);
            obj_op.EnableControls(IG070114);
            obj_op.EnableControls(IG070214);
            obj_op.EnableControls(IG070314);
            obj_op.EnableControls(IG070414);
            obj_op.EnableControls(IG070514);
            obj_op.EnableControls(IG070614);
            obj_op.EnableControls(IG070714);
            obj_op.EnableControls(IG070814);
            obj_op.EnableControls(IG070914);
            obj_op.EnableControls(IG0701014);
            obj_op.EnableControls(IG0701114);
            obj_op.EnableControls(IG0701214);
            obj_op.EnableControls(IG0701314);
            obj_op.EnableControls(IG0814);
            obj_op.EnableControls(IG0914);
            obj_op.EnableControls(IG01014);
            obj_op.EnableControls(IG01114);
            obj_op.EnableControls(IG01214);
            obj_op.EnableControls(IG01314);
            obj_op.EnableControls(IG01414);
            obj_op.EnableControls(IG01514);
            obj_op.EnableControls(IG070115);
            obj_op.EnableControls(IG070215);
            obj_op.EnableControls(IG070315);
            obj_op.EnableControls(IG070415);
            obj_op.EnableControls(IG070515);
            obj_op.EnableControls(IG070615);
            obj_op.EnableControls(IG070715);
            obj_op.EnableControls(IG070815);
            obj_op.EnableControls(IG070915);
            obj_op.EnableControls(IG0701015);
            obj_op.EnableControls(IG0701115);
            obj_op.EnableControls(IG0701215);
            obj_op.EnableControls(IG0701315);
            obj_op.EnableControls(IG0815);
            obj_op.EnableControls(IG0915);
            obj_op.EnableControls(IG01015);
            obj_op.EnableControls(IG01115);
            obj_op.EnableControls(IG01215);
            obj_op.EnableControls(IG01315);
            obj_op.EnableControls(IG01415);
            obj_op.EnableControls(IG01515);
            obj_op.EnableControls(IG160111);
            obj_op.EnableControls(IG160211);
            obj_op.EnableControls(IG160311);
            obj_op.EnableControls(IG160411);
            obj_op.EnableControls(IG160511);
            obj_op.EnableControls(IG160611);
            obj_op.EnableControls(IG160711);
            obj_op.EnableControls(IG160811);
            obj_op.EnableControls(IG160911);
            obj_op.EnableControls(IG1601011);
            obj_op.EnableControls(IG1601111);
            obj_op.EnableControls(IG1601211);
            obj_op.EnableControls(IG160112);
            obj_op.EnableControls(IG160212);
            obj_op.EnableControls(IG160312);
            obj_op.EnableControls(IG160412);
            obj_op.EnableControls(IG160512);
            obj_op.EnableControls(IG160612);
            obj_op.EnableControls(IG160712);
            obj_op.EnableControls(IG160812);
            obj_op.EnableControls(IG160912);
            obj_op.EnableControls(IG1601012);
            obj_op.EnableControls(IG1601112);
            obj_op.EnableControls(IG1601212);
            obj_op.EnableControls(IG160113);
            obj_op.EnableControls(IG160213);
            obj_op.EnableControls(IG160313);
            obj_op.EnableControls(IG160413);
            obj_op.EnableControls(IG160513);
            obj_op.EnableControls(IG160613);
            obj_op.EnableControls(IG160713);
            obj_op.EnableControls(IG160813);
            obj_op.EnableControls(IG160913);
            obj_op.EnableControls(IG1601013);
            obj_op.EnableControls(IG1601113);
            obj_op.EnableControls(IG1601213);
            obj_op.EnableControls(IG160114);
            obj_op.EnableControls(IG160214);
            obj_op.EnableControls(IG160314);
            obj_op.EnableControls(IG160414);
            obj_op.EnableControls(IG160514);
            obj_op.EnableControls(IG160614);
            obj_op.EnableControls(IG160714);
            obj_op.EnableControls(IG160814);
            obj_op.EnableControls(IG160914);
            obj_op.EnableControls(IG1601014);
            obj_op.EnableControls(IG1601114);
            obj_op.EnableControls(IG1601214);
            obj_op.EnableControls(IG160115);
            obj_op.EnableControls(IG160215);
            obj_op.EnableControls(IG160315);
            obj_op.EnableControls(IG160415);
            obj_op.EnableControls(IG160515);
            obj_op.EnableControls(IG160615);
            obj_op.EnableControls(IG160715);
            obj_op.EnableControls(IG160815);
            obj_op.EnableControls(IG160915);
            obj_op.EnableControls(IG1601015);
            obj_op.EnableControls(IG1601115);
            obj_op.EnableControls(IG1601215);

            obj_op = null;

        }



        private void Consent_No()
        {
            CDBOperations obj_op = new CDBOperations();

            //obj_op.DisableControls(IA01);
            //obj_op.DisableControls(IA02);
            //obj_op.DisableControls(IA03);
            //obj_op.DisableControls(IA04);
            //obj_op.DisableControls(IA05);
            //obj_op.DisableControls(IB01);
            //obj_op.DisableControls(IB02);
            //obj_op.DisableControls(IB03);
            //obj_op.DisableControls(IB04);
            //obj_op.DisableControls(IB05);

            //obj_op.DisableControls(IB06);

            obj_op.DisableControls(IB07);
            obj_op.DisableControls(IB08);
            obj_op.DisableControls(IB0901);
            obj_op.DisableControls(IB0902);
            obj_op.DisableControls(IB0903);
            obj_op.DisableControls(IB0996);
            obj_op.DisableControls(IB011);
            obj_op.DisableControls(IC01);
            obj_op.DisableControls(IC02);
            obj_op.DisableControls(IC03);
            obj_op.DisableControls(IC04);
            obj_op.DisableControls(IC05);
            obj_op.DisableControls(chkBaby1);
            obj_op.DisableControls(IC0601);
            obj_op.DisableControls(IC0701);
            obj_op.DisableControls(IC0801);
            obj_op.DisableControls(IC0901);
            obj_op.DisableControls(IC01001);
            obj_op.DisableControls(IC01101);
            obj_op.DisableControls(chkBaby2);
            obj_op.DisableControls(IC0602);
            obj_op.DisableControls(IC0702);
            obj_op.DisableControls(IC0802);
            obj_op.DisableControls(IC0902);
            obj_op.DisableControls(IC01002);
            obj_op.DisableControls(IC01102);
            obj_op.DisableControls(chkBaby3);
            obj_op.DisableControls(IC0603);
            obj_op.DisableControls(IC0703);
            obj_op.DisableControls(IC0803);
            obj_op.DisableControls(IC0903);
            obj_op.DisableControls(IC01003);
            obj_op.DisableControls(IC01103);
            obj_op.DisableControls(chkBaby4);
            obj_op.DisableControls(IC0604);
            obj_op.DisableControls(IC0704);
            obj_op.DisableControls(IC0804);
            obj_op.DisableControls(IC0904);
            obj_op.DisableControls(IC01004);
            obj_op.DisableControls(IC01104);
            obj_op.DisableControls(ID01);
            obj_op.DisableControls(ID02);
            obj_op.DisableControls(ID03);
            obj_op.DisableControls(ID04);
            obj_op.DisableControls(IE01);
            obj_op.DisableControls(IE02);
            obj_op.DisableControls(IE03);
            obj_op.DisableControls(IE04);
            obj_op.DisableControls(chkHHMem1);
            obj_op.DisableControls(IE0701);
            obj_op.DisableControls(chkHHMem2);
            obj_op.DisableControls(IE0702);
            obj_op.DisableControls(chkHHMem3);
            obj_op.DisableControls(IE0703);
            obj_op.DisableControls(chkHHMem4);
            obj_op.DisableControls(IE0704);
            obj_op.DisableControls(IE0801);
            obj_op.DisableControls(IE0901);
            obj_op.DisableControls(IE0802);
            obj_op.DisableControls(IE0902);
            obj_op.DisableControls(IE0803);
            obj_op.DisableControls(IE0903);
            obj_op.DisableControls(IE0804);
            obj_op.DisableControls(IE0904);
            obj_op.DisableControls(IF01);
            obj_op.DisableControls(IF02);
            obj_op.DisableControls(IF03);
            obj_op.DisableControls(IF04);
            obj_op.DisableControls(chkPW1);
            obj_op.DisableControls(IF0601);
            obj_op.DisableControls(chkPW2);
            obj_op.DisableControls(IF0602);
            obj_op.DisableControls(chkPW3);
            obj_op.DisableControls(IF0603);
            obj_op.DisableControls(chkPW4);
            obj_op.DisableControls(IF0604);
            obj_op.DisableControls(IG01);
            obj_op.DisableControls(IG02);
            obj_op.DisableControls(IG0301);
            obj_op.DisableControls(IG0302);
            obj_op.DisableControls(IG0303);
            obj_op.DisableControls(IG0304);
            obj_op.DisableControls(IG0305);
            obj_op.DisableControls(IG0306);
            obj_op.DisableControls(IG0307);
            obj_op.DisableControls(IG0308);
            obj_op.DisableControls(IG0309);
            obj_op.DisableControls(IG03010);
            obj_op.DisableControls(chkMember1);
            obj_op.DisableControls(IG0401);
            obj_op.DisableControls(IG0501);
            obj_op.DisableControls(IG060101);
            obj_op.DisableControls(IG060201);
            obj_op.DisableControls(IG060301);
            obj_op.DisableControls(IG060401);
            obj_op.DisableControls(IG060501);
            obj_op.DisableControls(IG070101);
            obj_op.DisableControls(IG070201);
            obj_op.DisableControls(IG070301);
            obj_op.DisableControls(IG070401);
            obj_op.DisableControls(chkMember2);
            obj_op.DisableControls(IG0402);
            obj_op.DisableControls(IG0502);
            obj_op.DisableControls(IG060102);
            obj_op.DisableControls(IG060202);
            obj_op.DisableControls(IG060302);
            obj_op.DisableControls(IG060402);
            obj_op.DisableControls(IG060502);
            obj_op.DisableControls(IG070102);
            obj_op.DisableControls(IG070202);
            obj_op.DisableControls(IG070302);
            obj_op.DisableControls(IG070402);
            obj_op.DisableControls(chkMember3);
            obj_op.DisableControls(IG0403);
            obj_op.DisableControls(IG0503);
            obj_op.DisableControls(IG060103);
            obj_op.DisableControls(IG060203);
            obj_op.DisableControls(IG060303);
            obj_op.DisableControls(IG060403);
            obj_op.DisableControls(IG060503);
            obj_op.DisableControls(IG070103);
            obj_op.DisableControls(IG070203);
            obj_op.DisableControls(IG070303);
            obj_op.DisableControls(IG070403);
            obj_op.DisableControls(chkMember4);
            obj_op.DisableControls(IG0404);
            obj_op.DisableControls(IG0504);
            obj_op.DisableControls(IG060104);
            obj_op.DisableControls(IG060204);
            obj_op.DisableControls(IG060304);
            obj_op.DisableControls(IG060404);
            obj_op.DisableControls(IG060504);
            obj_op.DisableControls(IG070104);
            obj_op.DisableControls(IG070204);
            obj_op.DisableControls(IG070304);
            obj_op.DisableControls(IG070404);
            obj_op.DisableControls(chkMember5);
            obj_op.DisableControls(IG0405);
            obj_op.DisableControls(IG0505);
            obj_op.DisableControls(IG060105);
            obj_op.DisableControls(IG060205);
            obj_op.DisableControls(IG060305);
            obj_op.DisableControls(IG060405);
            obj_op.DisableControls(IG060505);
            obj_op.DisableControls(IG070105);
            obj_op.DisableControls(IG070205);
            obj_op.DisableControls(IG070305);
            obj_op.DisableControls(IG070405);
            obj_op.DisableControls(IG070501);
            obj_op.DisableControls(IG070601);
            obj_op.DisableControls(IG070701);
            obj_op.DisableControls(IG070801);
            obj_op.DisableControls(IG070901);
            obj_op.DisableControls(IG0701001);
            obj_op.DisableControls(IG0701101);
            obj_op.DisableControls(IG0701201);
            obj_op.DisableControls(IG0701301);
            obj_op.DisableControls(IG0801);
            obj_op.DisableControls(IG0901);
            obj_op.DisableControls(IG01001);
            obj_op.DisableControls(IG01101);
            obj_op.DisableControls(IG01201);
            obj_op.DisableControls(IG01301);
            obj_op.DisableControls(IG01401);
            obj_op.DisableControls(IG01501);
            obj_op.DisableControls(IG160101);
            obj_op.DisableControls(IG160201);
            obj_op.DisableControls(IG160301);
            obj_op.DisableControls(IG160401);
            obj_op.DisableControls(IG160501);
            obj_op.DisableControls(IG160601);
            obj_op.DisableControls(IG160701);
            obj_op.DisableControls(IG160801);
            obj_op.DisableControls(IG160901);
            obj_op.DisableControls(IG1601001);
            obj_op.DisableControls(IG1601101);
            obj_op.DisableControls(IG1601201);
            obj_op.DisableControls(IG070502);
            obj_op.DisableControls(IG070602);
            obj_op.DisableControls(IG070702);
            obj_op.DisableControls(IG070802);
            obj_op.DisableControls(IG070902);
            obj_op.DisableControls(IG0701002);
            obj_op.DisableControls(IG0701102);
            obj_op.DisableControls(IG0701202);
            obj_op.DisableControls(IG0701302);
            obj_op.DisableControls(IG0802);
            obj_op.DisableControls(IG0902);
            obj_op.DisableControls(IG01002);
            obj_op.DisableControls(IG01102);
            obj_op.DisableControls(IG01202);
            obj_op.DisableControls(IG01302);
            obj_op.DisableControls(IG01402);
            obj_op.DisableControls(IG01502);
            obj_op.DisableControls(IG160102);
            obj_op.DisableControls(IG160202);
            obj_op.DisableControls(IG160302);
            obj_op.DisableControls(IG160402);
            obj_op.DisableControls(IG160502);
            obj_op.DisableControls(IG160602);
            obj_op.DisableControls(IG160702);
            obj_op.DisableControls(IG160802);
            obj_op.DisableControls(IG160902);
            obj_op.DisableControls(IG1601002);
            obj_op.DisableControls(IG1601102);
            obj_op.DisableControls(IG1601202);
            obj_op.DisableControls(IG070503);
            obj_op.DisableControls(IG070603);
            obj_op.DisableControls(IG070703);
            obj_op.DisableControls(IG070803);
            obj_op.DisableControls(IG070903);
            obj_op.DisableControls(IG0701003);
            obj_op.DisableControls(IG0701103);
            obj_op.DisableControls(IG0701203);
            obj_op.DisableControls(IG0701303);
            obj_op.DisableControls(IG0803);
            obj_op.DisableControls(IG0903);
            obj_op.DisableControls(IG01003);
            obj_op.DisableControls(IG01103);
            obj_op.DisableControls(IG01203);
            obj_op.DisableControls(IG01303);
            obj_op.DisableControls(IG01403);
            obj_op.DisableControls(IG01503);
            obj_op.DisableControls(IG160103);
            obj_op.DisableControls(IG160203);
            obj_op.DisableControls(IG160303);
            obj_op.DisableControls(IG160403);
            obj_op.DisableControls(IG160503);
            obj_op.DisableControls(IG160603);
            obj_op.DisableControls(IG160703);
            obj_op.DisableControls(IG160803);
            obj_op.DisableControls(IG160903);
            obj_op.DisableControls(IG1601003);
            obj_op.DisableControls(IG1601103);
            obj_op.DisableControls(IG1601203);
            obj_op.DisableControls(IG070504);
            obj_op.DisableControls(IG070604);
            obj_op.DisableControls(IG070704);
            obj_op.DisableControls(IG070804);
            obj_op.DisableControls(IG070904);
            obj_op.DisableControls(IG0701004);
            obj_op.DisableControls(IG0701104);
            obj_op.DisableControls(IG0701204);
            obj_op.DisableControls(IG0701304);
            obj_op.DisableControls(IG0804);
            obj_op.DisableControls(IG0904);
            obj_op.DisableControls(IG01004);
            obj_op.DisableControls(IG01104);
            obj_op.DisableControls(IG01204);
            obj_op.DisableControls(IG01304);
            obj_op.DisableControls(IG01404);
            obj_op.DisableControls(IG01504);
            obj_op.DisableControls(IG160104);
            obj_op.DisableControls(IG160204);
            obj_op.DisableControls(IG160304);
            obj_op.DisableControls(IG160404);
            obj_op.DisableControls(IG160504);
            obj_op.DisableControls(IG160604);
            obj_op.DisableControls(IG160704);
            obj_op.DisableControls(IG160804);
            obj_op.DisableControls(IG160904);
            obj_op.DisableControls(IG1601004);
            obj_op.DisableControls(IG1601104);
            obj_op.DisableControls(IG1601204);
            obj_op.DisableControls(IG070505);
            obj_op.DisableControls(IG070605);
            obj_op.DisableControls(IG070705);
            obj_op.DisableControls(IG070805);
            obj_op.DisableControls(IG070905);
            obj_op.DisableControls(IG0701005);
            obj_op.DisableControls(IG0701105);
            obj_op.DisableControls(IG0701205);
            obj_op.DisableControls(IG0701305);
            obj_op.DisableControls(IG0805);
            obj_op.DisableControls(IG0905);
            obj_op.DisableControls(IG01005);
            obj_op.DisableControls(IG01105);
            obj_op.DisableControls(IG01205);
            obj_op.DisableControls(IG01305);
            obj_op.DisableControls(IG01405);
            obj_op.DisableControls(IG01505);
            obj_op.DisableControls(IG160105);
            obj_op.DisableControls(IG160205);
            obj_op.DisableControls(IG160305);
            obj_op.DisableControls(IG160405);
            obj_op.DisableControls(IG160505);
            obj_op.DisableControls(IG160605);
            obj_op.DisableControls(IG160705);
            obj_op.DisableControls(IG160805);
            obj_op.DisableControls(IG160905);
            obj_op.DisableControls(IG1601005);
            obj_op.DisableControls(IG1601105);
            obj_op.DisableControls(IG1601205);

            //obj_op.DisableControls(QCFUP01);
            //obj_op.DisableControls(QCFUP02);
            //obj_op.DisableControls(QCFUP03);
            //obj_op.DisableControls(QCFUP04);
            //obj_op.DisableControls(QCFUP05);
            //obj_op.DisableControls(QCFUP06);
            //obj_op.DisableControls(QCFUP07);

            obj_op.DisableControls(chkBaby5);
            obj_op.DisableControls(IC0605);
            obj_op.DisableControls(IC0705);
            obj_op.DisableControls(IC0805);
            obj_op.DisableControls(IC0905);
            obj_op.DisableControls(IC01005);
            obj_op.DisableControls(IC01105);
            obj_op.DisableControls(chkBaby6);
            obj_op.DisableControls(IC0606);
            obj_op.DisableControls(IC0706);
            obj_op.DisableControls(IC0806);
            obj_op.DisableControls(IC0906);
            obj_op.DisableControls(IC01006);
            obj_op.DisableControls(IC01106);
            obj_op.DisableControls(chkBaby7);
            obj_op.DisableControls(IC0607);
            obj_op.DisableControls(IC0707);
            obj_op.DisableControls(IC0807);
            obj_op.DisableControls(IC0907);
            obj_op.DisableControls(IC01007);
            obj_op.DisableControls(IC01107);
            obj_op.DisableControls(chkBaby8);
            obj_op.DisableControls(IC0608);
            obj_op.DisableControls(IC0708);
            obj_op.DisableControls(IC0808);
            obj_op.DisableControls(IC0908);
            obj_op.DisableControls(IC01008);
            obj_op.DisableControls(IC01108);
            obj_op.DisableControls(chkBaby9);
            obj_op.DisableControls(IC0609);
            obj_op.DisableControls(IC0709);
            obj_op.DisableControls(IC0809);
            obj_op.DisableControls(IC0909);
            obj_op.DisableControls(IC01009);
            obj_op.DisableControls(IC01109);
            obj_op.DisableControls(chkBaby10);
            obj_op.DisableControls(IC06010);
            obj_op.DisableControls(IC07010);
            obj_op.DisableControls(IC08010);
            obj_op.DisableControls(IC09010);
            obj_op.DisableControls(IC01010);
            obj_op.DisableControls(IC01110);
            obj_op.DisableControls(chkBaby11);
            obj_op.DisableControls(IC06011);
            obj_op.DisableControls(IC07011);
            obj_op.DisableControls(IC08011);
            obj_op.DisableControls(IC09011);
            obj_op.DisableControls(IC01011);
            obj_op.DisableControls(IC01111);
            obj_op.DisableControls(chkMember6);
            obj_op.DisableControls(IG0406);
            obj_op.DisableControls(IG0506);
            obj_op.DisableControls(IG060106);
            obj_op.DisableControls(IG060206);
            obj_op.DisableControls(IG060306);
            obj_op.DisableControls(IG060406);
            obj_op.DisableControls(IG060506);
            obj_op.DisableControls(IG070106);
            obj_op.DisableControls(IG070206);
            obj_op.DisableControls(IG070306);
            obj_op.DisableControls(IG070406);
            obj_op.DisableControls(IG070506);
            obj_op.DisableControls(IG070606);
            obj_op.DisableControls(IG070706);
            obj_op.DisableControls(IG070806);
            obj_op.DisableControls(IG070906);
            obj_op.DisableControls(IG0701006);
            obj_op.DisableControls(IG0701106);
            obj_op.DisableControls(IG0701206);
            obj_op.DisableControls(IG0701306);
            obj_op.DisableControls(IG0806);
            obj_op.DisableControls(IG0906);
            obj_op.DisableControls(IG01006);
            obj_op.DisableControls(chkMember7);
            obj_op.DisableControls(IG0407);
            obj_op.DisableControls(IG0507);
            obj_op.DisableControls(IG060107);
            obj_op.DisableControls(IG060207);
            obj_op.DisableControls(IG060307);
            obj_op.DisableControls(IG060407);
            obj_op.DisableControls(IG060507);
            obj_op.DisableControls(IG070107);
            obj_op.DisableControls(IG070207);
            obj_op.DisableControls(IG070307);
            obj_op.DisableControls(IG070407);
            obj_op.DisableControls(IG070507);
            obj_op.DisableControls(IG070607);
            obj_op.DisableControls(IG070707);
            obj_op.DisableControls(IG070807);
            obj_op.DisableControls(IG070907);
            obj_op.DisableControls(IG0701007);
            obj_op.DisableControls(IG0701107);
            obj_op.DisableControls(IG0701207);
            obj_op.DisableControls(IG0701307);
            obj_op.DisableControls(IG0807);
            obj_op.DisableControls(IG0907);
            obj_op.DisableControls(IG01007);
            obj_op.DisableControls(chkMember8);
            obj_op.DisableControls(IG0408);
            obj_op.DisableControls(IG0508);
            obj_op.DisableControls(IG060108);
            obj_op.DisableControls(IG060208);
            obj_op.DisableControls(IG060308);
            obj_op.DisableControls(IG060408);
            obj_op.DisableControls(IG060508);
            obj_op.DisableControls(IG070108);
            obj_op.DisableControls(IG070208);
            obj_op.DisableControls(IG070308);
            obj_op.DisableControls(IG070408);
            obj_op.DisableControls(IG070508);
            obj_op.DisableControls(IG070608);
            obj_op.DisableControls(IG070708);
            obj_op.DisableControls(IG070808);
            obj_op.DisableControls(IG070908);
            obj_op.DisableControls(IG0701008);
            obj_op.DisableControls(IG0701108);
            obj_op.DisableControls(IG0701208);
            obj_op.DisableControls(IG0701308);
            obj_op.DisableControls(IG0808);
            obj_op.DisableControls(IG0908);
            obj_op.DisableControls(IG01008);
            obj_op.DisableControls(chkMember9);
            obj_op.DisableControls(IG0409);
            obj_op.DisableControls(IG0509);
            obj_op.DisableControls(IG060109);
            obj_op.DisableControls(IG060209);
            obj_op.DisableControls(IG060309);
            obj_op.DisableControls(IG060409);
            obj_op.DisableControls(IG060509);
            obj_op.DisableControls(IG070109);
            obj_op.DisableControls(IG070209);
            obj_op.DisableControls(IG070309);
            obj_op.DisableControls(IG070409);
            obj_op.DisableControls(IG070509);
            obj_op.DisableControls(IG070609);
            obj_op.DisableControls(IG070709);
            obj_op.DisableControls(IG070809);
            obj_op.DisableControls(IG070909);
            obj_op.DisableControls(IG0701009);
            obj_op.DisableControls(IG0701109);
            obj_op.DisableControls(IG0701209);
            obj_op.DisableControls(IG0701309);
            obj_op.DisableControls(IG0809);
            obj_op.DisableControls(IG0909);
            obj_op.DisableControls(IG01009);
            obj_op.DisableControls(chkMember10);
            obj_op.DisableControls(IG0410);
            obj_op.DisableControls(IG0510);
            obj_op.DisableControls(IG060110);
            obj_op.DisableControls(IG060210);
            obj_op.DisableControls(IG060310);
            obj_op.DisableControls(IG060410);
            obj_op.DisableControls(IG060510);
            obj_op.DisableControls(IG070110);
            obj_op.DisableControls(IG070210);
            obj_op.DisableControls(IG070310);
            obj_op.DisableControls(IG070410);
            obj_op.DisableControls(IG070510);
            obj_op.DisableControls(IG070610);
            obj_op.DisableControls(IG070710);
            obj_op.DisableControls(IG070810);
            obj_op.DisableControls(IG070910);
            obj_op.DisableControls(IG0701010);
            obj_op.DisableControls(IG0701110);
            obj_op.DisableControls(IG0701210);
            obj_op.DisableControls(IG0701310);
            obj_op.DisableControls(IG0810);
            obj_op.DisableControls(IG0910);
            obj_op.DisableControls(IG01010);
            obj_op.DisableControls(IG01106);
            obj_op.DisableControls(IG01206);
            obj_op.DisableControls(IG01306);
            obj_op.DisableControls(IG01406);
            obj_op.DisableControls(IG01506);
            obj_op.DisableControls(IG01107);
            obj_op.DisableControls(IG01207);
            obj_op.DisableControls(IG01307);
            obj_op.DisableControls(IG01407);
            obj_op.DisableControls(IG01507);
            obj_op.DisableControls(IG01108);
            obj_op.DisableControls(IG01208);
            obj_op.DisableControls(IG01308);
            obj_op.DisableControls(IG01408);
            obj_op.DisableControls(IG01508);
            obj_op.DisableControls(IG01109);
            obj_op.DisableControls(IG01209);
            obj_op.DisableControls(IG01309);
            obj_op.DisableControls(IG01409);
            obj_op.DisableControls(IG01509);
            obj_op.DisableControls(IG01110);
            obj_op.DisableControls(IG01210);
            obj_op.DisableControls(IG01310);
            obj_op.DisableControls(IG01410);
            obj_op.DisableControls(IG01510);
            obj_op.DisableControls(IG160106);
            obj_op.DisableControls(IG160206);
            obj_op.DisableControls(IG160306);
            obj_op.DisableControls(IG160406);
            obj_op.DisableControls(IG160506);
            obj_op.DisableControls(IG160606);
            obj_op.DisableControls(IG160706);
            obj_op.DisableControls(IG160806);
            obj_op.DisableControls(IG160906);
            obj_op.DisableControls(IG1601006);
            obj_op.DisableControls(IG1601106);
            obj_op.DisableControls(IG1601206);
            obj_op.DisableControls(IG160107);
            obj_op.DisableControls(IG160207);
            obj_op.DisableControls(IG160307);
            obj_op.DisableControls(IG160407);
            obj_op.DisableControls(IG160507);
            obj_op.DisableControls(IG160607);
            obj_op.DisableControls(IG160707);
            obj_op.DisableControls(IG160807);
            obj_op.DisableControls(IG160907);
            obj_op.DisableControls(IG1601007);
            obj_op.DisableControls(IG1601107);
            obj_op.DisableControls(IG1601207);
            obj_op.DisableControls(IG160108);
            obj_op.DisableControls(IG160208);
            obj_op.DisableControls(IG160308);
            obj_op.DisableControls(IG160408);
            obj_op.DisableControls(IG160508);
            obj_op.DisableControls(IG160608);
            obj_op.DisableControls(IG160708);
            obj_op.DisableControls(IG160808);
            obj_op.DisableControls(IG160908);
            obj_op.DisableControls(IG1601008);
            obj_op.DisableControls(IG1601108);
            obj_op.DisableControls(IG1601208);
            obj_op.DisableControls(IG160109);
            obj_op.DisableControls(IG160209);
            obj_op.DisableControls(IG160309);
            obj_op.DisableControls(IG160409);
            obj_op.DisableControls(IG160509);
            obj_op.DisableControls(IG160609);
            obj_op.DisableControls(IG160709);
            obj_op.DisableControls(IG160809);
            obj_op.DisableControls(IG160909);
            obj_op.DisableControls(IG1601009);
            obj_op.DisableControls(IG1601109);
            obj_op.DisableControls(IG1601209);
            obj_op.DisableControls(IG160110);
            obj_op.DisableControls(IG160210);
            obj_op.DisableControls(IG160310);
            obj_op.DisableControls(IG160410);
            obj_op.DisableControls(IG160510);
            obj_op.DisableControls(IG160610);
            obj_op.DisableControls(IG160710);
            obj_op.DisableControls(IG160810);
            obj_op.DisableControls(IG160910);
            obj_op.DisableControls(IG1601010);
            obj_op.DisableControls(IG1601110);
            obj_op.DisableControls(IG1601210);
            obj_op.DisableControls(chkMember11);
            obj_op.DisableControls(IG0411);
            obj_op.DisableControls(IG0511);
            obj_op.DisableControls(IG060111);
            obj_op.DisableControls(IG060211);
            obj_op.DisableControls(IG060311);
            obj_op.DisableControls(IG060411);
            obj_op.DisableControls(IG060511);
            obj_op.DisableControls(chkMember12);
            obj_op.DisableControls(IG0412);
            obj_op.DisableControls(IG0512);
            obj_op.DisableControls(IG060112);
            obj_op.DisableControls(IG060212);
            obj_op.DisableControls(IG060312);
            obj_op.DisableControls(IG060412);
            obj_op.DisableControls(IG060512);
            obj_op.DisableControls(chkMember13);
            obj_op.DisableControls(IG0413);
            obj_op.DisableControls(IG0513);
            obj_op.DisableControls(IG060113);
            obj_op.DisableControls(IG060213);
            obj_op.DisableControls(IG060313);
            obj_op.DisableControls(IG060413);
            obj_op.DisableControls(IG060513);
            obj_op.DisableControls(chkMember14);
            obj_op.DisableControls(IG0414);
            obj_op.DisableControls(IG0514);
            obj_op.DisableControls(IG060114);
            obj_op.DisableControls(IG060214);
            obj_op.DisableControls(IG060314);
            obj_op.DisableControls(IG060414);
            obj_op.DisableControls(IG060514);
            obj_op.DisableControls(chkMember15);
            obj_op.DisableControls(IG0415);
            obj_op.DisableControls(IG0515);
            obj_op.DisableControls(IG060115);
            obj_op.DisableControls(IG060215);
            obj_op.DisableControls(IG060315);
            obj_op.DisableControls(IG060415);
            obj_op.DisableControls(IG060515);
            obj_op.DisableControls(IG070111);
            obj_op.DisableControls(IG070211);
            obj_op.DisableControls(IG070311);
            obj_op.DisableControls(IG070411);
            obj_op.DisableControls(IG070511);
            obj_op.DisableControls(IG070611);
            obj_op.DisableControls(IG070711);
            obj_op.DisableControls(IG070811);
            obj_op.DisableControls(IG070911);
            obj_op.DisableControls(IG0701011);
            obj_op.DisableControls(IG0701111);
            obj_op.DisableControls(IG0701211);
            obj_op.DisableControls(IG0701311);
            obj_op.DisableControls(IG0811);
            obj_op.DisableControls(IG0911);
            obj_op.DisableControls(IG01011);
            obj_op.DisableControls(IG01111);
            obj_op.DisableControls(IG01211);
            obj_op.DisableControls(IG01311);
            obj_op.DisableControls(IG01411);
            obj_op.DisableControls(IG01511);
            obj_op.DisableControls(IG070112);
            obj_op.DisableControls(IG070212);
            obj_op.DisableControls(IG070312);
            obj_op.DisableControls(IG070412);
            obj_op.DisableControls(IG070512);
            obj_op.DisableControls(IG070612);
            obj_op.DisableControls(IG070712);
            obj_op.DisableControls(IG070812);
            obj_op.DisableControls(IG070912);
            obj_op.DisableControls(IG0701012);
            obj_op.DisableControls(IG0701112);
            obj_op.DisableControls(IG0701212);
            obj_op.DisableControls(IG0701312);
            obj_op.DisableControls(IG0812);
            obj_op.DisableControls(IG0912);
            obj_op.DisableControls(IG01012);
            obj_op.DisableControls(IG01112);
            obj_op.DisableControls(IG01212);
            obj_op.DisableControls(IG01312);
            obj_op.DisableControls(IG01412);
            obj_op.DisableControls(IG01512);
            obj_op.DisableControls(IG070113);
            obj_op.DisableControls(IG070213);
            obj_op.DisableControls(IG070313);
            obj_op.DisableControls(IG070413);
            obj_op.DisableControls(IG070513);
            obj_op.DisableControls(IG070613);
            obj_op.DisableControls(IG070713);
            obj_op.DisableControls(IG070813);
            obj_op.DisableControls(IG070913);
            obj_op.DisableControls(IG0701013);
            obj_op.DisableControls(IG0701113);
            obj_op.DisableControls(IG0701213);
            obj_op.DisableControls(IG0701313);
            obj_op.DisableControls(IG0813);
            obj_op.DisableControls(IG0913);
            obj_op.DisableControls(IG01013);
            obj_op.DisableControls(IG01113);
            obj_op.DisableControls(IG01213);
            obj_op.DisableControls(IG01313);
            obj_op.DisableControls(IG01413);
            obj_op.DisableControls(IG01513);
            obj_op.DisableControls(IG070114);
            obj_op.DisableControls(IG070214);
            obj_op.DisableControls(IG070314);
            obj_op.DisableControls(IG070414);
            obj_op.DisableControls(IG070514);
            obj_op.DisableControls(IG070614);
            obj_op.DisableControls(IG070714);
            obj_op.DisableControls(IG070814);
            obj_op.DisableControls(IG070914);
            obj_op.DisableControls(IG0701014);
            obj_op.DisableControls(IG0701114);
            obj_op.DisableControls(IG0701214);
            obj_op.DisableControls(IG0701314);
            obj_op.DisableControls(IG0814);
            obj_op.DisableControls(IG0914);
            obj_op.DisableControls(IG01014);
            obj_op.DisableControls(IG01114);
            obj_op.DisableControls(IG01214);
            obj_op.DisableControls(IG01314);
            obj_op.DisableControls(IG01414);
            obj_op.DisableControls(IG01514);
            obj_op.DisableControls(IG070115);
            obj_op.DisableControls(IG070215);
            obj_op.DisableControls(IG070315);
            obj_op.DisableControls(IG070415);
            obj_op.DisableControls(IG070515);
            obj_op.DisableControls(IG070615);
            obj_op.DisableControls(IG070715);
            obj_op.DisableControls(IG070815);
            obj_op.DisableControls(IG070915);
            obj_op.DisableControls(IG0701015);
            obj_op.DisableControls(IG0701115);
            obj_op.DisableControls(IG0701215);
            obj_op.DisableControls(IG0701315);
            obj_op.DisableControls(IG0815);
            obj_op.DisableControls(IG0915);
            obj_op.DisableControls(IG01015);
            obj_op.DisableControls(IG01115);
            obj_op.DisableControls(IG01215);
            obj_op.DisableControls(IG01315);
            obj_op.DisableControls(IG01415);
            obj_op.DisableControls(IG01515);
            obj_op.DisableControls(IG160111);
            obj_op.DisableControls(IG160211);
            obj_op.DisableControls(IG160311);
            obj_op.DisableControls(IG160411);
            obj_op.DisableControls(IG160511);
            obj_op.DisableControls(IG160611);
            obj_op.DisableControls(IG160711);
            obj_op.DisableControls(IG160811);
            obj_op.DisableControls(IG160911);
            obj_op.DisableControls(IG1601011);
            obj_op.DisableControls(IG1601111);
            obj_op.DisableControls(IG1601211);
            obj_op.DisableControls(IG160112);
            obj_op.DisableControls(IG160212);
            obj_op.DisableControls(IG160312);
            obj_op.DisableControls(IG160412);
            obj_op.DisableControls(IG160512);
            obj_op.DisableControls(IG160612);
            obj_op.DisableControls(IG160712);
            obj_op.DisableControls(IG160812);
            obj_op.DisableControls(IG160912);
            obj_op.DisableControls(IG1601012);
            obj_op.DisableControls(IG1601112);
            obj_op.DisableControls(IG1601212);
            obj_op.DisableControls(IG160113);
            obj_op.DisableControls(IG160213);
            obj_op.DisableControls(IG160313);
            obj_op.DisableControls(IG160413);
            obj_op.DisableControls(IG160513);
            obj_op.DisableControls(IG160613);
            obj_op.DisableControls(IG160713);
            obj_op.DisableControls(IG160813);
            obj_op.DisableControls(IG160913);
            obj_op.DisableControls(IG1601013);
            obj_op.DisableControls(IG1601113);
            obj_op.DisableControls(IG1601213);
            obj_op.DisableControls(IG160114);
            obj_op.DisableControls(IG160214);
            obj_op.DisableControls(IG160314);
            obj_op.DisableControls(IG160414);
            obj_op.DisableControls(IG160514);
            obj_op.DisableControls(IG160614);
            obj_op.DisableControls(IG160714);
            obj_op.DisableControls(IG160814);
            obj_op.DisableControls(IG160914);
            obj_op.DisableControls(IG1601014);
            obj_op.DisableControls(IG1601114);
            obj_op.DisableControls(IG1601214);
            obj_op.DisableControls(IG160115);
            obj_op.DisableControls(IG160215);
            obj_op.DisableControls(IG160315);
            obj_op.DisableControls(IG160415);
            obj_op.DisableControls(IG160515);
            obj_op.DisableControls(IG160615);
            obj_op.DisableControls(IG160715);
            obj_op.DisableControls(IG160815);
            obj_op.DisableControls(IG160915);
            obj_op.DisableControls(IG1601015);
            obj_op.DisableControls(IG1601115);
            obj_op.DisableControls(IG1601215);


            obj_op = null;
        }


        private void IB06_Leave(object sender, EventArgs e)
        {
            try
            {
                if (IB06.Text.IndexOf(" ") == -1)
                {
                    if (IB06.Text.Length == 5)
                    {
                        if (IB06.Text == "  :")
                        {
                            MessageBox.Show("Time of interview cannot be blank ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IB06.Focus();
                        }
                        else
                        {
                            DateTime dt = Convert.ToDateTime(IB06.Text);
                            DateTime dt_end = new DateTime();

                            if (QCFUP06.Text != "  :")
                            {
                                dt_end = Convert.ToDateTime(QCFUP06.Text);


                                if (dt_end.ToShortTimeString() != "00:00")
                                {
                                    if (dt > dt_end)
                                    {
                                        MessageBox.Show("Interview start time cannot be greater than interview end time ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                        IB06.Focus();
                                    }
                                    else
                                    {
                                        IB010.Focus();
                                    }
                                }
                                else
                                {
                                    IB010.Focus();
                                }
                            }
                            else
                            {
                                IB010.Focus();
                            }

                        }

                    }
                    else
                    {
                        MessageBox.Show("Incomplete input", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IB06.Focus();
                    }
                }
                else
                {
                    MessageBox.Show("Incomplete input", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB06.Focus();
                }
            }

            catch (Exception ex)
            {
                if (ex.Message == "The DateTime represented by the string is not supported in calendar System.Globalization.GregorianCalendar.")
                {
                    MessageBox.Show("Invalid time ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB06.Focus();
                }
                else
                {
                    MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB06.Focus();
                }
            }

            finally
            {

            }

        }


        private void IB07_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB07'", IB07.Text) == true)
                {
                    IB07.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 1;
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB07.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB07);
        }





        private void IC01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01'", IC01.Text) == true)
                {
                    IC01.Focus();
                }
                else
                {
                    if (IC01.Text == "0")
                    {
                        obj_op.DisableControls(IC02);
                        obj_op.DisableControls(IC03);
                        obj_op.DisableControls(IC04);
                        obj_op.DisableControls(IC05);


                        obj_op.DisableControls(chkBaby1);
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(chkBaby2);
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(chkBaby3);
                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(chkBaby4);
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        obj_op.DisableControls(ID01);

                        tabControl1.SelectedIndex = 3;
                        ID02.Focus();

                    }
                    else if (IC01.Text == "99")
                    {

                        obj_op.DisableControls(IC02);
                        obj_op.DisableControls(IC03);
                        obj_op.DisableControls(IC04);
                        obj_op.DisableControls(IC05);


                        obj_op.DisableControls(chkBaby1);
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(chkBaby2);
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(chkBaby3);
                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(chkBaby4);
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        obj_op.EnableControls(ID01);

                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();

                    }
                    else
                    {
                        obj_op.EnableControls(IC02);
                        obj_op.EnableControls(IC03);
                        obj_op.EnableControls(IC04);
                        obj_op.EnableControls(IC05);


                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);


                        obj_op.EnableControls(chkBaby2);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);


                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);



                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);

                        obj_op.EnableControls(ID01);

                        IC02.Focus();

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01);
        }


        private void IC02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC02'", IC02.Text) == true)
                {
                    IC02.Focus();
                }
                else
                {

                    if (IC02.Text == "0")
                    {
                        obj_op.DisableControls(IC03);
                        obj_op.DisableControls(IC04);
                        obj_op.DisableControls(IC05);


                        obj_op.DisableControls(chkBaby1);
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(chkBaby2);
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(chkBaby3);
                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(chkBaby4);
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        obj_op.DisableControls(ID01);

                        tabControl1.SelectedIndex = 3;
                        ID02.Focus();

                    }
                    else if (IC02.Text == "99")
                    {

                        obj_op.DisableControls(IC03);
                        obj_op.DisableControls(IC04);
                        obj_op.DisableControls(IC05);


                        obj_op.DisableControls(chkBaby1);
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(chkBaby2);
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(chkBaby3);
                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(chkBaby4);
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        obj_op.EnableControls(ID01);

                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();

                    }
                    else
                    {
                        obj_op.EnableControls(IC03);
                        obj_op.EnableControls(IC04);
                        obj_op.EnableControls(IC05);

                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);

                        obj_op.EnableControls(chkBaby2);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);

                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);

                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);

                        obj_op.EnableControls(ID01);

                        IC03.Focus();

                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC02);
        }


        private void IC03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC03'", IC03.Text) == true)
                {
                    IC03.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC03);
        }


        private void IC04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC04'", IC04.Text) == true)
                {
                    IC04.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC04);
        }


        private void IC05_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC05'", IC05.Text) == true)
                {
                    IC05.Focus();
                }
                else
                {
                    if (IC05.Text == "0")
                    {

                        obj_op.DisableControls(chkBaby1);
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(chkBaby2);
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(chkBaby3);
                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(chkBaby4);
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                    else if (Convert.ToInt32(IC05.Text) > 1 && Convert.ToInt32(IC05.Text) < 4)
                    {

                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);

                        obj_op.EnableControls(chkBaby2);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);

                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);

                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);



                        obj_op.DisableControls(IC0605);
                        obj_op.DisableControls(IC0705);
                        obj_op.DisableControls(IC0805);
                        obj_op.DisableControls(IC0905);
                        obj_op.DisableControls(IC01005);
                        obj_op.DisableControls(IC01105);

                        obj_op.DisableControls(IC0606);
                        obj_op.DisableControls(IC0706);
                        obj_op.DisableControls(IC0806);
                        obj_op.DisableControls(IC0906);
                        obj_op.DisableControls(IC01006);
                        obj_op.DisableControls(IC01106);

                        obj_op.DisableControls(IC0607);
                        obj_op.DisableControls(IC0707);
                        obj_op.DisableControls(IC0807);
                        obj_op.DisableControls(IC0907);
                        obj_op.DisableControls(IC01007);
                        obj_op.DisableControls(IC01107);

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        tabControl1.SelectedIndex = 2;

                        chkBaby1.Focus();

                    }
                    else if (Convert.ToInt32(IC05.Text) > 5)
                    {

                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);


                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);


                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);


                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);



                        obj_op.EnableControls(IC0605);
                        obj_op.EnableControls(IC0705);
                        obj_op.EnableControls(IC0805);
                        obj_op.EnableControls(IC0905);
                        obj_op.EnableControls(IC01005);
                        obj_op.EnableControls(IC01105);

                        obj_op.EnableControls(IC0606);
                        obj_op.EnableControls(IC0706);
                        obj_op.EnableControls(IC0806);
                        obj_op.EnableControls(IC0906);
                        obj_op.EnableControls(IC01006);
                        obj_op.EnableControls(IC01106);

                        obj_op.EnableControls(IC0607);
                        obj_op.EnableControls(IC0707);
                        obj_op.EnableControls(IC0807);
                        obj_op.EnableControls(IC0907);
                        obj_op.EnableControls(IC01007);
                        obj_op.EnableControls(IC01107);

                        obj_op.EnableControls(IC0608);
                        obj_op.EnableControls(IC0708);
                        obj_op.EnableControls(IC0808);
                        obj_op.EnableControls(IC0908);
                        obj_op.EnableControls(IC01008);
                        obj_op.EnableControls(IC01108);

                        obj_op.EnableControls(IC0609);
                        obj_op.EnableControls(IC0709);
                        obj_op.EnableControls(IC0809);
                        obj_op.EnableControls(IC0909);
                        obj_op.EnableControls(IC01009);
                        obj_op.EnableControls(IC01109);

                        obj_op.EnableControls(IC06010);
                        obj_op.EnableControls(IC07010);
                        obj_op.EnableControls(IC08010);
                        obj_op.EnableControls(IC09010);
                        obj_op.EnableControls(IC01010);
                        obj_op.EnableControls(IC01110);

                        obj_op.EnableControls(IC06011);
                        obj_op.EnableControls(IC07011);
                        obj_op.EnableControls(IC08011);
                        obj_op.EnableControls(IC09011);
                        obj_op.EnableControls(IC01011);
                        obj_op.EnableControls(IC01111);


                        tabControl1.SelectedIndex = 2;

                        chkBaby1.Focus();

                    }
                    else
                    {
                        obj_op.EnableControls(chkBaby1);
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);

                        obj_op.EnableControls(chkBaby2);
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);

                        obj_op.EnableControls(chkBaby3);
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);

                        obj_op.EnableControls(chkBaby4);
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);

                        tabControl1.SelectedIndex = 2;

                        chkBaby1.Focus();

                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC05.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC05);
        }


        private void ckkBaby1_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby1'", chkBaby1.Text) == true)
                {
                    chkBaby1.Focus();
                }
                else
                {
                    if (chkBaby1.Text == "1")
                    {
                        obj_op.EnableControls(IC0601);
                        obj_op.EnableControls(IC0701);
                        obj_op.EnableControls(IC0801);
                        obj_op.EnableControls(IC0901);
                        obj_op.EnableControls(IC01001);
                        obj_op.EnableControls(IC01101);

                        IC0601.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IC0601);
                        obj_op.DisableControls(IC0701);
                        obj_op.DisableControls(IC0801);
                        obj_op.DisableControls(IC0901);
                        obj_op.DisableControls(IC01001);
                        obj_op.DisableControls(IC01101);


                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);


                        obj_op.DisableControls(IC0605);
                        obj_op.DisableControls(IC0705);
                        obj_op.DisableControls(IC0805);
                        obj_op.DisableControls(IC0905);
                        obj_op.DisableControls(IC01005);
                        obj_op.DisableControls(IC01105);

                        obj_op.DisableControls(IC0606);
                        obj_op.DisableControls(IC0706);
                        obj_op.DisableControls(IC0806);
                        obj_op.DisableControls(IC0906);
                        obj_op.DisableControls(IC01006);
                        obj_op.DisableControls(IC01106);

                        obj_op.DisableControls(IC0607);
                        obj_op.DisableControls(IC0707);
                        obj_op.DisableControls(IC0807);
                        obj_op.DisableControls(IC0907);
                        obj_op.DisableControls(IC01007);
                        obj_op.DisableControls(IC01107);

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);


                        chkBaby2.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby1.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby1);
        }


        private void IC0601_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0601'", IC0601.Text) == true)
                {
                    IC0601.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0601.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0601);
        }


        private void IC0701_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0701'", IC0701.Text) == true)
                {
                    IC0701.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0701.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0701);
        }


        private void IC0801_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0801'", IC0801.Text) == true)
                {
                    IC0801.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0801.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0801);
        }


        private void IC0901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0901'", IC0901.Text) == true)
                {
                    IC0901.Focus();
                }
                else
                {
                    if (IC0901.Text == "1")
                    {
                        obj_op.DisableControls(IC01001);
                        IC01101.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01001);
                        IC01001.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0901);
        }


        private void IC01001_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01001'", IC01001.Text) == true)
                {
                    IC01001.Focus();
                }
                else
                {
                    if (IC01001.Text == "0")
                    {
                        obj_op.DisableControls(IC01101);
                        chkBaby2.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01101);
                        IC01101.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01001.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01001);
        }





        private void ckkBaby2_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby2'", chkBaby2.Text) == true)
                {
                    chkBaby2.Focus();
                }
                else
                {
                    if (chkBaby1.Text == "2" && chkBaby2.Text == "1")
                    {
                        MessageBox.Show("You have to add 1st child first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby2.Focus();
                        return;
                    }


                    if (chkBaby2.Text == "1")
                    {
                        obj_op.EnableControls(IC0602);
                        obj_op.EnableControls(IC0702);
                        obj_op.EnableControls(IC0802);
                        obj_op.EnableControls(IC0902);
                        obj_op.EnableControls(IC01002);
                        obj_op.EnableControls(IC01102);

                        IC0602.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IC0602);
                        obj_op.DisableControls(IC0702);
                        obj_op.DisableControls(IC0802);
                        obj_op.DisableControls(IC0902);
                        obj_op.DisableControls(IC01002);
                        obj_op.DisableControls(IC01102);


                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);


                        chkBaby3.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby2.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby2);
        }


        private void IC0602_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0602'", IC0602.Text) == true)
                {
                    IC0602.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0602.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0602);
        }


        private void IC0702_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0702'", IC0702.Text) == true)
                {
                    IC0702.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0702.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0702);
        }


        private void IC0802_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0802'", IC0802.Text) == true)
                {
                    IC0802.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0802.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0802);
        }


        private void IC0902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0902'", IC0902.Text) == true)
                {
                    IC0902.Focus();
                }
                else
                {
                    if (IC0902.Text == "1")
                    {
                        obj_op.DisableControls(IC01002);
                        IC01102.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01002);
                        IC01002.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0902);
        }


        private void IC01002_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01002'", IC01002.Text) == true)
                {
                    IC01002.Focus();
                }
                else
                {
                    if (IC01002.Text == "0")
                    {
                        obj_op.DisableControls(IC01102);
                        chkBaby3.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01102);
                        IC01102.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01002.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01002);
        }


        private void IC01102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01102'", IC01102.Text) == true)
                {
                    IC01102.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01102);
        }


        private void ckkBaby3_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby3'", chkBaby3.Text) == true)
                {
                    chkBaby3.Focus();
                }
                else
                {

                    if (chkBaby2.Text == "2" && chkBaby3.Text == "1")
                    {
                        MessageBox.Show("You have to add 2nd child first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby3.Focus();
                        return;
                    }


                    if (chkBaby3.Text == "1")
                    {
                        obj_op.EnableControls(IC0603);
                        obj_op.EnableControls(IC0703);
                        obj_op.EnableControls(IC0803);
                        obj_op.EnableControls(IC0903);
                        obj_op.EnableControls(IC01003);
                        obj_op.EnableControls(IC01103);

                        IC0603.Focus();
                    }
                    else
                    {

                        obj_op.DisableControls(IC0603);
                        obj_op.DisableControls(IC0703);
                        obj_op.DisableControls(IC0803);
                        obj_op.DisableControls(IC0903);
                        obj_op.DisableControls(IC01003);
                        obj_op.DisableControls(IC01103);


                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);


                        chkBaby4.Focus();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby3.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby3);
        }


        private void IC0603_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0603'", IC0603.Text) == true)
                {
                    IC0603.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0603.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0603);
        }


        private void IC0703_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0703'", IC0703.Text) == true)
                {
                    IC0703.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0703.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0703);
        }


        private void IC0803_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0803'", IC0803.Text) == true)
                {
                    IC0803.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0803.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0803);
        }


        private void IC0903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0903'", IC0903.Text) == true)
                {
                    IC0903.Focus();
                }
                else
                {
                    if (IC0903.Text == "1")
                    {
                        obj_op.DisableControls(IC01003);
                        IC01103.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01003);
                        IC01003.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0903);
        }


        private void IC01003_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01003'", IC01003.Text) == true)
                {
                    IC01003.Focus();
                }
                else
                {
                    if (IC01003.Text == "0")
                    {
                        obj_op.DisableControls(IC01003);
                        chkBaby4.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01003);
                        IC01003.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01003.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01003);
        }


        private void IC01103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01103'", IC01103.Text) == true)
                {
                    IC01103.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01103);
        }


        private void ckkBaby4_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby4'", chkBaby4.Text) == true)
                {
                    chkBaby4.Focus();
                }
                else
                {

                    if (chkBaby3.Text == "2" && chkBaby4.Text == "1")
                    {
                        MessageBox.Show("You have to add 3rd child first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby4.Focus();
                        return;
                    }


                    if (chkBaby4.Text == "1")
                    {
                        obj_op.EnableControls(IC0604);
                        obj_op.EnableControls(IC0704);
                        obj_op.EnableControls(IC0804);
                        obj_op.EnableControls(IC0904);
                        obj_op.EnableControls(IC01004);
                        obj_op.EnableControls(IC01104);

                        IC0604.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IC0604);
                        obj_op.DisableControls(IC0704);
                        obj_op.DisableControls(IC0804);
                        obj_op.DisableControls(IC0904);
                        obj_op.DisableControls(IC01004);
                        obj_op.DisableControls(IC01104);

                        tabControl1.SelectedIndex = 10;
                        chkBaby5.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby4.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby4);
        }


        private void IC0604_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0604'", IC0604.Text) == true)
                {
                    IC0604.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0604.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0604);
        }


        private void IC0704_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0704'", IC0704.Text) == true)
                {
                    IC0704.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0704.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0704);
        }


        private void IC0804_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0804'", IC0804.Text) == true)
                {
                    IC0804.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0804.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0804);
        }


        private void IC0904_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0904'", IC0904.Text) == true)
                {
                    IC0904.Focus();
                }
                else
                {
                    if (IC0904.Text == "1")
                    {
                        obj_op.DisableControls(IC01004);
                        IC01104.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01004);
                        IC01004.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0904.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0904);
        }


        private void IC01004_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01004'", IC01004.Text) == true)
                {
                    IC01004.Focus();
                }
                else
                {
                    if (IC01004.Text == "0")
                    {
                        obj_op.DisableControls(IC01004);
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01004);
                        IC01004.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01004.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01004);
        }


        private void IC01104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01104'", IC01104.Text) == true)
                {
                    IC01104.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 10;
                    chkBaby5.Focus();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01104);
        }


        private void ID01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'ID01'", ID01.Text) == true)
                {
                    ID01.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            ID01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ID01);
        }


        private void ID02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'ID02'", ID02.Text) == true)
                {
                    ID02.Focus();
                }
                else
                {
                    if (ID02.Text == "0")
                    {
                        obj_op.DisableControls(ID03);
                        obj_op.DisableControls(ID04);

                        IE01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(ID03);
                        obj_op.EnableControls(ID04);

                        ID03.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            ID02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ID02);
        }


        private void ID03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'ID03'", ID03.Text) == true)
                {
                    ID03.Focus();
                }
                else
                {
                    if (!string.IsNullOrEmpty(ID02.Text) && !string.IsNullOrEmpty(ID03.Text))
                    {
                        if (Convert.ToInt32(ID02.Text) > Convert.ToInt32(ID03.Text))
                        {
                            MessageBox.Show("Q29 cannot be greater than Q30 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            ID03.Focus();
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            ID03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ID03);
        }


        private void ID04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'ID04'", ID04.Text) == true)
                {
                    ID04.Focus();
                }
                else
                {
                    if (!string.IsNullOrEmpty(ID02.Text) && !string.IsNullOrEmpty(ID04.Text))
                    {
                        if (Convert.ToInt32(ID02.Text) > Convert.ToInt32(ID04.Text))
                        {
                            MessageBox.Show("Q29 cannot be greater than Q31 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            ID04.Focus();
                        }
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            ID04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ID04);
        }


        private void IE01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE01'", IE01.Text) == true)
                {
                    IE01.Focus();
                }
                else
                {

                    if (!string.IsNullOrEmpty(IE02.Text) && !string.IsNullOrEmpty(IE03.Text) && !string.IsNullOrEmpty(IE04.Text))
                    {
                        if (Convert.ToInt32(IE01.Text) < Convert.ToInt32(IE02.Text) + Convert.ToInt32(IE03.Text) + Convert.ToInt32(IE04.Text))
                        {
                            MessageBox.Show("QNo.32 cannot be less than sum of QNo.33, QNo.34, QNo.35 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IE01.Focus();
                            return;
                        }
                    }



                    if (IE01.Text == "0")
                    {
                        obj_op.DisableControls(IE02);
                        obj_op.DisableControls(IE03);
                        obj_op.DisableControls(IE04);
                        obj_op.DisableControls(chkHHMem1);
                        obj_op.DisableControls(chkHHMem2);
                        obj_op.DisableControls(chkHHMem3);
                        obj_op.DisableControls(chkHHMem4);
                        obj_op.DisableControls(IE0701);
                        obj_op.DisableControls(IE0702);
                        obj_op.DisableControls(IE0703);
                        obj_op.DisableControls(IE0704);

                        obj_op.DisableControls(IE0801);
                        obj_op.DisableControls(IE0802);
                        obj_op.DisableControls(IE0803);
                        obj_op.DisableControls(IE0804);

                        obj_op.DisableControls(IE0901);
                        obj_op.DisableControls(IE0902);
                        obj_op.DisableControls(IE0903);
                        obj_op.DisableControls(IE0904);


                        tabControl1.SelectedIndex = 5;
                        IF01.Focus();
                    }
                    else
                    {

                        obj_op.EnableControls(IE02);
                        obj_op.EnableControls(IE03);
                        obj_op.EnableControls(IE04);
                        obj_op.EnableControls(chkHHMem1);
                        obj_op.EnableControls(chkHHMem2);
                        obj_op.EnableControls(chkHHMem3);
                        obj_op.EnableControls(chkHHMem4);
                        obj_op.EnableControls(IE0701);
                        obj_op.EnableControls(IE0702);
                        obj_op.EnableControls(IE0703);
                        obj_op.EnableControls(IE0704);

                        obj_op.EnableControls(IE0801);
                        obj_op.EnableControls(IE0802);
                        obj_op.EnableControls(IE0803);
                        obj_op.EnableControls(IE0804);

                        obj_op.EnableControls(IE0901);
                        obj_op.EnableControls(IE0902);
                        obj_op.EnableControls(IE0903);
                        obj_op.EnableControls(IE0904);

                        IE02.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE01);
        }


        private void IE02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE02'", IE02.Text) == true)
                {
                    IE02.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE02);
        }


        private void IE03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE03'", IE03.Text) == true)
                {
                    IE03.Focus();
                }
                else
                {
                    if (IE03.Text == "0")
                    {
                        obj_op.DisableControls(IE04);
                        obj_op.EnableControls(chkHHMem1);
                        obj_op.EnableControls(chkHHMem2);
                        obj_op.EnableControls(chkHHMem3);
                        obj_op.EnableControls(chkHHMem4);
                        obj_op.EnableControls(IE0701);
                        obj_op.EnableControls(IE0702);
                        obj_op.EnableControls(IE0703);
                        obj_op.EnableControls(IE0704);

                        obj_op.EnableControls(IE0801);
                        obj_op.EnableControls(IE0802);
                        obj_op.EnableControls(IE0803);
                        obj_op.EnableControls(IE0804);

                        obj_op.EnableControls(IE0901);
                        obj_op.EnableControls(IE0902);
                        obj_op.EnableControls(IE0903);
                        obj_op.EnableControls(IE0904);


                        tabControl1.SelectedIndex = 4;
                        chkHHMem1.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 4;

                        obj_op.EnableControls(IE04);
                        obj_op.EnableControls(chkHHMem1);
                        obj_op.EnableControls(chkHHMem2);
                        obj_op.EnableControls(chkHHMem3);
                        obj_op.EnableControls(chkHHMem4);
                        obj_op.EnableControls(IE0701);
                        obj_op.EnableControls(IE0702);
                        obj_op.EnableControls(IE0703);
                        obj_op.EnableControls(IE0704);

                        obj_op.EnableControls(IE0801);
                        obj_op.EnableControls(IE0802);
                        obj_op.EnableControls(IE0803);
                        obj_op.EnableControls(IE0804);

                        obj_op.EnableControls(IE0901);
                        obj_op.EnableControls(IE0902);
                        obj_op.EnableControls(IE0903);
                        obj_op.EnableControls(IE0904);

                        IE04.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE03);
        }








        private void IE0801_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0801'", IE0801.Text) == true)
                {
                    IE0801.Focus();
                }
                else
                {
                    if (IE0801.Text == "0")
                    {
                        obj_op.DisableControls(IE0901);
                        IE0802.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IE0901);
                        IE0901.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0801.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0801);
        }


        private void IE0901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0901'", IE0901.Text) == true)
                {
                    IE0901.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0901);
        }


        private void IE0802_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0802'", IE0802.Text) == true)
                {
                    IE0802.Focus();
                }
                else
                {
                    if (IE0802.Text == "0")
                    {
                        obj_op.DisableControls(IE0902);
                        IE0803.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IE0902);
                        IE0902.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0802.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0802);
        }


        private void IE0902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0902'", IE0902.Text) == true)
                {
                    IE0902.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0902);
        }


        private void IE0803_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0803'", IE0803.Text) == true)
                {
                    IE0803.Focus();
                }
                else
                {
                    if (IE0803.Text == "0")
                    {
                        obj_op.DisableControls(IE0903);
                        IE0804.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IE0903);
                        IE0903.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0803.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0803);
        }


        private void IE0903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0903'", IE0903.Text) == true)
                {
                    IE0903.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0903);
        }


        private void IE0804_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0804'", IE0804.Text) == true)
                {
                    IE0804.Focus();
                }
                else
                {
                    if (IE0804.Text == "0")
                    {
                        obj_op.DisableControls(IE0904);

                        tabControl1.SelectedIndex = 5;
                        IF01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IE0904);
                        IE0904.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0804.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0804);
        }


        private void IE0904_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0904'", IE0904.Text) == true)
                {
                    IE0904.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 5;
                    IF01.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0904.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0904);
        }














































        private void IG070104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070104'", IG070104.Text) == true)
                {
                    IG070104.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070104);
        }


        private void IG070204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070204'", IG070204.Text) == true)
                {
                    IG070204.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070204);
        }


        private void IG070304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070304'", IG070304.Text) == true)
                {
                    IG070304.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070304);
        }


        private void IG070404_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070404'", IG070404.Text) == true)
                {
                    IG070404.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070404.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070404);
        }











        private void IG070105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070105'", IG070105.Text) == true)
                {
                    IG070105.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070105);
        }


        private void IG070205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070205'", IG070205.Text) == true)
                {
                    IG070205.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070205);
        }


        private void IG070305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070305'", IG070305.Text) == true)
                {
                    IG070305.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070305);
        }


        private void IG070405_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070405'", IG070405.Text) == true)
                {
                    IG070405.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070405.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070405);
        }





        private void IG0801_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0801'", IG0801.Text) == true)
                {
                    IG0801.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0801.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0801);
        }


        private void IG0901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0901'", IG0901.Text) == true)
                {
                    IG0901.Focus();
                }
                else
                {
                    if (IG0901.Text == "0")
                    {
                        obj_op.DisableControls(IG01001);

                        if (IG060102.Enabled == true)
                        {
                            IG060102.Focus();
                        }
                        else if (IG060103.Enabled == true)
                        {
                            IG060103.Focus();
                        }
                        else if (IG060104.Enabled == true)
                        {
                            IG060104.Focus();
                        }
                        else if (IG060105.Enabled == true)
                        {
                            IG060105.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 8;
                            IG01101.Focus();
                        }
                    }
                    else
                    {
                        obj_op.EnableControls(IG01001);
                        IG01001.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0901);
        }


        private void IG01001_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01001'", IG01001.Text) == true)
                {
                    IG01001.Focus();
                }
                else
                {
                    if (IG01001.Text == "1")
                    {
                        obj_op.DisableControls(IG01101);
                        obj_op.DisableControls(IG01201);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01101);
                        obj_op.EnableControls(IG01201);
                    }


                    if (IG060102.Enabled == true)
                    {
                        IG060102.Focus();
                    }
                    else if (IG060103.Enabled == true)
                    {
                        IG060103.Focus();
                    }
                    else if (IG060104.Enabled == true)
                    {
                        IG060104.Focus();
                    }
                    else if (IG060105.Enabled == true)
                    {
                        IG060105.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01101.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01001.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01001);
        }


        private void IG01101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01101'", IG01101.Text) == true)
                {
                    IG01101.Focus();
                }
                else
                {
                    if (IG01101.Text == "1")
                    {
                        obj_op.DisableControls(IG01201);
                        IG01301.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01201);
                        IG01201.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01101);
        }


        private void IG01201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01201'", IG01201.Text) == true)
                {
                    IG01201.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01201);
        }


        private void IG01301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01301'", IG01301.Text) == true)
                {
                    IG01301.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01301);
        }


        private void IG01401_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01401'", IG01401.Text) == true)
                {
                    IG01401.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01401.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01401);
        }


        private void IG01501_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01501'", IG01501.Text) == true)
                {
                    IG01501.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01501.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01501);
        }


        private void IG160101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160101'", IG160101.Text) == true)
                {
                    IG160101.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160101);
        }


        private void IG160201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160201'", IG160201.Text) == true)
                {
                    IG160201.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160201);
        }


        private void IG160301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160301'", IG160301.Text) == true)
                {
                    IG160301.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160301);
        }


        private void IG160401_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160401'", IG160401.Text) == true)
                {
                    IG160401.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160401.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160401);
        }


        private void IG160501_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160501'", IG160501.Text) == true)
                {
                    IG160501.Focus();
                }
                else
                {
                    if (IG070502.Enabled == true)
                    {
                        IG070502.Focus();
                    }
                    else if (IG070503.Enabled == true)
                    {
                        IG070503.Focus();
                    }
                    else if (IG070504.Enabled == true)
                    {
                        IG070504.Focus();
                    }
                    else if (IG070505.Enabled == true)
                    {
                        IG070505.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160501.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160501);
        }


        private void IG160601_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160601'", IG160601.Text) == true)
                {
                    IG160601.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160601.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160601);
        }


        private void IG160701_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160701'", IG160701.Text) == true)
                {
                    IG160701.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160701.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160701);
        }


        private void IG160801_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160801'", IG160801.Text) == true)
                {
                    IG160801.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160801.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160801);
        }


        private void IG160901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160901'", IG160901.Text) == true)
                {
                    IG160901.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160901);
        }


        private void IG1601001_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601001'", IG1601001.Text) == true)
                {
                    IG1601001.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601001.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601001);
        }


        private void IG1601101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601101'", IG1601101.Text) == true)
                {
                    IG1601101.Focus();
                }
                else
                {
                    if (
                        IG160101.Text == "1" &&
                        IG160201.Text == "1" &&
                        IG160301.Text == "1" &&
                        IG160401.Text == "1" &&
                        IG160501.Text == "1" &&
                        IG160601.Text == "1" &&
                        IG160701.Text == "1" &&
                        IG160801.Text == "1" &&
                        IG160901.Text == "1" &&
                        IG1601001.Text == "1" &&
                        IG1601101.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601101.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601101);
        }


        private void IG1601201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601201'", IG1601201.Text) == true)
                {
                    IG1601201.Focus();
                }
                else
                {

                    if (
                      IG160101.Text == "1" &&
                      IG160201.Text == "1" &&
                      IG160301.Text == "1" &&
                      IG160401.Text == "1" &&
                      IG160501.Text == "1" &&
                      IG160601.Text == "1" &&
                      IG160701.Text == "1" &&
                      IG160801.Text == "1" &&
                      IG160901.Text == "1" &&
                      IG1601001.Text == "1" &&
                      IG1601201.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601201.Focus();
                    }
                    else
                    {
                        if (IG01102.Enabled == true)
                        {
                            IG01102.Focus();
                        }
                        else if (IG01103.Enabled == true)
                        {
                            IG01103.Focus();
                        }
                        else if (IG01104.Enabled == true)
                        {
                            IG01104.Focus();
                        }
                        else if (IG01105.Enabled == true)
                        {
                            IG01105.Focus();
                        }
                        else if (IG01302.Enabled == true)
                        {
                            IG01302.Focus();
                        }
                        else if (IG01303.Enabled == true)
                        {
                            IG01303.Focus();
                        }
                        else if (IG01304.Enabled == true)
                        {
                            IG01304.Focus();
                        }
                        else if (IG01305.Enabled == true)
                        {
                            IG01305.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 12;
                            chkMember6.Focus();
                        }

                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601201);
        }





        private void IG0802_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0802'", IG0802.Text) == true)
                {
                    IG0802.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0802.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0802);
        }


        private void IG0902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0902'", IG0902.Text) == true)
                {
                    IG0902.Focus();
                }
                else
                {
                    if (IG0902.Text == "0")
                    {
                        obj_op.DisableControls(IG01002);

                        if (IG060103.Enabled == true)
                        {
                            IG060103.Focus();
                        }
                        else if (IG060104.Enabled == true)
                        {
                            IG060104.Focus();
                        }
                        else if (IG060105.Enabled == true)
                        {
                            IG060105.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 8;
                            IG01101.Focus();
                        }
                    }
                    else
                    {
                        obj_op.EnableControls(IG01002);
                        IG01002.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0902);
        }


        private void IG01002_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01002'", IG01002.Text) == true)
                {
                    IG01002.Focus();
                }
                else
                {
                    if (IG01002.Text == "1")
                    {
                        obj_op.DisableControls(IG01102);
                        obj_op.DisableControls(IG01202);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01102);
                        obj_op.EnableControls(IG01202);
                    }


                    if (IG060103.Enabled == true)
                    {
                        IG060103.Focus();
                    }
                    else if (IG060104.Enabled == true)
                    {
                        IG060104.Focus();
                    }
                    else if (IG060105.Enabled == true)
                    {
                        IG060105.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01002.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01002);
        }


        private void IG01102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01102'", IG01102.Text) == true)
                {
                    IG01102.Focus();
                }
                else
                {
                    if (IG01102.Text == "1")
                    {
                        obj_op.DisableControls(IG01202);
                        IG01302.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01202);
                        IG01202.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01102);
        }


        private void IG01202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01202'", IG01202.Text) == true)
                {
                    IG01202.Focus();
                }
                else
                {
                    if (IG01301.Enabled == true && string.IsNullOrEmpty(IG01301.Text))
                    {
                        IG01301.Focus();
                    }
                    else
                    {
                        IG01302.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01202);
        }


        private void IG01302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01302'", IG01302.Text) == true)
                {
                    IG01302.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01302);
        }


        private void IG01402_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01402'", IG01402.Text) == true)
                {
                    IG01402.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01402.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01402);
        }


        private void IG01502_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01502'", IG01502.Text) == true)
                {
                    IG01502.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01502.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01502);
        }


        private void IG160102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160102'", IG160102.Text) == true)
                {
                    IG160102.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160102);
        }


        private void IG160202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160202'", IG160202.Text) == true)
                {
                    IG160202.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160202);
        }


        private void IG160302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160302'", IG160302.Text) == true)
                {
                    IG160302.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160302);
        }


        private void IG160402_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160402'", IG160402.Text) == true)
                {
                    IG160402.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160402.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160402);
        }


        private void IG160502_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160502'", IG160502.Text) == true)
                {
                    IG160502.Focus();
                }
                else
                {
                    if (IG070503.Enabled == true)
                    {
                        IG070503.Focus();
                    }
                    else if (IG070504.Enabled == true)
                    {
                        IG070504.Focus();
                    }
                    else if (IG070505.Enabled == true)
                    {
                        IG070505.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160502.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160502);
        }


        private void IG160602_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160602'", IG160602.Text) == true)
                {
                    IG160602.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160602.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160602);
        }


        private void IG160702_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160702'", IG160702.Text) == true)
                {
                    IG160702.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160702.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160702);
        }


        private void IG160802_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160802'", IG160802.Text) == true)
                {
                    IG160802.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160802.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160802);
        }


        private void IG160902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160902'", IG160902.Text) == true)
                {
                    IG160902.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160902);
        }


        private void IG1601002_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601002'", IG1601002.Text) == true)
                {
                    IG1601002.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601002.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601002);
        }


        private void IG1601102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601102'", IG1601102.Text) == true)
                {
                    IG1601102.Focus();
                }
                else
                {
                    if (
                        IG160102.Text == "1" &&
                        IG160202.Text == "1" &&
                        IG160302.Text == "1" &&
                        IG160402.Text == "1" &&
                        IG160502.Text == "1" &&
                        IG160602.Text == "1" &&
                        IG160702.Text == "1" &&
                        IG160802.Text == "1" &&
                        IG160902.Text == "1" &&
                        IG1601002.Text == "1" &&
                        IG1601102.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601102.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601102);
        }


        private void IG1601202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601202'", IG1601202.Text) == true)
                {
                    IG1601202.Focus();
                }
                else
                {
                    if (
                      IG160102.Text == "1" &&
                      IG160202.Text == "1" &&
                      IG160302.Text == "1" &&
                      IG160402.Text == "1" &&
                      IG160502.Text == "1" &&
                      IG160602.Text == "1" &&
                      IG160702.Text == "1" &&
                      IG160802.Text == "1" &&
                      IG160902.Text == "1" &&
                      IG1601002.Text == "1" &&
                      IG1601202.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601202.Focus();
                    }
                    else
                    {

                        if (IG01103.Enabled == true)
                        {
                            IG01103.Focus();
                        }
                        else if (IG01104.Enabled == true)
                        {
                            IG01104.Focus();
                        }
                        else if (IG01105.Enabled == true)
                        {
                            IG01105.Focus();
                        }
                        else if (IG01303.Enabled == true)
                        {
                            IG01303.Focus();
                        }
                        else if (IG01304.Enabled == true)
                        {
                            IG01304.Focus();
                        }
                        else if (IG01305.Enabled == true)
                        {
                            IG01305.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 12;
                            chkMember6.Focus();
                        }

                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601202);
        }





        private void IG0803_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0803'", IG0803.Text) == true)
                {
                    IG0803.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0803.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0803);
        }


        private void IG0903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0903'", IG0903.Text) == true)
                {
                    IG0903.Focus();
                }
                else
                {
                    if (IG0903.Text == "0")
                    {
                        obj_op.DisableControls(IG01003);

                        if (IG060104.Enabled == true)
                        {
                            IG060104.Focus();
                        }
                        else if (IG060105.Enabled == true)
                        {
                            IG060105.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 8;
                            IG01101.Focus();
                        }

                    }
                    else
                    {
                        obj_op.EnableControls(IG01003);
                        IG01003.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0903);
        }


        private void IG01003_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01003'", IG01003.Text) == true)
                {
                    IG01003.Focus();
                }
                else
                {
                    if (IG01003.Text == "1")
                    {
                        obj_op.DisableControls(IG01103);
                        obj_op.DisableControls(IG01203);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01103);
                        obj_op.EnableControls(IG01203);
                    }



                    if (IG060104.Enabled == true)
                    {
                        IG060104.Focus();
                    }
                    else if (IG060105.Enabled == true)
                    {
                        IG060105.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01003.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01003);
        }


        private void IG01103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01103'", IG01103.Text) == true)
                {
                    IG01103.Focus();
                }
                else
                {
                    if (IG01103.Text == "1")
                    {
                        obj_op.DisableControls(IG01203);
                        IG01303.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01203);
                        IG01203.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01103);
        }


        private void IG01203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01203'", IG01203.Text) == true)
                {
                    IG01203.Focus();
                }
                else
                {
                    if (IG01302.Enabled == true && string.IsNullOrEmpty(IG01302.Text))
                    {
                        IG01302.Focus();
                    }
                    else
                    {
                        IG01303.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01203);
        }


        private void IG01303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01303'", IG01303.Text) == true)
                {
                    IG01303.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01303);
        }


        private void IG01403_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01403'", IG01403.Text) == true)
                {
                    IG01403.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01403.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01403);
        }


        private void IG01503_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01503'", IG01503.Text) == true)
                {
                    IG01503.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01503.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01503);
        }


        private void IG160103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160103'", IG160103.Text) == true)
                {
                    IG160103.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160103);
        }


        private void IG160203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160203'", IG160203.Text) == true)
                {
                    IG160203.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160203);
        }


        private void IG160303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160303'", IG160303.Text) == true)
                {
                    IG160303.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160303);
        }


        private void IG160403_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160403'", IG160403.Text) == true)
                {
                    IG160403.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160403.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160403);
        }


        private void IG160503_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160503'", IG160503.Text) == true)
                {
                    IG160503.Focus();
                }
                else
                {
                    if (IG070504.Enabled == true)
                    {
                        IG070504.Focus();
                    }
                    else if (IG070505.Enabled == true)
                    {
                        IG070505.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160503.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160503);
        }


        private void IG160603_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160603'", IG160603.Text) == true)
                {
                    IG160603.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160603.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160603);
        }


        private void IG160703_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160703'", IG160703.Text) == true)
                {
                    IG160703.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160703.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160703);
        }


        private void IG160803_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160803'", IG160803.Text) == true)
                {
                    IG160803.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160803.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160803);
        }


        private void IG160903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160903'", IG160903.Text) == true)
                {
                    IG160903.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160903);
        }


        private void IG1601003_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601003'", IG1601003.Text) == true)
                {
                    IG1601003.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601003.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601003);
        }


        private void IG1601103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601103'", IG1601103.Text) == true)
                {
                    IG1601103.Focus();
                }
                else
                {

                    if (
                        IG160103.Text == "1" &&
                        IG160203.Text == "1" &&
                        IG160303.Text == "1" &&
                        IG160403.Text == "1" &&
                        IG160503.Text == "1" &&
                        IG160603.Text == "1" &&
                        IG160703.Text == "1" &&
                        IG160803.Text == "1" &&
                        IG160903.Text == "1" &&
                        IG1601003.Text == "1" &&
                        IG1601103.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601103.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601103);
        }


        private void IG1601203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601203'", IG1601203.Text) == true)
                {
                    IG1601203.Focus();
                }
                else
                {


                    if (
                      IG160103.Text == "1" &&
                      IG160203.Text == "1" &&
                      IG160303.Text == "1" &&
                      IG160403.Text == "1" &&
                      IG160503.Text == "1" &&
                      IG160603.Text == "1" &&
                      IG160703.Text == "1" &&
                      IG160803.Text == "1" &&
                      IG160903.Text == "1" &&
                      IG1601003.Text == "1" &&
                      IG1601203.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601203.Focus();
                    }
                    else
                    {

                        if (IG01104.Enabled == true)
                        {
                            IG01104.Focus();
                        }
                        else if (IG01105.Enabled == true)
                        {
                            IG01105.Focus();
                        }
                        else if (IG01304.Enabled == true)
                        {
                            IG01304.Focus();
                        }
                        else if (IG01305.Enabled == true)
                        {
                            IG01305.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 12;
                            chkMember6.Focus();
                        }

                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601203);
        }


        private void IG070504_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070504'", IG070504.Text) == true)
                {
                    IG070504.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070504.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070504);
        }


        private void IG070604_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070604'", IG070604.Text) == true)
                {
                    IG070604.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070604.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070604);
        }


        private void IG070704_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070704'", IG070704.Text) == true)
                {
                    IG070704.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070704.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070704);
        }


        private void IG070804_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070804'", IG070804.Text) == true)
                {
                    IG070804.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070804.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070804);
        }


        private void IG070904_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070904'", IG070904.Text) == true)
                {
                    IG070904.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070904.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070904);
        }


        private void IG0701004_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701004'", IG0701004.Text) == true)
                {
                    IG0701004.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701004.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701004);
        }


        private void IG0701104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701104'", IG0701104.Text) == true)
                {
                    IG0701104.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701104);
        }


        private void IG0701204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701204'", IG0701204.Text) == true)
                {
                    IG0701204.Focus();
                }
                else
                {

                    if (IG070104.Text == "1" &&
                       IG070204.Text == "1" &&
                       IG070304.Text == "1" &&
                       IG070404.Text == "1" &&
                       IG070504.Text == "1" &&
                       IG070604.Text == "1" &&
                       IG070704.Text == "1" &&
                       IG070804.Text == "1" &&
                       IG070904.Text == "1" &&
                       IG0701004.Text == "1" &&
                       IG0701104.Text == "1" &&
                       IG0701204.Text == "1"
                       )
                    {
                        MessageBox.Show("Dont know cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701204.Focus();
                    }
                    else
                    {
                        if (IG0701204.Text == "1")
                        {
                            obj_op.DisableControls(IG0701304);
                            obj_op.DisableControls(IG0804);

                            IG0904.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701304);
                            obj_op.EnableControls(IG0804);

                            IG0701304.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701204);
        }


        private void IG0701304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701304'", IG0701304.Text) == true)
                {
                    IG0701304.Focus();
                }
                else
                {

                    if (IG070104.Text == "1" &&
                       IG070204.Text == "1" &&
                       IG070304.Text == "1" &&
                       IG070404.Text == "1" &&
                       IG070504.Text == "1" &&
                       IG070604.Text == "1" &&
                       IG070704.Text == "1" &&
                       IG070804.Text == "1" &&
                       IG070904.Text == "1" &&
                       IG0701004.Text == "1" &&
                       IG0701104.Text == "1" &&
                       IG0701304.Text == "1"
                       )
                    {
                        MessageBox.Show("None of the above cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701304.Focus();
                    }
                    else
                    {
                        if (IG0701304.Text == "1")
                        {
                            obj_op.DisableControls(IG0804);
                            IG0904.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0804);
                            IG0804.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701304);
        }


        private void IG0804_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0804'", IG0804.Text) == true)
                {
                    IG0804.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0804.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0804);
        }


        private void IG0904_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0904'", IG0904.Text) == true)
                {
                    IG0904.Focus();
                }
                else
                {
                    if (IG0904.Text == "0")
                    {
                        obj_op.DisableControls(IG01004);

                        if (IG060105.Enabled == true)
                        {
                            IG060105.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 8;
                            IG01101.Focus();
                        }

                    }
                    else
                    {
                        obj_op.EnableControls(IG01004);
                        IG01004.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0904.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0904);
        }


        private void IG01004_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01004'", IG01004.Text) == true)
                {
                    IG01004.Focus();
                }
                else
                {
                    if (IG01004.Text == "1")
                    {
                        obj_op.DisableControls(IG01104);
                        obj_op.DisableControls(IG01204);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01104);
                        obj_op.EnableControls(IG01204);
                    }


                    if (IG060105.Enabled == true)
                    {
                        IG060105.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01004.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01004);
        }


        private void IG01104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01104'", IG01104.Text) == true)
                {
                    IG01104.Focus();
                }
                else
                {
                    if (IG01104.Text == "1")
                    {
                        obj_op.DisableControls(IG01204);
                        IG01304.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01204);
                        IG01204.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01104);
        }


        private void IG01204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01204'", IG01204.Text) == true)
                {
                    IG01204.Focus();
                }
                else
                {
                    if (IG01303.Enabled == true && string.IsNullOrEmpty(IG01303.Text))
                    {
                        IG01303.Focus();
                    }
                    else
                    {
                        IG01304.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01204);
        }


        private void IG01304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01304'", IG01304.Text) == true)
                {
                    IG01304.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01304);
        }


        private void IG01404_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01404'", IG01404.Text) == true)
                {
                    IG01404.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01404.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01404);
        }


        private void IG01504_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01504'", IG01504.Text) == true)
                {
                    IG01504.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01504.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01504);
        }


        private void IG160104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160104'", IG160104.Text) == true)
                {
                    IG160104.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160104);
        }


        private void IG160204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160204'", IG160204.Text) == true)
                {
                    IG160204.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160204);
        }


        private void IG160304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160304'", IG160304.Text) == true)
                {
                    IG160304.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160304);
        }


        private void IG160404_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160404'", IG160404.Text) == true)
                {
                    IG160404.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160404.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160404);
        }


        private void IG160504_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160504'", IG160504.Text) == true)
                {
                    IG160504.Focus();
                }
                else
                {
                    if (IG070505.Enabled == true)
                    {
                        IG070505.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160504.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160504);
        }


        private void IG160604_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160604'", IG160604.Text) == true)
                {
                    IG160604.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160604.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160604);
        }


        private void IG160704_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160704'", IG160704.Text) == true)
                {
                    IG160704.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160704.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160704);
        }


        private void IG160804_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160804'", IG160804.Text) == true)
                {
                    IG160804.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160804.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160804);
        }


        private void IG160904_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160904'", IG160904.Text) == true)
                {
                    IG160904.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160904.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160904);
        }


        private void IG1601004_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601004'", IG1601004.Text) == true)
                {
                    IG1601004.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601004.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601004);
        }


        private void IG1601104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601104'", IG1601104.Text) == true)
                {
                    IG1601104.Focus();
                }
                else
                {

                    if (
                       IG160104.Text == "1" &&
                       IG160204.Text == "1" &&
                       IG160304.Text == "1" &&
                       IG160404.Text == "1" &&
                       IG160504.Text == "1" &&
                       IG160604.Text == "1" &&
                       IG160704.Text == "1" &&
                       IG160804.Text == "1" &&
                       IG160904.Text == "1" &&
                       IG1601004.Text == "1" &&
                       IG1601104.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601104.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601104);
        }


        private void IG1601204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601204'", IG1601204.Text) == true)
                {
                    IG1601204.Focus();
                }
                else
                {

                    if (
                      IG160104.Text == "1" &&
                      IG160204.Text == "1" &&
                      IG160304.Text == "1" &&
                      IG160404.Text == "1" &&
                      IG160504.Text == "1" &&
                      IG160604.Text == "1" &&
                      IG160704.Text == "1" &&
                      IG160804.Text == "1" &&
                      IG160904.Text == "1" &&
                      IG1601004.Text == "1" &&
                      IG1601204.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601204.Focus();
                    }
                    else
                    {

                        if (IG01105.Enabled == true)
                        {
                            IG01105.Focus();
                        }
                        else if (IG01305.Enabled == true)
                        {
                            IG01305.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 12;
                            chkMember6.Focus();
                        }

                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601204);
        }


        private void IG070505_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070505'", IG070505.Text) == true)
                {
                    IG070505.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070505.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070505);
        }


        private void IG070605_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070605'", IG070605.Text) == true)
                {
                    IG070605.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070605.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070605);
        }


        private void IG070705_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070705'", IG070705.Text) == true)
                {
                    IG070705.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070705.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070705);
        }


        private void IG070805_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070805'", IG070805.Text) == true)
                {
                    IG070805.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070805.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070805);
        }


        private void IG070905_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070905'", IG070905.Text) == true)
                {
                    IG070905.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070905.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070905);
        }


        private void IG0701005_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701005'", IG0701005.Text) == true)
                {
                    IG0701005.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701005.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701005);
        }


        private void IG0701105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701105'", IG0701105.Text) == true)
                {
                    IG0701105.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701105);
        }


        private void IG0701205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701205'", IG0701205.Text) == true)
                {
                    IG0701205.Focus();
                }
                else
                {

                    if (IG070105.Text == "1" &&
                       IG070205.Text == "1" &&
                       IG070305.Text == "1" &&
                       IG070405.Text == "1" &&
                       IG070505.Text == "1" &&
                       IG070605.Text == "1" &&
                       IG070705.Text == "1" &&
                       IG070805.Text == "1" &&
                       IG070905.Text == "1" &&
                       IG0701005.Text == "1" &&
                       IG0701105.Text == "1" &&
                       IG0701205.Text == "1"
                       )
                    {
                        MessageBox.Show("Dont know cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701205.Focus();
                    }
                    else
                    {
                        if (IG0701205.Text == "1")
                        {
                            obj_op.DisableControls(IG0701305);
                            obj_op.DisableControls(IG0805);

                            IG0905.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701305);
                            obj_op.EnableControls(IG0805);

                            IG0701305.Focus();
                        }
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701205);
        }


        private void IG0701305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701305'", IG0701305.Text) == true)
                {
                    IG0701305.Focus();
                }
                else
                {

                    if (IG070101.Text == "1" &&
                       IG070201.Text == "1" &&
                       IG070301.Text == "1" &&
                       IG070401.Text == "1" &&
                       IG070501.Text == "1" &&
                       IG070601.Text == "1" &&
                       IG070701.Text == "1" &&
                       IG070801.Text == "1" &&
                       IG070901.Text == "1" &&
                       IG0701001.Text == "1" &&
                       IG0701101.Text == "1" &&
                       IG0701305.Text == "1"
                       )
                    {
                        MessageBox.Show("None of the above cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701305.Focus();
                    }
                    else
                    {
                        if (IG0701305.Text == "1")
                        {
                            obj_op.DisableControls(IG0805);
                            IG0905.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0805);
                            IG0805.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701305);
        }


        private void IG0805_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0805'", IG0805.Text) == true)
                {
                    IG0805.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0805.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0805);
        }


        private void IG0905_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0905'", IG0905.Text) == true)
                {
                    IG0905.Focus();
                }
                else
                {
                    if (IG0905.Text == "0")
                    {
                        obj_op.DisableControls(IG01005);

                        tabControl1.SelectedIndex = 8;
                        IG01101.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01005);
                        IG01005.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0905.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0905);
        }


        private void IG01005_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01005'", IG01005.Text) == true)
                {
                    IG01005.Focus();
                }
                else
                {
                    if (IG01005.Text == "1")
                    {
                        obj_op.DisableControls(IG01105);
                        obj_op.DisableControls(IG01205);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01105);
                        obj_op.EnableControls(IG01205);
                    }


                    if (IG01102.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01102.Focus();
                    }
                    else if (IG01103.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01103.Focus();
                    }
                    else if (IG01104.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01104.Focus();
                    }
                    else if (IG01105.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01105.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 8;
                        IG01201.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01005.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01005);
        }


        private void IG01105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01105'", IG01105.Text) == true)
                {
                    IG01105.Focus();
                }
                else
                {
                    if (IG01105.Text == "1")
                    {
                        obj_op.DisableControls(IG01205);
                        IG01305.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01205);
                        IG01205.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01105);
        }


        private void IG01205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01205'", IG01205.Text) == true)
                {
                    IG01205.Focus();
                }
                else
                {
                    if (IG01304.Enabled == true && string.IsNullOrEmpty(IG01304.Text))
                    {
                        IG01304.Focus();
                    }
                    else
                    {
                        IG01305.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01205);
        }


        private void IG01305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01305'", IG01305.Text) == true)
                {
                    IG01305.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01305);
        }


        private void IG01405_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01405'", IG01405.Text) == true)
                {
                    IG01405.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01405.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01405);
        }


        private void IG01505_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01505'", IG01505.Text) == true)
                {
                    IG01505.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01505.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01505);
        }


        private void IG160105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160105'", IG160105.Text) == true)
                {
                    IG160105.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160105);
        }


        private void IG160205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160205'", IG160205.Text) == true)
                {
                    IG160205.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160205);
        }


        private void IG160305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160305'", IG160305.Text) == true)
                {
                    IG160305.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160305);
        }


        private void IG160405_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160405'", IG160405.Text) == true)
                {
                    IG160405.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160405.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160405);
        }


        private void IG160505_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160505'", IG160505.Text) == true)
                {
                    IG160505.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160505.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160505);
        }


        private void IG160605_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160605'", IG160605.Text) == true)
                {
                    IG160605.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160605.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160605);
        }


        private void IG160705_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160705'", IG160705.Text) == true)
                {
                    IG160705.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160705.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160705);
        }


        private void IG160805_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160805'", IG160805.Text) == true)
                {
                    IG160805.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160805.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160805);
        }


        private void IG160905_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160905'", IG160905.Text) == true)
                {
                    IG160905.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160905.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160905);
        }


        private void IG1601005_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601005'", IG1601005.Text) == true)
                {
                    IG1601005.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601005.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601005);
        }


        private void IG1601105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601105'", IG1601105.Text) == true)
                {
                    IG1601105.Focus();
                }
                else
                {

                    if (
                      IG160105.Text == "1" &&
                      IG160205.Text == "1" &&
                      IG160305.Text == "1" &&
                      IG160405.Text == "1" &&
                      IG160505.Text == "1" &&
                      IG160605.Text == "1" &&
                      IG160705.Text == "1" &&
                      IG160805.Text == "1" &&
                      IG160905.Text == "1" &&
                      IG1601005.Text == "1" &&
                      IG1601105.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601105.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601105);
        }


        private void IG1601205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601205'", IG1601205.Text) == true)
                {
                    IG1601205.Focus();
                }
                else
                {
                    if (
                      IG160105.Text == "1" &&
                      IG160205.Text == "1" &&
                      IG160305.Text == "1" &&
                      IG160405.Text == "1" &&
                      IG160505.Text == "1" &&
                      IG160605.Text == "1" &&
                      IG160705.Text == "1" &&
                      IG160805.Text == "1" &&
                      IG160905.Text == "1" &&
                      IG1601005.Text == "1" &&
                      IG1601205.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601205.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 12;
                        chkMember6.Focus();
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601205);
        }





        private void QCFUP02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (QCFUP02.Text.IndexOf(" ") != -1)
                {
                    MessageBox.Show("Incomplete input ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP02.Focus();
                }
                else
                {
                    if (QCFUP02.Text.Length != 5)
                    {
                        MessageBox.Show("Incomplete input ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        QCFUP02.Focus();
                    }
                    else
                    {
                        if (QCFUP02.Text == "  :")
                        {
                            MessageBox.Show("Time of interview cannot be blank ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            QCFUP02.Focus();
                        }
                        else
                        {
                            QCFUP02.BackColor = Color.Bisque;
                            ChangeColorLabel(0, lbl_QCFUP02);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                if (ex.Message == "The DateTime represented by the string is not supported in calendar System.Globalization.GregorianCalendar.")
                {
                    MessageBox.Show("Invalid time ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP02.Focus();
                }
                else
                {
                    MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP02.Focus();
                }
            }
            finally
            {
                obj_op = null;
            }

        }


        private void QCFUP03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'QCFUP03'", QCFUP03.Text) == true)
                {
                    QCFUP03.Focus();
                }
                else
                {
                    if (QCFUP03.Text == "2")
                    {
                        obj_op.EnableControls(QCFUP04);
                        QCFUP04.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(QCFUP04);
                        QCFUP05.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            QCFUP03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_QCFUP03);
        }


        private void QCFUP04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {

                if (string.IsNullOrEmpty(QCFUP04.Text))
                {
                    MessageBox.Show("Please enter changes in forms ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP04.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            QCFUP04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_QCFUP04);
        }


        private void QCFUP05_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            if (QCFUP05.Text.IndexOf(" ") == -1)
            {
                if (QCFUP05.Text.Length == 10)
                {
                    try
                    {
                        string[] dt1;


                        if (QCFUP05.Text != "  /  /")
                        {
                            dt1 = QCFUP05.Text.ToString().Split('/');

                            DateTime dt = new DateTime();
                            System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                            dt = Convert.ToDateTime(QCFUP05.Text);


                            if (dt > DateTime.Now.Date)
                            {
                                MessageBox.Show("Date cannot be greater than todays's date ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                QCFUP05.Focus();
                            }

                        }
                        else if (QCFUP05.Text == "  /  /")
                        {
                            MessageBox.Show("Date of form filling cannot be blank ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            QCFUP05.Focus();
                        }
                    }

                    catch (Exception ex)
                    {
                        if (ex.Message == "String was not recognized as a valid DateTime.")
                        {
                            MessageBox.Show("Invalid Date format. Date must be entered in dd/mm/yyyy format ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            QCFUP05.Focus();
                        }
                        else
                        {
                            MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            QCFUP05.Focus();
                        }
                    }

                    finally
                    {
                        obj_op = null;
                    }
                }
                else
                {
                    MessageBox.Show("Please enter complete date ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP05.Focus();
                }
            }
            else
            {
                MessageBox.Show("Please enter complete date ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                QCFUP05.Focus();
            }

            QCFUP05.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_QCFUP05);
        }


        private void QCFUP06_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (QCFUP06.Text.IndexOf(" ") == -1)
                {
                    if (QCFUP06.Text.Length == 5)
                    {
                        if (QCFUP06.Text == "  :")
                        {
                            MessageBox.Show("Time of interview cannot be blank ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            QCFUP06.Focus();
                        }
                        else
                        {
                            DateTime dt = Convert.ToDateTime(IB06.Text);
                            DateTime dt_end = new DateTime();

                            if (QCFUP06.Text != "  :")
                            {
                                dt_end = Convert.ToDateTime(QCFUP06.Text);
                            }

                            if (dt_end.ToShortTimeString() != "00:00")
                            {
                                if (dt > dt_end)
                                {
                                    MessageBox.Show("Interview start time cannot be greater than interview end time ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    QCFUP06.Focus();
                                }
                                else
                                {
                                    QCFUP06.BackColor = Color.Bisque;
                                    ChangeColorLabel(0, lbl_QCFUP06);
                                }
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Incomplete input", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        QCFUP06.Focus();
                    }
                }
                else
                {
                    MessageBox.Show("Incomplete input", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP06.Focus();
                }
            }

            catch (Exception ex)
            {
                if (ex.Message == "The DateTime represented by the string is not supported in calendar System.Globalization.GregorianCalendar.")
                {
                    MessageBox.Show("Invalid time ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP06.Focus();
                }
                else
                {
                    MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    QCFUP06.Focus();
                }
            }

            finally
            {

            }

        }


        private void QCFUP07_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'QCFUP07'", QCFUP07.Text) == true)
                {
                    QCFUP07.Focus();
                }
                else
                {
                    cmdSave.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            QCFUP07.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_QCFUP07);
        }





        private void IC0605_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0605'", IC0605.Text) == true)
                {
                    IC0605.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0605.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0605);
        }


        private void IC0705_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0705'", IC0705.Text) == true)
                {
                    IC0705.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0705.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0705);
        }


        private void IC0805_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0805'", IC0805.Text) == true)
                {
                    IC0805.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0805.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0805);
        }


        private void IC0905_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0905'", IC0905.Text) == true)
                {
                    IC0905.Focus();
                }
                else
                {
                    if (IC0905.Text == "1")
                    {
                        obj_op.DisableControls(IC01005);
                        chkBaby6.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01005);
                        IC01005.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0905.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0905);
        }


        private void IC01005_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01005'", IC01005.Text) == true)
                {
                    IC01005.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01005.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01005);
        }


        private void IC01105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01105'", IC01105.Text) == true)
                {
                    IC01105.Focus();
                }
                else
                {
                    if (IC01106.Enabled == true)
                    {
                        IC01106.Focus();
                    }
                    else if (IC01107.Enabled == true)
                    {
                        IC01107.Focus();
                    }
                    else if (IC01108.Enabled == true)
                    {
                        IC01108.Focus();
                    }
                    else if (IC01109.Enabled == true)
                    {
                        IC01109.Focus();
                    }
                    else if (IC01110.Enabled == true)
                    {
                        IC01110.Focus();
                    }
                    else if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01105);
        }





        private void IC0606_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0606'", IC0606.Text) == true)
                {
                    IC0606.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0606.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0606);
        }


        private void IC0706_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0706'", IC0706.Text) == true)
                {
                    IC0706.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0706.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0706);
        }


        private void IC0806_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0806'", IC0806.Text) == true)
                {
                    IC0806.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0806.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0806);
        }


        private void IC0906_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0906'", IC0906.Text) == true)
                {
                    IC0906.Focus();
                }
                else
                {
                    if (IC0906.Text == "1")
                    {
                        obj_op.DisableControls(IC01006);
                        chkBaby7.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01006);
                        IC01006.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0906.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0906);
        }


        private void IC01006_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01006'", IC01006.Text) == true)
                {
                    IC01006.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01006.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01006);
        }


        private void IC01106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01106'", IC01106.Text) == true)
                {
                    IC01106.Focus();
                }
                else
                {
                    if (IC01107.Enabled == true)
                    {
                        IC01107.Focus();
                    }
                    else if (IC01108.Enabled == true)
                    {
                        IC01108.Focus();
                    }
                    else if (IC01109.Enabled == true)
                    {
                        IC01109.Focus();
                    }
                    else if (IC01110.Enabled == true)
                    {
                        IC01110.Focus();
                    }
                    else if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01106);
        }





        private void IC0607_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0607'", IC0607.Text) == true)
                {
                    IC0607.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0607.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0607);
        }


        private void IC0707_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0707'", IC0707.Text) == true)
                {
                    IC0707.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0707.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0707);
        }


        private void IC0807_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0807'", IC0807.Text) == true)
                {
                    IC0807.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0807.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0807);
        }


        private void IC0907_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0907'", IC0907.Text) == true)
                {
                    IC0907.Focus();
                }
                else
                {
                    if (IC0907.Text == "1")
                    {
                        obj_op.DisableControls(IC01007);
                        chkBaby8.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01007);
                        IC01007.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0907.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0907);
        }


        private void IC01007_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01007'", IC01007.Text) == true)
                {
                    IC01007.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01007.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01007);
        }


        private void IC01107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01107'", IC01107.Text) == true)
                {
                    IC01107.Focus();
                }
                else
                {
                    if (IC01108.Enabled == true)
                    {
                        IC01108.Focus();
                    }
                    else if (IC01109.Enabled == true)
                    {
                        IC01109.Focus();
                    }
                    else if (IC01110.Enabled == true)
                    {
                        IC01110.Focus();
                    }
                    else if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01107);
        }





        private void IC0608_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0608'", IC0608.Text) == true)
                {
                    IC0608.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0608.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0608);
        }


        private void IC0708_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0708'", IC0708.Text) == true)
                {
                    IC0708.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0708.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0708);
        }


        private void IC0808_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0808'", IC0808.Text) == true)
                {
                    IC0808.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0808.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0808);
        }


        private void IC0908_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0908'", IC0908.Text) == true)
                {
                    IC0908.Focus();
                }
                else
                {
                    if (IC0908.Text == "1")
                    {
                        obj_op.DisableControls(IC01008);
                        chkBaby9.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01008);
                        IC01008.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0908.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0908);
        }


        private void IC01008_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01008'", IC01008.Text) == true)
                {
                    IC01008.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01008.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01008);
        }


        private void IC01108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01108'", IC01108.Text) == true)
                {
                    IC01108.Focus();
                }
                else
                {
                    if (IC01109.Enabled == true)
                    {
                        IC01109.Focus();
                    }
                    else if (IC01110.Enabled == true)
                    {
                        IC01110.Focus();
                    }
                    else if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01108);
        }





        private void IC0609_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0609'", IC0609.Text) == true)
                {
                    IC0609.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0609.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0609);
        }


        private void IC0709_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0709'", IC0709.Text) == true)
                {
                    IC0709.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0709.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0709);
        }


        private void IC0809_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0809'", IC0809.Text) == true)
                {
                    IC0809.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0809.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0809);
        }


        private void IC0909_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC0909'", IC0909.Text) == true)
                {
                    IC0909.Focus();
                }
                else
                {
                    if (IC0909.Text == "1")
                    {
                        obj_op.DisableControls(IC01009);
                        chkBaby10.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01009);
                        IC01009.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC0909.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC0909);
        }


        private void IC01009_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01009'", IC01009.Text) == true)
                {
                    IC01009.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01009.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01009);
        }


        private void IC01109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01109'", IC01109.Text) == true)
                {
                    IC01109.Focus();
                }
                else
                {
                    if (IC01110.Enabled == true)
                    {
                        IC01110.Focus();
                    }
                    else if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01109);
        }





        private void IC06010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC06010'", IC06010.Text) == true)
                {
                    IC06010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC06010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC06010);
        }


        private void IC07010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC07010'", IC07010.Text) == true)
                {
                    IC07010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC07010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC07010);
        }


        private void IC08010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC08010'", IC08010.Text) == true)
                {
                    IC08010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC08010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC08010);
        }


        private void IC09010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC09010'", IC09010.Text) == true)
                {
                    IC09010.Focus();
                }
                else
                {
                    if (IC09010.Text == "1")
                    {
                        obj_op.DisableControls(IC01010);
                        chkBaby11.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01010);
                        IC01010.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC09010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC09010);
        }


        private void IC01010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01010'", IC01010.Text) == true)
                {
                    IC01010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01010);
        }


        private void IC01110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01110'", IC01110.Text) == true)
                {
                    IC01110.Focus();
                }
                else
                {
                    if (IC01111.Enabled == true)
                    {
                        IC01111.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 3;
                        ID01.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01110);
        }





        private void IC06011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC06011'", IC06011.Text) == true)
                {
                    IC06011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC06011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC06011);
        }


        private void IC07011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC07011'", IC07011.Text) == true)
                {
                    IC07011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC07011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC07011);
        }


        private void IC08011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC08011'", IC08011.Text) == true)
                {
                    IC08011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC08011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC08011);
        }


        private void IC09011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC09011'", IC09011.Text) == true)
                {
                    IC09011.Focus();
                }
                else
                {
                    if (IC09011.Text == "1")
                    {
                        obj_op.DisableControls(IC01011);

                        tabControl1.SelectedIndex = 11;
                        IC01105.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IC01011);
                        IC01011.Focus();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC09011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC09011);
        }


        private void IC01011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01011'", IC01011.Text) == true)
                {
                    IC01011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01011);
        }


        private void IC01111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01111'", IC01111.Text) == true)
                {
                    IC01111.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 3;
                    ID01.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01111);
        }


        private void chkMember6_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember6'", chkMember6.Text) == true)
                {
                    chkMember6.Focus();
                }
                else
                {
                    if (chkMember6.Text == "1")
                    {
                        obj_op.EnableControls(IG0406);
                        obj_op.EnableControls(IG0506);
                        obj_op.EnableControls(IG060106);
                        obj_op.EnableControls(IG060206);
                        obj_op.EnableControls(IG060306);
                        obj_op.EnableControls(IG060406);
                        obj_op.EnableControls(IG060506);

                        obj_op.EnableControls(IG070106);
                        obj_op.EnableControls(IG070206);
                        obj_op.EnableControls(IG070306);
                        obj_op.EnableControls(IG070406);
                        obj_op.EnableControls(IG070506);
                        obj_op.EnableControls(IG070606);
                        obj_op.EnableControls(IG070706);
                        obj_op.EnableControls(IG070806);
                        obj_op.EnableControls(IG070906);
                        obj_op.EnableControls(IG0701006);
                        obj_op.EnableControls(IG0701106);
                        obj_op.EnableControls(IG0701206);
                        obj_op.EnableControls(IG0701306);

                        obj_op.EnableControls(IG0806);
                        obj_op.EnableControls(IG0906);
                        obj_op.EnableControls(IG01006);

                        obj_op.EnableControls(IG01106);
                        obj_op.EnableControls(IG01206);
                        obj_op.EnableControls(IG01306);
                        obj_op.EnableControls(IG01406);
                        obj_op.EnableControls(IG01506);

                        obj_op.EnableControls(IG160106);
                        obj_op.EnableControls(IG160206);
                        obj_op.EnableControls(IG160306);
                        obj_op.EnableControls(IG160406);
                        obj_op.EnableControls(IG160506);
                        obj_op.EnableControls(IG160606);
                        obj_op.EnableControls(IG160706);
                        obj_op.EnableControls(IG160806);
                        obj_op.EnableControls(IG160906);
                        obj_op.EnableControls(IG1601006);
                        obj_op.EnableControls(IG1601106);
                        obj_op.EnableControls(IG1601206);

                        IG0406.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IG0406);
                        obj_op.DisableControls(IG0506);
                        obj_op.DisableControls(IG060106);
                        obj_op.DisableControls(IG060206);
                        obj_op.DisableControls(IG060306);
                        obj_op.DisableControls(IG060406);
                        obj_op.DisableControls(IG060506);

                        obj_op.DisableControls(IG070106);
                        obj_op.DisableControls(IG070206);
                        obj_op.DisableControls(IG070306);
                        obj_op.DisableControls(IG070406);
                        obj_op.DisableControls(IG070506);
                        obj_op.DisableControls(IG070606);
                        obj_op.DisableControls(IG070706);
                        obj_op.DisableControls(IG070806);
                        obj_op.DisableControls(IG070906);
                        obj_op.DisableControls(IG0701006);
                        obj_op.DisableControls(IG0701106);
                        obj_op.DisableControls(IG0701206);
                        obj_op.DisableControls(IG0701306);

                        obj_op.DisableControls(IG0806);
                        obj_op.DisableControls(IG0906);
                        obj_op.DisableControls(IG01006);

                        obj_op.DisableControls(IG01106);
                        obj_op.DisableControls(IG01206);
                        obj_op.DisableControls(IG01306);
                        obj_op.DisableControls(IG01406);
                        obj_op.DisableControls(IG01506);

                        obj_op.DisableControls(IG160106);
                        obj_op.DisableControls(IG160206);
                        obj_op.DisableControls(IG160306);
                        obj_op.DisableControls(IG160406);
                        obj_op.DisableControls(IG160506);
                        obj_op.DisableControls(IG160606);
                        obj_op.DisableControls(IG160706);
                        obj_op.DisableControls(IG160806);
                        obj_op.DisableControls(IG160906);
                        obj_op.DisableControls(IG1601006);
                        obj_op.DisableControls(IG1601106);
                        obj_op.DisableControls(IG1601206);



                        obj_op.DisableControls(IG0407);
                        obj_op.DisableControls(IG0507);
                        obj_op.DisableControls(IG060107);
                        obj_op.DisableControls(IG060207);
                        obj_op.DisableControls(IG060307);
                        obj_op.DisableControls(IG060407);
                        obj_op.DisableControls(IG060507);

                        obj_op.DisableControls(IG070107);
                        obj_op.DisableControls(IG070207);
                        obj_op.DisableControls(IG070307);
                        obj_op.DisableControls(IG070407);
                        obj_op.DisableControls(IG070507);
                        obj_op.DisableControls(IG070607);
                        obj_op.DisableControls(IG070707);
                        obj_op.DisableControls(IG070807);
                        obj_op.DisableControls(IG070907);
                        obj_op.DisableControls(IG0701007);
                        obj_op.DisableControls(IG0701107);
                        obj_op.DisableControls(IG0701207);
                        obj_op.DisableControls(IG0701307);

                        obj_op.DisableControls(IG0807);
                        obj_op.DisableControls(IG0907);
                        obj_op.DisableControls(IG01007);

                        obj_op.DisableControls(IG01107);
                        obj_op.DisableControls(IG01207);
                        obj_op.DisableControls(IG01307);
                        obj_op.DisableControls(IG01407);
                        obj_op.DisableControls(IG01507);

                        obj_op.DisableControls(IG160107);
                        obj_op.DisableControls(IG160207);
                        obj_op.DisableControls(IG160307);
                        obj_op.DisableControls(IG160407);
                        obj_op.DisableControls(IG160507);
                        obj_op.DisableControls(IG160607);
                        obj_op.DisableControls(IG160707);
                        obj_op.DisableControls(IG160807);
                        obj_op.DisableControls(IG160907);
                        obj_op.DisableControls(IG1601007);
                        obj_op.DisableControls(IG1601107);
                        obj_op.DisableControls(IG1601207);



                        obj_op.DisableControls(IG0408);
                        obj_op.DisableControls(IG0508);
                        obj_op.DisableControls(IG060108);
                        obj_op.DisableControls(IG060208);
                        obj_op.DisableControls(IG060308);
                        obj_op.DisableControls(IG060408);
                        obj_op.DisableControls(IG060508);

                        obj_op.DisableControls(IG070108);
                        obj_op.DisableControls(IG070208);
                        obj_op.DisableControls(IG070308);
                        obj_op.DisableControls(IG070408);
                        obj_op.DisableControls(IG070508);
                        obj_op.DisableControls(IG070608);
                        obj_op.DisableControls(IG070708);
                        obj_op.DisableControls(IG070808);
                        obj_op.DisableControls(IG070908);
                        obj_op.DisableControls(IG0701008);
                        obj_op.DisableControls(IG0701108);
                        obj_op.DisableControls(IG0701208);
                        obj_op.DisableControls(IG0701308);

                        obj_op.DisableControls(IG0808);
                        obj_op.DisableControls(IG0908);
                        obj_op.DisableControls(IG01008);

                        obj_op.DisableControls(IG01108);
                        obj_op.DisableControls(IG01208);
                        obj_op.DisableControls(IG01308);
                        obj_op.DisableControls(IG01408);
                        obj_op.DisableControls(IG01508);

                        obj_op.DisableControls(IG160108);
                        obj_op.DisableControls(IG160208);
                        obj_op.DisableControls(IG160308);
                        obj_op.DisableControls(IG160408);
                        obj_op.DisableControls(IG160508);
                        obj_op.DisableControls(IG160608);
                        obj_op.DisableControls(IG160708);
                        obj_op.DisableControls(IG160808);
                        obj_op.DisableControls(IG160908);
                        obj_op.DisableControls(IG1601008);
                        obj_op.DisableControls(IG1601108);
                        obj_op.DisableControls(IG1601208);





                        obj_op.DisableControls(IG0409);
                        obj_op.DisableControls(IG0509);
                        obj_op.DisableControls(IG060109);
                        obj_op.DisableControls(IG060209);
                        obj_op.DisableControls(IG060309);
                        obj_op.DisableControls(IG060409);
                        obj_op.DisableControls(IG060509);

                        obj_op.DisableControls(IG070109);
                        obj_op.DisableControls(IG070209);
                        obj_op.DisableControls(IG070309);
                        obj_op.DisableControls(IG070409);
                        obj_op.DisableControls(IG070509);
                        obj_op.DisableControls(IG070609);
                        obj_op.DisableControls(IG070709);
                        obj_op.DisableControls(IG070809);
                        obj_op.DisableControls(IG070909);
                        obj_op.DisableControls(IG0701009);
                        obj_op.DisableControls(IG0701109);
                        obj_op.DisableControls(IG0701209);
                        obj_op.DisableControls(IG0701309);

                        obj_op.DisableControls(IG0809);
                        obj_op.DisableControls(IG0909);
                        obj_op.DisableControls(IG01009);

                        obj_op.DisableControls(IG01109);
                        obj_op.DisableControls(IG01209);
                        obj_op.DisableControls(IG01309);
                        obj_op.DisableControls(IG01409);
                        obj_op.DisableControls(IG01509);

                        obj_op.DisableControls(IG160109);
                        obj_op.DisableControls(IG160209);
                        obj_op.DisableControls(IG160309);
                        obj_op.DisableControls(IG160409);
                        obj_op.DisableControls(IG160509);
                        obj_op.DisableControls(IG160609);
                        obj_op.DisableControls(IG160709);
                        obj_op.DisableControls(IG160809);
                        obj_op.DisableControls(IG160909);
                        obj_op.DisableControls(IG1601009);
                        obj_op.DisableControls(IG1601109);
                        obj_op.DisableControls(IG1601209);






                        obj_op.DisableControls(IG0410);
                        obj_op.DisableControls(IG0510);
                        obj_op.DisableControls(IG060110);
                        obj_op.DisableControls(IG060210);
                        obj_op.DisableControls(IG060310);
                        obj_op.DisableControls(IG060410);
                        obj_op.DisableControls(IG060510);

                        obj_op.DisableControls(IG070110);
                        obj_op.DisableControls(IG070210);
                        obj_op.DisableControls(IG070310);
                        obj_op.DisableControls(IG070410);
                        obj_op.DisableControls(IG070510);
                        obj_op.DisableControls(IG070610);
                        obj_op.DisableControls(IG070710);
                        obj_op.DisableControls(IG070810);
                        obj_op.DisableControls(IG070910);
                        obj_op.DisableControls(IG0701010);
                        obj_op.DisableControls(IG0701110);
                        obj_op.DisableControls(IG0701210);
                        obj_op.DisableControls(IG0701310);

                        obj_op.DisableControls(IG0810);
                        obj_op.DisableControls(IG0910);
                        obj_op.DisableControls(IG01010);

                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                        obj_op.DisableControls(IG01310);
                        obj_op.DisableControls(IG01410);
                        obj_op.DisableControls(IG01510);

                        obj_op.DisableControls(IG160110);
                        obj_op.DisableControls(IG160210);
                        obj_op.DisableControls(IG160310);
                        obj_op.DisableControls(IG160410);
                        obj_op.DisableControls(IG160510);
                        obj_op.DisableControls(IG160610);
                        obj_op.DisableControls(IG160710);
                        obj_op.DisableControls(IG160810);
                        obj_op.DisableControls(IG160910);
                        obj_op.DisableControls(IG1601010);
                        obj_op.DisableControls(IG1601110);
                        obj_op.DisableControls(IG1601210);


                        chkMember7.Focus();

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember6.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember6);
        }


        private void IG0406_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0406'", IG0406.Text) == true)
                {
                    IG0406.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0406.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0406);
        }


        private void IG0506_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0506'", IG0506.Text) == true)
                {
                    IG0506.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0506.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0506);
        }


        private void IG060106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060106'", IG060106.Text) == true)
                {
                    IG060106.Focus();
                }
                else
                {
                    if (IG070106.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 13;
                        IG070106.Focus();
                    }
                    else if (IG070107.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 13;
                        IG070107.Focus();
                    }
                    else if (IG070108.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 13;
                        IG070108.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 13;
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 13;
                        IG070110.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060106);
        }


        private void IG060206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060206'", IG060206.Text) == true)
                {
                    IG060206.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060206);
        }


        private void IG060306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060306'", IG060306.Text) == true)
                {
                    IG060306.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060306);
        }


        private void IG060406_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060406'", IG060406.Text) == true)
                {
                    IG060406.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060406.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060406);
        }


        private void IG060506_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060506'", IG060506.Text) == true)
                {
                    IG060506.Focus();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060506.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060506);
        }


        private void IG070106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070106'", IG070106.Text) == true)
                {
                    IG070106.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070106);
        }


        private void IG070206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070206'", IG070206.Text) == true)
                {
                    IG070206.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070206);
        }


        private void IG070306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070306'", IG070306.Text) == true)
                {
                    IG070306.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070306);
        }


        private void IG070406_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070406'", IG070406.Text) == true)
                {
                    IG070406.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070406.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070406);
        }


        private void IG070506_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070506'", IG070506.Text) == true)
                {
                    IG070506.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070506.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070506);
        }


        private void IG070606_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070606'", IG070606.Text) == true)
                {
                    IG070606.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070606.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070606);
        }


        private void IG070706_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070706'", IG070706.Text) == true)
                {
                    IG070706.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070706.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070706);
        }


        private void IG070806_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070806'", IG070806.Text) == true)
                {
                    IG070806.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070806.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070806);
        }


        private void IG070906_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070906'", IG070906.Text) == true)
                {
                    IG070906.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070906.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070906);
        }


        private void IG0701006_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701006'", IG0701006.Text) == true)
                {
                    IG0701006.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701006.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701006);
        }


        private void IG0701106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701106'", IG0701106.Text) == true)
                {
                    IG0701106.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701106);
        }


        private void IG0701206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701206'", IG0701206.Text) == true)
                {
                    IG0701206.Focus();
                }
                else
                {
                    if (
                        IG070106.Text == "1" &&
                        IG070206.Text == "1" &&
                        IG070306.Text == "1" &&
                        IG070406.Text == "1" &&
                        IG070506.Text == "1" &&
                        IG070606.Text == "1" &&
                        IG070706.Text == "1" &&
                        IG070806.Text == "1" &&
                        IG070906.Text == "1" &&
                        IG0701006.Text == "1" &&
                        IG0701106.Text == "1" &&
                        IG0701206.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701206.Focus();
                    }
                    else
                    {
                        if (IG0701206.Text == "1")
                        {
                            obj_op.DisableControls(IG0701306);
                            obj_op.DisableControls(IG0806);

                            IG0906.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701306);
                            obj_op.EnableControls(IG0806);

                            IG0701306.Focus();
                        }
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701206);
        }


        private void IG0701306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701306'", IG0701306.Text) == true)
                {
                    IG0701306.Focus();
                }
                else
                {

                    if (
                        IG070106.Text == "1" &&
                        IG070206.Text == "1" &&
                        IG070306.Text == "1" &&
                        IG070406.Text == "1" &&
                        IG070506.Text == "1" &&
                        IG070606.Text == "1" &&
                        IG070706.Text == "1" &&
                        IG070806.Text == "1" &&
                        IG070906.Text == "1" &&
                        IG0701006.Text == "1" &&
                        IG0701106.Text == "1" &&
                        IG0701306.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701306.Focus();
                    }
                    else
                    {
                        if (IG0701306.Text == "1")
                        {
                            obj_op.DisableControls(IG0806);
                            IG0906.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0806);
                            IG0806.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701306);
        }


        private void IG0806_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0806'", IG0806.Text) == true)
                {
                    IG0806.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0806.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0806);
        }


        private void IG0906_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0906'", IG0906.Text) == true)
                {
                    IG0906.Focus();
                }
                else
                {
                    if (IG0906.Text == "0")
                    {
                        obj_op.DisableControls(IG01006);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01006);
                    }


                    if (IG01006.Enabled == true)
                    {
                        IG01006.Focus();
                    }
                    else if (IG070107.Enabled == true)
                    {
                        IG070107.Focus();
                    }
                    else if (IG070108.Enabled == true)
                    {
                        IG070108.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0906.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0906);
        }


        private void IG01006_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01006'", IG01006.Text) == true)
                {
                    IG01006.Focus();
                }
                else
                {
                    if (IG01006.Text == "1")
                    {
                        obj_op.DisableControls(IG01106);
                        obj_op.DisableControls(IG01206);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01106);
                        obj_op.EnableControls(IG01206);
                    }


                    if (IG070107.Enabled == true)
                    {
                        IG070107.Focus();
                    }
                    else if (IG070108.Enabled == true)
                    {
                        IG070108.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01106.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01006.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01006);
        }


        private void chkMember7_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember7'", chkMember7.Text) == true)
                {
                    chkMember7.Focus();
                }
                else
                {

                    if (chkMember6.Text == "2" && chkMember7.Text == "1")
                    {
                        MessageBox.Show("You have to add 6th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember7.Focus();
                        return;
                    }



                    if (chkMember7.Text == "1")
                    {
                        obj_op.EnableControls(IG0407);
                        obj_op.EnableControls(IG0507);
                        obj_op.EnableControls(IG060107);
                        obj_op.EnableControls(IG060207);
                        obj_op.EnableControls(IG060307);
                        obj_op.EnableControls(IG060407);
                        obj_op.EnableControls(IG060507);

                        obj_op.EnableControls(IG070107);
                        obj_op.EnableControls(IG070207);
                        obj_op.EnableControls(IG070307);
                        obj_op.EnableControls(IG070407);
                        obj_op.EnableControls(IG070507);
                        obj_op.EnableControls(IG070607);
                        obj_op.EnableControls(IG070707);
                        obj_op.EnableControls(IG070807);
                        obj_op.EnableControls(IG070907);
                        obj_op.EnableControls(IG0701007);
                        obj_op.EnableControls(IG0701107);
                        obj_op.EnableControls(IG0701207);
                        obj_op.EnableControls(IG0701307);

                        obj_op.EnableControls(IG0807);
                        obj_op.EnableControls(IG0907);
                        obj_op.EnableControls(IG01007);

                        obj_op.EnableControls(IG01107);
                        obj_op.EnableControls(IG01207);
                        obj_op.EnableControls(IG01307);
                        obj_op.EnableControls(IG01407);
                        obj_op.EnableControls(IG01507);

                        obj_op.EnableControls(IG160107);
                        obj_op.EnableControls(IG160207);
                        obj_op.EnableControls(IG160307);
                        obj_op.EnableControls(IG160407);
                        obj_op.EnableControls(IG160507);
                        obj_op.EnableControls(IG160607);
                        obj_op.EnableControls(IG160707);
                        obj_op.EnableControls(IG160807);
                        obj_op.EnableControls(IG160907);
                        obj_op.EnableControls(IG1601007);
                        obj_op.EnableControls(IG1601107);
                        obj_op.EnableControls(IG1601207);

                        IG0407.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0407);
                        obj_op.DisableControls(IG0507);
                        obj_op.DisableControls(IG060107);
                        obj_op.DisableControls(IG060207);
                        obj_op.DisableControls(IG060307);
                        obj_op.DisableControls(IG060407);
                        obj_op.DisableControls(IG060507);

                        obj_op.DisableControls(IG070107);
                        obj_op.DisableControls(IG070207);
                        obj_op.DisableControls(IG070307);
                        obj_op.DisableControls(IG070407);
                        obj_op.DisableControls(IG070507);
                        obj_op.DisableControls(IG070607);
                        obj_op.DisableControls(IG070707);
                        obj_op.DisableControls(IG070807);
                        obj_op.DisableControls(IG070907);
                        obj_op.DisableControls(IG0701007);
                        obj_op.DisableControls(IG0701107);
                        obj_op.DisableControls(IG0701207);
                        obj_op.DisableControls(IG0701307);

                        obj_op.DisableControls(IG0807);
                        obj_op.DisableControls(IG0907);
                        obj_op.DisableControls(IG01007);

                        obj_op.DisableControls(IG01107);
                        obj_op.DisableControls(IG01207);
                        obj_op.DisableControls(IG01307);
                        obj_op.DisableControls(IG01407);
                        obj_op.DisableControls(IG01507);

                        obj_op.DisableControls(IG160107);
                        obj_op.DisableControls(IG160207);
                        obj_op.DisableControls(IG160307);
                        obj_op.DisableControls(IG160407);
                        obj_op.DisableControls(IG160507);
                        obj_op.DisableControls(IG160607);
                        obj_op.DisableControls(IG160707);
                        obj_op.DisableControls(IG160807);
                        obj_op.DisableControls(IG160907);
                        obj_op.DisableControls(IG1601007);
                        obj_op.DisableControls(IG1601107);
                        obj_op.DisableControls(IG1601207);



                        obj_op.DisableControls(IG0408);
                        obj_op.DisableControls(IG0508);
                        obj_op.DisableControls(IG060108);
                        obj_op.DisableControls(IG060208);
                        obj_op.DisableControls(IG060308);
                        obj_op.DisableControls(IG060408);
                        obj_op.DisableControls(IG060508);

                        obj_op.DisableControls(IG070108);
                        obj_op.DisableControls(IG070208);
                        obj_op.DisableControls(IG070308);
                        obj_op.DisableControls(IG070408);
                        obj_op.DisableControls(IG070508);
                        obj_op.DisableControls(IG070608);
                        obj_op.DisableControls(IG070708);
                        obj_op.DisableControls(IG070808);
                        obj_op.DisableControls(IG070908);
                        obj_op.DisableControls(IG0701008);
                        obj_op.DisableControls(IG0701108);
                        obj_op.DisableControls(IG0701208);
                        obj_op.DisableControls(IG0701308);

                        obj_op.DisableControls(IG0808);
                        obj_op.DisableControls(IG0908);
                        obj_op.DisableControls(IG01008);

                        obj_op.DisableControls(IG01108);
                        obj_op.DisableControls(IG01208);
                        obj_op.DisableControls(IG01308);
                        obj_op.DisableControls(IG01408);
                        obj_op.DisableControls(IG01508);

                        obj_op.DisableControls(IG160108);
                        obj_op.DisableControls(IG160208);
                        obj_op.DisableControls(IG160308);
                        obj_op.DisableControls(IG160408);
                        obj_op.DisableControls(IG160508);
                        obj_op.DisableControls(IG160608);
                        obj_op.DisableControls(IG160708);
                        obj_op.DisableControls(IG160808);
                        obj_op.DisableControls(IG160908);
                        obj_op.DisableControls(IG1601008);
                        obj_op.DisableControls(IG1601108);
                        obj_op.DisableControls(IG1601208);





                        obj_op.DisableControls(IG0409);
                        obj_op.DisableControls(IG0509);
                        obj_op.DisableControls(IG060109);
                        obj_op.DisableControls(IG060209);
                        obj_op.DisableControls(IG060309);
                        obj_op.DisableControls(IG060409);
                        obj_op.DisableControls(IG060509);

                        obj_op.DisableControls(IG070109);
                        obj_op.DisableControls(IG070209);
                        obj_op.DisableControls(IG070309);
                        obj_op.DisableControls(IG070409);
                        obj_op.DisableControls(IG070509);
                        obj_op.DisableControls(IG070609);
                        obj_op.DisableControls(IG070709);
                        obj_op.DisableControls(IG070809);
                        obj_op.DisableControls(IG070909);
                        obj_op.DisableControls(IG0701009);
                        obj_op.DisableControls(IG0701109);
                        obj_op.DisableControls(IG0701209);
                        obj_op.DisableControls(IG0701309);

                        obj_op.DisableControls(IG0809);
                        obj_op.DisableControls(IG0909);
                        obj_op.DisableControls(IG01009);

                        obj_op.DisableControls(IG01109);
                        obj_op.DisableControls(IG01209);
                        obj_op.DisableControls(IG01309);
                        obj_op.DisableControls(IG01409);
                        obj_op.DisableControls(IG01509);

                        obj_op.DisableControls(IG160109);
                        obj_op.DisableControls(IG160209);
                        obj_op.DisableControls(IG160309);
                        obj_op.DisableControls(IG160409);
                        obj_op.DisableControls(IG160509);
                        obj_op.DisableControls(IG160609);
                        obj_op.DisableControls(IG160709);
                        obj_op.DisableControls(IG160809);
                        obj_op.DisableControls(IG160909);
                        obj_op.DisableControls(IG1601009);
                        obj_op.DisableControls(IG1601109);
                        obj_op.DisableControls(IG1601209);






                        obj_op.DisableControls(IG0410);
                        obj_op.DisableControls(IG0510);
                        obj_op.DisableControls(IG060110);
                        obj_op.DisableControls(IG060210);
                        obj_op.DisableControls(IG060310);
                        obj_op.DisableControls(IG060410);
                        obj_op.DisableControls(IG060510);

                        obj_op.DisableControls(IG070110);
                        obj_op.DisableControls(IG070210);
                        obj_op.DisableControls(IG070310);
                        obj_op.DisableControls(IG070410);
                        obj_op.DisableControls(IG070510);
                        obj_op.DisableControls(IG070610);
                        obj_op.DisableControls(IG070710);
                        obj_op.DisableControls(IG070810);
                        obj_op.DisableControls(IG070910);
                        obj_op.DisableControls(IG0701010);
                        obj_op.DisableControls(IG0701110);
                        obj_op.DisableControls(IG0701210);
                        obj_op.DisableControls(IG0701310);

                        obj_op.DisableControls(IG0810);
                        obj_op.DisableControls(IG0910);
                        obj_op.DisableControls(IG01010);

                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                        obj_op.DisableControls(IG01310);
                        obj_op.DisableControls(IG01410);
                        obj_op.DisableControls(IG01510);

                        obj_op.DisableControls(IG160110);
                        obj_op.DisableControls(IG160210);
                        obj_op.DisableControls(IG160310);
                        obj_op.DisableControls(IG160410);
                        obj_op.DisableControls(IG160510);
                        obj_op.DisableControls(IG160610);
                        obj_op.DisableControls(IG160710);
                        obj_op.DisableControls(IG160810);
                        obj_op.DisableControls(IG160910);
                        obj_op.DisableControls(IG1601010);
                        obj_op.DisableControls(IG1601110);
                        obj_op.DisableControls(IG1601210);


                        chkMember8.Focus();

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember7.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember7);
        }


        private void IG0407_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0407'", IG0407.Text) == true)
                {
                    IG0407.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0407.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0407);
        }


        private void IG0507_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0507'", IG0507.Text) == true)
                {
                    IG0507.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0507.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0507);
        }


        private void IG060107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060107'", IG060107.Text) == true)
                {
                    IG060107.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060107);
        }


        private void IG060207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060207'", IG060207.Text) == true)
                {
                    IG060207.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060207);
        }


        private void IG060307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060307'", IG060307.Text) == true)
                {
                    IG060307.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060307);
        }


        private void IG060407_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060407'", IG060407.Text) == true)
                {
                    IG060407.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060407.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060407);
        }


        private void IG060507_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060507'", IG060507.Text) == true)
                {
                    IG060507.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060507.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060507);
        }


        private void IG070107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070107'", IG070107.Text) == true)
                {
                    IG070107.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070107);
        }


        private void IG070207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070207'", IG070207.Text) == true)
                {
                    IG070207.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070207);
        }


        private void IG070307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070307'", IG070307.Text) == true)
                {
                    IG070307.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070307);
        }


        private void IG070407_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070407'", IG070407.Text) == true)
                {
                    IG070407.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070407.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070407);
        }


        private void IG070507_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070507'", IG070507.Text) == true)
                {
                    IG070507.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070507.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070507);
        }


        private void IG070607_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070607'", IG070607.Text) == true)
                {
                    IG070607.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070607.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070607);
        }


        private void IG070707_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070707'", IG070707.Text) == true)
                {
                    IG070707.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070707.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070707);
        }


        private void IG070807_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070807'", IG070807.Text) == true)
                {
                    IG070807.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070807.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070807);
        }


        private void IG070907_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070907'", IG070907.Text) == true)
                {
                    IG070907.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070907.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070907);
        }


        private void IG0701007_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701007'", IG0701007.Text) == true)
                {
                    IG0701007.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701007.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701007);
        }


        private void IG0701107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701107'", IG0701107.Text) == true)
                {
                    IG0701107.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701107);
        }


        private void IG0701207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701207'", IG0701207.Text) == true)
                {
                    IG0701207.Focus();
                }
                else
                {

                    if (
                        IG070107.Text == "1" &&
                        IG070207.Text == "1" &&
                        IG070307.Text == "1" &&
                        IG070407.Text == "1" &&
                        IG070507.Text == "1" &&
                        IG070607.Text == "1" &&
                        IG070707.Text == "1" &&
                        IG070807.Text == "1" &&
                        IG070907.Text == "1" &&
                        IG0701007.Text == "1" &&
                        IG0701107.Text == "1" &&
                        IG0701207.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701207.Focus();
                    }
                    else
                    {
                        if (IG0701207.Text == "1")
                        {
                            obj_op.DisableControls(IG0701307);
                            obj_op.DisableControls(IG0807);

                            IG0907.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701307);
                            obj_op.EnableControls(IG0807);

                            IG0701307.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701207);
        }


        private void IG0701307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701307'", IG0701307.Text) == true)
                {
                    IG0701307.Focus();
                }
                else
                {

                    if (
                        IG070107.Text == "1" &&
                        IG070207.Text == "1" &&
                        IG070307.Text == "1" &&
                        IG070407.Text == "1" &&
                        IG070507.Text == "1" &&
                        IG070607.Text == "1" &&
                        IG070707.Text == "1" &&
                        IG070807.Text == "1" &&
                        IG070907.Text == "1" &&
                        IG0701007.Text == "1" &&
                        IG0701107.Text == "1" &&
                        IG0701307.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701307.Focus();
                    }
                    else
                    {
                        if (IG0701307.Text == "1")
                        {
                            obj_op.DisableControls(IG0807);
                            IG0907.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0807);
                            IG0807.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701307);
        }


        private void IG0807_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0807'", IG0807.Text) == true)
                {
                    IG0807.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0807.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0807);
        }


        private void IG0907_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0907'", IG0907.Text) == true)
                {
                    IG0907.Focus();
                }
                else
                {
                    if (IG0907.Text == "0")
                    {
                        obj_op.DisableControls(IG01007);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01007);
                    }


                    if (IG01007.Enabled == true)
                    {
                        IG01007.Focus();
                    }
                    else if (IG070108.Enabled == true)
                    {
                        IG070108.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }




                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0907.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0907);
        }


        private void IG01007_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01007'", IG01007.Text) == true)
                {
                    IG01007.Focus();
                }
                else
                {
                    if (IG01007.Text == "1")
                    {
                        obj_op.DisableControls(IG01107);
                        obj_op.DisableControls(IG01207);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01107);
                        obj_op.EnableControls(IG01207);
                    }



                    if (IG070108.Enabled == true)
                    {
                        IG070108.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01007.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01007);
        }


        private void chkMember8_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember8'", chkMember8.Text) == true)
                {
                    chkMember8.Focus();
                }
                else
                {

                    if (chkMember7.Text == "2" && chkMember8.Text == "1")
                    {
                        MessageBox.Show("You have to add 7th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember8.Focus();
                        return;
                    }



                    if (chkMember8.Text == "1")
                    {
                        obj_op.EnableControls(IG0408);
                        obj_op.EnableControls(IG0508);
                        obj_op.EnableControls(IG060108);
                        obj_op.EnableControls(IG060208);
                        obj_op.EnableControls(IG060308);
                        obj_op.EnableControls(IG060408);
                        obj_op.EnableControls(IG060508);

                        obj_op.EnableControls(IG070108);
                        obj_op.EnableControls(IG070208);
                        obj_op.EnableControls(IG070308);
                        obj_op.EnableControls(IG070408);
                        obj_op.EnableControls(IG070508);
                        obj_op.EnableControls(IG070608);
                        obj_op.EnableControls(IG070708);
                        obj_op.EnableControls(IG070808);
                        obj_op.EnableControls(IG070908);
                        obj_op.EnableControls(IG0701008);
                        obj_op.EnableControls(IG0701108);
                        obj_op.EnableControls(IG0701208);
                        obj_op.EnableControls(IG0701308);

                        obj_op.EnableControls(IG0808);
                        obj_op.EnableControls(IG0908);
                        obj_op.EnableControls(IG01008);

                        obj_op.EnableControls(IG01108);
                        obj_op.EnableControls(IG01208);
                        obj_op.EnableControls(IG01308);
                        obj_op.EnableControls(IG01408);
                        obj_op.EnableControls(IG01508);

                        obj_op.EnableControls(IG160108);
                        obj_op.EnableControls(IG160208);
                        obj_op.EnableControls(IG160308);
                        obj_op.EnableControls(IG160408);
                        obj_op.EnableControls(IG160508);
                        obj_op.EnableControls(IG160608);
                        obj_op.EnableControls(IG160708);
                        obj_op.EnableControls(IG160808);
                        obj_op.EnableControls(IG160908);
                        obj_op.EnableControls(IG1601008);
                        obj_op.EnableControls(IG1601108);
                        obj_op.EnableControls(IG1601208);

                        IG0408.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0408);
                        obj_op.DisableControls(IG0508);
                        obj_op.DisableControls(IG060108);
                        obj_op.DisableControls(IG060208);
                        obj_op.DisableControls(IG060308);
                        obj_op.DisableControls(IG060408);
                        obj_op.DisableControls(IG060508);

                        obj_op.DisableControls(IG070108);
                        obj_op.DisableControls(IG070208);
                        obj_op.DisableControls(IG070308);
                        obj_op.DisableControls(IG070408);
                        obj_op.DisableControls(IG070508);
                        obj_op.DisableControls(IG070608);
                        obj_op.DisableControls(IG070708);
                        obj_op.DisableControls(IG070808);
                        obj_op.DisableControls(IG070908);
                        obj_op.DisableControls(IG0701008);
                        obj_op.DisableControls(IG0701108);
                        obj_op.DisableControls(IG0701208);
                        obj_op.DisableControls(IG0701308);

                        obj_op.DisableControls(IG0808);
                        obj_op.DisableControls(IG0908);
                        obj_op.DisableControls(IG01008);

                        obj_op.DisableControls(IG01108);
                        obj_op.DisableControls(IG01208);
                        obj_op.DisableControls(IG01308);
                        obj_op.DisableControls(IG01408);
                        obj_op.DisableControls(IG01508);

                        obj_op.DisableControls(IG160108);
                        obj_op.DisableControls(IG160208);
                        obj_op.DisableControls(IG160308);
                        obj_op.DisableControls(IG160408);
                        obj_op.DisableControls(IG160508);
                        obj_op.DisableControls(IG160608);
                        obj_op.DisableControls(IG160708);
                        obj_op.DisableControls(IG160808);
                        obj_op.DisableControls(IG160908);
                        obj_op.DisableControls(IG1601008);
                        obj_op.DisableControls(IG1601108);
                        obj_op.DisableControls(IG1601208);





                        obj_op.DisableControls(IG0409);
                        obj_op.DisableControls(IG0509);
                        obj_op.DisableControls(IG060109);
                        obj_op.DisableControls(IG060209);
                        obj_op.DisableControls(IG060309);
                        obj_op.DisableControls(IG060409);
                        obj_op.DisableControls(IG060509);

                        obj_op.DisableControls(IG070109);
                        obj_op.DisableControls(IG070209);
                        obj_op.DisableControls(IG070309);
                        obj_op.DisableControls(IG070409);
                        obj_op.DisableControls(IG070509);
                        obj_op.DisableControls(IG070609);
                        obj_op.DisableControls(IG070709);
                        obj_op.DisableControls(IG070809);
                        obj_op.DisableControls(IG070909);
                        obj_op.DisableControls(IG0701009);
                        obj_op.DisableControls(IG0701109);
                        obj_op.DisableControls(IG0701209);
                        obj_op.DisableControls(IG0701309);

                        obj_op.DisableControls(IG0809);
                        obj_op.DisableControls(IG0909);
                        obj_op.DisableControls(IG01009);

                        obj_op.DisableControls(IG01109);
                        obj_op.DisableControls(IG01209);
                        obj_op.DisableControls(IG01309);
                        obj_op.DisableControls(IG01409);
                        obj_op.DisableControls(IG01509);

                        obj_op.DisableControls(IG160109);
                        obj_op.DisableControls(IG160209);
                        obj_op.DisableControls(IG160309);
                        obj_op.DisableControls(IG160409);
                        obj_op.DisableControls(IG160509);
                        obj_op.DisableControls(IG160609);
                        obj_op.DisableControls(IG160709);
                        obj_op.DisableControls(IG160809);
                        obj_op.DisableControls(IG160909);
                        obj_op.DisableControls(IG1601009);
                        obj_op.DisableControls(IG1601109);
                        obj_op.DisableControls(IG1601209);






                        obj_op.DisableControls(IG0410);
                        obj_op.DisableControls(IG0510);
                        obj_op.DisableControls(IG060110);
                        obj_op.DisableControls(IG060210);
                        obj_op.DisableControls(IG060310);
                        obj_op.DisableControls(IG060410);
                        obj_op.DisableControls(IG060510);

                        obj_op.DisableControls(IG070110);
                        obj_op.DisableControls(IG070210);
                        obj_op.DisableControls(IG070310);
                        obj_op.DisableControls(IG070410);
                        obj_op.DisableControls(IG070510);
                        obj_op.DisableControls(IG070610);
                        obj_op.DisableControls(IG070710);
                        obj_op.DisableControls(IG070810);
                        obj_op.DisableControls(IG070910);
                        obj_op.DisableControls(IG0701010);
                        obj_op.DisableControls(IG0701110);
                        obj_op.DisableControls(IG0701210);
                        obj_op.DisableControls(IG0701310);

                        obj_op.DisableControls(IG0810);
                        obj_op.DisableControls(IG0910);
                        obj_op.DisableControls(IG01010);

                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                        obj_op.DisableControls(IG01310);
                        obj_op.DisableControls(IG01410);
                        obj_op.DisableControls(IG01510);

                        obj_op.DisableControls(IG160110);
                        obj_op.DisableControls(IG160210);
                        obj_op.DisableControls(IG160310);
                        obj_op.DisableControls(IG160410);
                        obj_op.DisableControls(IG160510);
                        obj_op.DisableControls(IG160610);
                        obj_op.DisableControls(IG160710);
                        obj_op.DisableControls(IG160810);
                        obj_op.DisableControls(IG160910);
                        obj_op.DisableControls(IG1601010);
                        obj_op.DisableControls(IG1601110);
                        obj_op.DisableControls(IG1601210);



                        chkMember9.Focus();

                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember8.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember8);
        }


        private void IG0408_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0408'", IG0408.Text) == true)
                {
                    IG0408.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0408.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0408);
        }


        private void IG0508_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0508'", IG0508.Text) == true)
                {
                    IG0508.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0508.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0508);
        }


        private void IG060108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060108'", IG060108.Text) == true)
                {
                    IG060108.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060108);
        }


        private void IG060208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060208'", IG060208.Text) == true)
                {
                    IG060208.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060208);
        }


        private void IG060308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060308'", IG060308.Text) == true)
                {
                    IG060308.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060308);
        }


        private void IG060408_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060408'", IG060408.Text) == true)
                {
                    IG060408.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060408.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060408);
        }


        private void IG060508_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060508'", IG060508.Text) == true)
                {
                    IG060508.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060508.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060508);
        }


        private void IG070108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070108'", IG070108.Text) == true)
                {
                    IG070108.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070108);
        }


        private void IG070208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070208'", IG070208.Text) == true)
                {
                    IG070208.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070208);
        }


        private void IG070308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070308'", IG070308.Text) == true)
                {
                    IG070308.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070308);
        }


        private void IG070408_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070408'", IG070408.Text) == true)
                {
                    IG070408.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070408.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070408);
        }


        private void IG070508_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070508'", IG070508.Text) == true)
                {
                    IG070508.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070508.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070508);
        }


        private void IG070608_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070608'", IG070608.Text) == true)
                {
                    IG070608.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070608.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070608);
        }


        private void IG070708_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070708'", IG070708.Text) == true)
                {
                    IG070708.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070708.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070708);
        }


        private void IG070808_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070808'", IG070808.Text) == true)
                {
                    IG070808.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070808.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070808);
        }


        private void IG070908_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070908'", IG070908.Text) == true)
                {
                    IG070908.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070908.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070908);
        }


        private void IG0701008_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701008'", IG0701008.Text) == true)
                {
                    IG0701008.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701008.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701008);
        }


        private void IG0701108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701108'", IG0701108.Text) == true)
                {
                    IG0701108.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701108);
        }


        private void IG0701208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701208'", IG0701208.Text) == true)
                {
                    IG0701208.Focus();
                }
                else
                {

                    if (
                       IG070108.Text == "1" &&
                       IG070208.Text == "1" &&
                       IG070308.Text == "1" &&
                       IG070408.Text == "1" &&
                       IG070508.Text == "1" &&
                       IG070608.Text == "1" &&
                       IG070708.Text == "1" &&
                       IG070808.Text == "1" &&
                       IG070908.Text == "1" &&
                       IG0701008.Text == "1" &&
                       IG0701108.Text == "1" &&
                       IG0701208.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701208.Focus();
                    }
                    else
                    {
                        if (IG0701208.Text == "1")
                        {
                            obj_op.DisableControls(IG0701308);
                            obj_op.DisableControls(IG0808);

                            IG0908.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701308);
                            obj_op.EnableControls(IG0808);

                            IG0701308.Focus();
                        }
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701208);
        }


        private void IG0701308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701308'", IG0701308.Text) == true)
                {
                    IG0701308.Focus();
                }
                else
                {

                    if (
                      IG070108.Text == "1" &&
                      IG070208.Text == "1" &&
                      IG070308.Text == "1" &&
                      IG070408.Text == "1" &&
                      IG070508.Text == "1" &&
                      IG070608.Text == "1" &&
                      IG070708.Text == "1" &&
                      IG070808.Text == "1" &&
                      IG070908.Text == "1" &&
                      IG0701008.Text == "1" &&
                      IG0701108.Text == "1" &&
                      IG0701308.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701308.Focus();
                    }
                    else
                    {
                        if (IG0701308.Text == "1")
                        {
                            obj_op.DisableControls(IG0808);
                            IG0908.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0808);
                            IG0808.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701308);
        }


        private void IG0808_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0808'", IG0808.Text) == true)
                {
                    IG0808.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0808.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0808);
        }


        private void IG0908_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0908'", IG0908.Text) == true)
                {
                    IG0908.Focus();
                }
                else
                {
                    if (IG0908.Text == "0")
                    {
                        obj_op.DisableControls(IG01008);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01008);
                    }


                    if (IG01008.Enabled == true)
                    {
                        IG01008.Focus();
                    }
                    else if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }





                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0908.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0908);
        }


        private void IG01008_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01008'", IG01008.Text) == true)
                {
                    IG01008.Focus();
                }
                else
                {
                    if (IG01008.Text == "1")
                    {
                        obj_op.DisableControls(IG01108);
                        obj_op.DisableControls(IG01208);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01108);
                        obj_op.EnableControls(IG01208);
                    }



                    if (IG070109.Enabled == true)
                    {
                        IG070109.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01008.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01008);
        }


        private void chkMember9_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember9'", chkMember9.Text) == true)
                {
                    chkMember9.Focus();
                }
                else
                {

                    if (chkMember8.Text == "2" && chkMember9.Text == "1")
                    {
                        MessageBox.Show("You have to add 8th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember9.Focus();
                        return;
                    }



                    if (chkMember9.Text == "1")
                    {
                        obj_op.EnableControls(IG0409);
                        obj_op.EnableControls(IG0509);
                        obj_op.EnableControls(IG060109);
                        obj_op.EnableControls(IG060209);
                        obj_op.EnableControls(IG060309);
                        obj_op.EnableControls(IG060409);
                        obj_op.EnableControls(IG060509);

                        obj_op.EnableControls(IG070109);
                        obj_op.EnableControls(IG070209);
                        obj_op.EnableControls(IG070309);
                        obj_op.EnableControls(IG070409);
                        obj_op.EnableControls(IG070509);
                        obj_op.EnableControls(IG070609);
                        obj_op.EnableControls(IG070709);
                        obj_op.EnableControls(IG070809);
                        obj_op.EnableControls(IG070909);
                        obj_op.EnableControls(IG0701009);
                        obj_op.EnableControls(IG0701109);
                        obj_op.EnableControls(IG0701209);
                        obj_op.EnableControls(IG0701309);

                        obj_op.EnableControls(IG0809);
                        obj_op.EnableControls(IG0909);
                        obj_op.EnableControls(IG01009);

                        obj_op.EnableControls(IG01109);
                        obj_op.EnableControls(IG01209);
                        obj_op.EnableControls(IG01309);
                        obj_op.EnableControls(IG01409);
                        obj_op.EnableControls(IG01509);

                        obj_op.EnableControls(IG160109);
                        obj_op.EnableControls(IG160209);
                        obj_op.EnableControls(IG160309);
                        obj_op.EnableControls(IG160409);
                        obj_op.EnableControls(IG160509);
                        obj_op.EnableControls(IG160609);
                        obj_op.EnableControls(IG160709);
                        obj_op.EnableControls(IG160809);
                        obj_op.EnableControls(IG160909);
                        obj_op.EnableControls(IG1601009);
                        obj_op.EnableControls(IG1601109);
                        obj_op.EnableControls(IG1601209);

                        IG0409.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0409);
                        obj_op.DisableControls(IG0509);
                        obj_op.DisableControls(IG060109);
                        obj_op.DisableControls(IG060209);
                        obj_op.DisableControls(IG060309);
                        obj_op.DisableControls(IG060409);
                        obj_op.DisableControls(IG060509);

                        obj_op.DisableControls(IG070109);
                        obj_op.DisableControls(IG070209);
                        obj_op.DisableControls(IG070309);
                        obj_op.DisableControls(IG070409);
                        obj_op.DisableControls(IG070509);
                        obj_op.DisableControls(IG070609);
                        obj_op.DisableControls(IG070709);
                        obj_op.DisableControls(IG070809);
                        obj_op.DisableControls(IG070909);
                        obj_op.DisableControls(IG0701009);
                        obj_op.DisableControls(IG0701109);
                        obj_op.DisableControls(IG0701209);
                        obj_op.DisableControls(IG0701309);

                        obj_op.DisableControls(IG0809);
                        obj_op.DisableControls(IG0909);
                        obj_op.DisableControls(IG01009);

                        obj_op.DisableControls(IG01109);
                        obj_op.DisableControls(IG01209);
                        obj_op.DisableControls(IG01309);
                        obj_op.DisableControls(IG01409);
                        obj_op.DisableControls(IG01509);

                        obj_op.DisableControls(IG160109);
                        obj_op.DisableControls(IG160209);
                        obj_op.DisableControls(IG160309);
                        obj_op.DisableControls(IG160409);
                        obj_op.DisableControls(IG160509);
                        obj_op.DisableControls(IG160609);
                        obj_op.DisableControls(IG160709);
                        obj_op.DisableControls(IG160809);
                        obj_op.DisableControls(IG160909);
                        obj_op.DisableControls(IG1601009);
                        obj_op.DisableControls(IG1601109);
                        obj_op.DisableControls(IG1601209);






                        obj_op.DisableControls(IG0410);
                        obj_op.DisableControls(IG0510);
                        obj_op.DisableControls(IG060110);
                        obj_op.DisableControls(IG060210);
                        obj_op.DisableControls(IG060310);
                        obj_op.DisableControls(IG060410);
                        obj_op.DisableControls(IG060510);

                        obj_op.DisableControls(IG070110);
                        obj_op.DisableControls(IG070210);
                        obj_op.DisableControls(IG070310);
                        obj_op.DisableControls(IG070410);
                        obj_op.DisableControls(IG070510);
                        obj_op.DisableControls(IG070610);
                        obj_op.DisableControls(IG070710);
                        obj_op.DisableControls(IG070810);
                        obj_op.DisableControls(IG070910);
                        obj_op.DisableControls(IG0701010);
                        obj_op.DisableControls(IG0701110);
                        obj_op.DisableControls(IG0701210);
                        obj_op.DisableControls(IG0701310);

                        obj_op.DisableControls(IG0810);
                        obj_op.DisableControls(IG0910);
                        obj_op.DisableControls(IG01010);

                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                        obj_op.DisableControls(IG01310);
                        obj_op.DisableControls(IG01410);
                        obj_op.DisableControls(IG01510);

                        obj_op.DisableControls(IG160110);
                        obj_op.DisableControls(IG160210);
                        obj_op.DisableControls(IG160310);
                        obj_op.DisableControls(IG160410);
                        obj_op.DisableControls(IG160510);
                        obj_op.DisableControls(IG160610);
                        obj_op.DisableControls(IG160710);
                        obj_op.DisableControls(IG160810);
                        obj_op.DisableControls(IG160910);
                        obj_op.DisableControls(IG1601010);
                        obj_op.DisableControls(IG1601110);
                        obj_op.DisableControls(IG1601210);


                        chkMember10.Focus();

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember9.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember9);
        }


        private void IG0409_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0409'", IG0409.Text) == true)
                {
                    IG0409.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0409.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0409);
        }


        private void IG0509_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0509'", IG0509.Text) == true)
                {
                    IG0509.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0509.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0509);
        }


        private void IG060109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060109'", IG060109.Text) == true)
                {
                    IG060109.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060109);
        }


        private void IG060209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060209'", IG060209.Text) == true)
                {
                    IG060209.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060209);
        }


        private void IG060309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060309'", IG060309.Text) == true)
                {
                    IG060309.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060309);
        }


        private void IG060409_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060409'", IG060409.Text) == true)
                {
                    IG060409.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060409.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060409);
        }


        private void IG060509_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060509'", IG060509.Text) == true)
                {
                    IG060509.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060509.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060509);
        }


        private void IG070109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070109'", IG070109.Text) == true)
                {
                    IG070109.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070109);
        }


        private void IG070209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070209'", IG070209.Text) == true)
                {
                    IG070209.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070209);
        }


        private void IG070309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070309'", IG070309.Text) == true)
                {
                    IG070309.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070309);
        }


        private void IG070409_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070409'", IG070409.Text) == true)
                {
                    IG070409.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070409.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070409);
        }


        private void IG070509_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070509'", IG070509.Text) == true)
                {
                    IG070509.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070509.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070509);
        }


        private void IG070609_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070609'", IG070609.Text) == true)
                {
                    IG070609.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070609.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070609);
        }


        private void IG070709_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070709'", IG070709.Text) == true)
                {
                    IG070709.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070709.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070709);
        }


        private void IG070809_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070809'", IG070809.Text) == true)
                {
                    IG070809.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070809.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070809);
        }


        private void IG070909_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070909'", IG070909.Text) == true)
                {
                    IG070909.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070909.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070909);
        }


        private void IG0701009_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701009'", IG0701009.Text) == true)
                {
                    IG0701009.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701009.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701009);
        }


        private void IG0701109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701109'", IG0701109.Text) == true)
                {
                    IG0701109.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701109);
        }


        private void IG0701209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701209'", IG0701209.Text) == true)
                {
                    IG0701209.Focus();
                }
                else
                {

                    if (
                       IG070109.Text == "1" &&
                       IG070209.Text == "1" &&
                       IG070309.Text == "1" &&
                       IG070409.Text == "1" &&
                       IG070509.Text == "1" &&
                       IG070609.Text == "1" &&
                       IG070709.Text == "1" &&
                       IG070809.Text == "1" &&
                       IG070909.Text == "1" &&
                       IG0701009.Text == "1" &&
                       IG0701109.Text == "1" &&
                       IG0701209.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701209.Focus();
                    }
                    else
                    {
                        if (IG0701209.Text == "1")
                        {
                            obj_op.DisableControls(IG0701309);
                            obj_op.DisableControls(IG0809);

                            IG0909.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701309);
                            obj_op.EnableControls(IG0809);

                            IG0701309.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701209);
        }


        private void IG0701309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701309'", IG0701309.Text) == true)
                {
                    IG0701309.Focus();
                }
                else
                {

                    if (
                       IG070109.Text == "1" &&
                       IG070209.Text == "1" &&
                       IG070309.Text == "1" &&
                       IG070409.Text == "1" &&
                       IG070509.Text == "1" &&
                       IG070609.Text == "1" &&
                       IG070709.Text == "1" &&
                       IG070809.Text == "1" &&
                       IG070909.Text == "1" &&
                       IG0701009.Text == "1" &&
                       IG0701109.Text == "1" &&
                       IG0701309.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701309.Focus();
                    }
                    else
                    {
                        if (IG0701309.Text == "1")
                        {
                            obj_op.DisableControls(IG0809);
                            IG0909.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0809);
                            IG0809.Focus();
                        }
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701309);
        }


        private void IG0809_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0809'", IG0809.Text) == true)
                {
                    IG0809.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0809.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0809);
        }


        private void IG0909_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0909'", IG0909.Text) == true)
                {
                    IG0909.Focus();
                }
                else
                {
                    if (IG0909.Text == "0")
                    {
                        obj_op.DisableControls(IG01009);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01009);
                    }



                    if (IG01009.Enabled == true)
                    {
                        IG01009.Focus();
                    }
                    else if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }



                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0909.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0909);
        }


        private void IG01009_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01009'", IG01009.Text) == true)
                {
                    IG01009.Focus();
                }
                else
                {
                    if (IG01009.Text == "1")
                    {
                        obj_op.DisableControls(IG01109);
                        obj_op.DisableControls(IG01209);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01109);
                        obj_op.EnableControls(IG01209);
                    }


                    if (IG070110.Enabled == true)
                    {
                        IG070110.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01009.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01009);
        }


        private void chkMember10_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember10'", chkMember10.Text) == true)
                {
                    chkMember10.Focus();
                }
                else
                {


                    if (chkMember9.Text == "2" && chkMember10.Text == "1")
                    {
                        MessageBox.Show("You have to add 9th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember10.Focus();
                        return;
                    }



                    if (chkMember10.Text == "1")
                    {
                        obj_op.EnableControls(IG0410);
                        obj_op.EnableControls(IG0510);
                        obj_op.EnableControls(IG060110);
                        obj_op.EnableControls(IG060210);
                        obj_op.EnableControls(IG060310);
                        obj_op.EnableControls(IG060410);
                        obj_op.EnableControls(IG060510);

                        obj_op.EnableControls(IG070110);
                        obj_op.EnableControls(IG070210);
                        obj_op.EnableControls(IG070310);
                        obj_op.EnableControls(IG070410);
                        obj_op.EnableControls(IG070510);
                        obj_op.EnableControls(IG070610);
                        obj_op.EnableControls(IG070710);
                        obj_op.EnableControls(IG070810);
                        obj_op.EnableControls(IG070910);
                        obj_op.EnableControls(IG0701010);
                        obj_op.EnableControls(IG0701110);
                        obj_op.EnableControls(IG0701210);
                        obj_op.EnableControls(IG0701310);

                        obj_op.EnableControls(IG0810);
                        obj_op.EnableControls(IG0910);
                        obj_op.EnableControls(IG01010);

                        obj_op.EnableControls(IG01110);
                        obj_op.EnableControls(IG01210);
                        obj_op.EnableControls(IG01310);
                        obj_op.EnableControls(IG01410);
                        obj_op.EnableControls(IG01510);

                        obj_op.EnableControls(IG160110);
                        obj_op.EnableControls(IG160210);
                        obj_op.EnableControls(IG160310);
                        obj_op.EnableControls(IG160410);
                        obj_op.EnableControls(IG160510);
                        obj_op.EnableControls(IG160610);
                        obj_op.EnableControls(IG160710);
                        obj_op.EnableControls(IG160810);
                        obj_op.EnableControls(IG160910);
                        obj_op.EnableControls(IG1601010);
                        obj_op.EnableControls(IG1601110);
                        obj_op.EnableControls(IG1601210);

                        IG0410.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IG0410);
                        obj_op.DisableControls(IG0510);
                        obj_op.DisableControls(IG060110);
                        obj_op.DisableControls(IG060210);
                        obj_op.DisableControls(IG060310);
                        obj_op.DisableControls(IG060410);
                        obj_op.DisableControls(IG060510);

                        obj_op.DisableControls(IG070110);
                        obj_op.DisableControls(IG070210);
                        obj_op.DisableControls(IG070310);
                        obj_op.DisableControls(IG070410);
                        obj_op.DisableControls(IG070510);
                        obj_op.DisableControls(IG070610);
                        obj_op.DisableControls(IG070710);
                        obj_op.DisableControls(IG070810);
                        obj_op.DisableControls(IG070910);
                        obj_op.DisableControls(IG0701010);
                        obj_op.DisableControls(IG0701110);
                        obj_op.DisableControls(IG0701210);
                        obj_op.DisableControls(IG0701310);

                        obj_op.DisableControls(IG0810);
                        obj_op.DisableControls(IG0910);
                        obj_op.DisableControls(IG01010);

                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                        obj_op.DisableControls(IG01310);
                        obj_op.DisableControls(IG01410);
                        obj_op.DisableControls(IG01510);

                        obj_op.DisableControls(IG160110);
                        obj_op.DisableControls(IG160210);
                        obj_op.DisableControls(IG160310);
                        obj_op.DisableControls(IG160410);
                        obj_op.DisableControls(IG160510);
                        obj_op.DisableControls(IG160610);
                        obj_op.DisableControls(IG160710);
                        obj_op.DisableControls(IG160810);
                        obj_op.DisableControls(IG160910);
                        obj_op.DisableControls(IG1601010);
                        obj_op.DisableControls(IG1601110);
                        obj_op.DisableControls(IG1601210);


                        IG060106.Focus();

                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember10.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember10);
        }


        private void IG0410_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0410'", IG0410.Text) == true)
                {
                    IG0410.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0410.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0410);
        }


        private void IG0510_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0510'", IG0510.Text) == true)
                {
                    IG0510.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0510.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0510);
        }


        private void IG060110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060110'", IG060110.Text) == true)
                {
                    IG060110.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060110);
        }


        private void IG060210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060210'", IG060210.Text) == true)
                {
                    IG060210.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060210);
        }


        private void IG060310_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060310'", IG060310.Text) == true)
                {
                    IG060310.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060310.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060310);
        }


        private void IG060410_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060410'", IG060410.Text) == true)
                {
                    IG060410.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060410.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060410);
        }


        private void IG060510_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060510'", IG060510.Text) == true)
                {
                    IG060510.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 13;
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060510.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060510);
        }


        private void IG070110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070110'", IG070110.Text) == true)
                {
                    IG070110.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070110);
        }


        private void IG070210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070210'", IG070210.Text) == true)
                {
                    IG070210.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070210);
        }


        private void IG070310_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070310'", IG070310.Text) == true)
                {
                    IG070310.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070310.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070310);
        }


        private void IG070410_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070410'", IG070410.Text) == true)
                {
                    IG070410.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070410.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070410);
        }


        private void IG070510_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070510'", IG070510.Text) == true)
                {
                    IG070510.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070510.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070510);
        }


        private void IG070610_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070610'", IG070610.Text) == true)
                {
                    IG070610.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070610.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070610);
        }


        private void IG070710_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070710'", IG070710.Text) == true)
                {
                    IG070710.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070710.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070710);
        }


        private void IG070810_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070810'", IG070810.Text) == true)
                {
                    IG070810.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070810.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070810);
        }


        private void IG070910_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070910'", IG070910.Text) == true)
                {
                    IG070910.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070910.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070910);
        }


        private void IG0701010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701010'", IG0701010.Text) == true)
                {
                    IG0701010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701010);
        }


        private void IG0701110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701110'", IG0701110.Text) == true)
                {
                    IG0701110.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701110);
        }


        private void IG0701210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701210'", IG0701210.Text) == true)
                {
                    IG0701210.Focus();
                }
                else
                {

                    if (
                       IG070110.Text == "1" &&
                       IG070210.Text == "1" &&
                       IG070310.Text == "1" &&
                       IG070410.Text == "1" &&
                       IG070510.Text == "1" &&
                       IG070610.Text == "1" &&
                       IG070710.Text == "1" &&
                       IG070810.Text == "1" &&
                       IG070910.Text == "1" &&
                       IG0701010.Text == "1" &&
                       IG0701110.Text == "1" &&
                       IG0701210.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701210.Focus();
                    }
                    else
                    {
                        if (IG0701210.Text == "1")
                        {
                            obj_op.DisableControls(IG0701310);
                            obj_op.DisableControls(IG0810);

                            IG0910.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701310);
                            obj_op.EnableControls(IG0810);

                            IG0701310.Focus();
                        }
                    }

                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701210);
        }


        private void IG0701310_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701310'", IG0701310.Text) == true)
                {
                    IG0701310.Focus();
                }
                else
                {
                    if (
                      IG070110.Text == "1" &&
                      IG070210.Text == "1" &&
                      IG070310.Text == "1" &&
                      IG070410.Text == "1" &&
                      IG070510.Text == "1" &&
                      IG070610.Text == "1" &&
                      IG070710.Text == "1" &&
                      IG070810.Text == "1" &&
                      IG070910.Text == "1" &&
                      IG0701010.Text == "1" &&
                      IG0701110.Text == "1" &&
                      IG0701310.Text == "1"
                      )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701310.Focus();
                    }
                    else
                    {
                        if (IG0701310.Text == "1")
                        {
                            obj_op.DisableControls(IG0810);
                            IG0910.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0810);
                            IG0810.Focus();
                        }
                    }

                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701310.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701310);
        }


        private void IG0810_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0810'", IG0810.Text) == true)
                {
                    IG0810.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0810.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0810);
        }


        private void IG0910_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0910'", IG0910.Text) == true)
                {
                    IG0910.Focus();
                }
                else
                {
                    if (IG0910.Text == "0")
                    {
                        obj_op.DisableControls(IG01010);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01010);
                    }



                    if (IG01010.Enabled == true)
                    {
                        IG01010.Focus();
                    }
                    else if (IG01106.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01106.Focus();
                    }
                    else if (IG01107.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01107.Focus();
                    }
                    else if (IG01107.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01107.Focus();
                    }
                    else if (IG01108.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01108.Focus();
                    }
                    else if (IG01109.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01109.Focus();
                    }
                    else if (IG01110.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01110.Focus();
                    }



                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0910.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0910);
        }


        private void IG01010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01010'", IG01010.Text) == true)
                {
                    IG01010.Focus();
                }
                else
                {

                    if (IG01010.Text == "1")
                    {
                        obj_op.DisableControls(IG01110);
                        obj_op.DisableControls(IG01210);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01110);
                        obj_op.EnableControls(IG01210);
                    }



                    if (IG01106.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01106.Focus();
                    }
                    else if (IG01107.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01107.Focus();
                    }
                    else if (IG01108.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01108.Focus();
                    }
                    else if (IG01109.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01109.Focus();
                    }
                    else if (IG01110.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01110.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 14;
                        IG01206.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01010);
        }


        private void IG01106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01106'", IG01106.Text) == true)
                {
                    IG01106.Focus();
                }
                else
                {
                    if (IG01106.Text == "1")
                    {
                        obj_op.DisableControls(IG01206);
                        IG01306.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01206);
                        IG01206.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01106);
        }


        private void IG01206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01206'", IG01206.Text) == true)
                {
                    IG01206.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01206);
        }


        private void IG01306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01306'", IG01306.Text) == true)
                {
                    IG01306.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01306);
        }


        private void IG01406_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01406'", IG01406.Text) == true)
                {
                    IG01406.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01406.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01406);
        }


        private void IG01506_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01506'", IG01506.Text) == true)
                {
                    IG01506.Focus();
                }
                else
                {
                    if (IG01107.Enabled == true)
                    {
                        IG01107.Focus();
                    }
                    else if (IG01108.Enabled == true)
                    {
                        IG01108.Focus();
                    }
                    else if (IG01109.Enabled == true)
                    {
                        IG01109.Focus();
                    }
                    else if (IG01110.Enabled == true)
                    {
                        IG01110.Focus();
                    }
                    else if (IG01206.Enabled == true)
                    {
                        IG01206.Focus();
                    }
                    else if (IG01207.Enabled == true)
                    {
                        IG01207.Focus();
                    }
                    else if (IG01208.Enabled == true)
                    {
                        IG01208.Focus();
                    }
                    else if (IG01209.Enabled == true)
                    {
                        IG01209.Focus();
                    }
                    else if (IG01210.Enabled == true)
                    {
                        IG01210.Focus();
                    }
                    else if (IG01307.Enabled == true)
                    {
                        IG01307.Focus();
                    }
                    else if (IG01308.Enabled == true)
                    {
                        IG01308.Focus();
                    }
                    else if (IG01309.Enabled == true)
                    {
                        IG01309.Focus();
                    }
                    else if (IG01310.Enabled == true)
                    {
                        IG01310.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 15;
                        IG160106.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01506.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01506);
        }


        private void IG01107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01107'", IG01107.Text) == true)
                {
                    IG01107.Focus();
                }
                else
                {
                    if (IG01107.Text == "1")
                    {
                        obj_op.DisableControls(IG01207);
                        IG01307.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01207);
                        IG01207.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01107);
        }


        private void IG01207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01207'", IG01207.Text) == true)
                {
                    IG01207.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01207);
        }


        private void IG01307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01307'", IG01307.Text) == true)
                {
                    IG01307.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01307);
        }


        private void IG01407_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01407'", IG01407.Text) == true)
                {
                    IG01407.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01407.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01407);
        }


        private void IG01507_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01507'", IG01507.Text) == true)
                {
                    IG01507.Focus();
                }
                else
                {
                    if (IG01108.Enabled == true)
                    {
                        IG01108.Focus();
                    }
                    else if (IG01109.Enabled == true)
                    {
                        IG01109.Focus();
                    }
                    else if (IG01110.Enabled == true)
                    {
                        IG01110.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 14;
                        IG160106.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01507.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01507);
        }


        private void IG01108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01108'", IG01108.Text) == true)
                {
                    IG01108.Focus();
                }
                else
                {
                    if (IG01108.Text == "1")
                    {
                        obj_op.DisableControls(IG01208);
                        IG01308.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01208);
                        IG01208.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01108);
        }


        private void IG01208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01208'", IG01208.Text) == true)
                {
                    IG01208.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01208);
        }


        private void IG01308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01308'", IG01308.Text) == true)
                {
                    IG01308.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01308);
        }


        private void IG01408_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01408'", IG01408.Text) == true)
                {
                    IG01408.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01408.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01408);
        }


        private void IG01508_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01508'", IG01508.Text) == true)
                {
                    IG01508.Focus();
                }
                else
                {
                    if (IG01109.Enabled == true)
                    {
                        IG01109.Focus();
                    }
                    else if (IG01110.Enabled == true)
                    {
                        IG01110.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 14;
                        IG160106.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01508.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01508);
        }


        private void IG01109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01109'", IG01109.Text) == true)
                {
                    IG01109.Focus();
                }
                else
                {
                    if (IG01109.Text == "1")
                    {
                        obj_op.DisableControls(IG01209);
                        IG01309.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01209);
                        IG01209.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01109);
        }


        private void IG01209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01209'", IG01209.Text) == true)
                {
                    IG01209.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01209);
        }


        private void IG01309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01309'", IG01309.Text) == true)
                {
                    IG01309.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01309);
        }


        private void IG01409_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01409'", IG01409.Text) == true)
                {
                    IG01409.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01409.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01409);
        }


        private void IG01509_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01509'", IG01509.Text) == true)
                {
                    IG01509.Focus();
                }
                else
                {
                    if (IG01110.Enabled == true)
                    {
                        IG01110.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 14;
                        IG160106.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01509.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01509);
        }


        private void IG01110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01110'", IG01110.Text) == true)
                {
                    IG01110.Focus();
                }
                else
                {
                    if (IG01110.Text == "1")
                    {
                        obj_op.DisableControls(IG01210);
                        IG01310.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01210);
                        IG01210.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01110);
        }


        private void IG01210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01210'", IG01210.Text) == true)
                {
                    IG01210.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01210);
        }


        private void IG01310_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01310'", IG01310.Text) == true)
                {
                    IG01310.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01310.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01310);
        }


        private void IG01410_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01410'", IG01410.Text) == true)
                {
                    IG01410.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01410.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01410);
        }


        private void IG01510_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01510'", IG01510.Text) == true)
                {
                    IG01510.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 15;
                    IG160106.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01510.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01510);
        }


        private void IG160106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160106'", IG160106.Text) == true)
                {
                    IG160106.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160106);
        }


        private void IG160206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160206'", IG160206.Text) == true)
                {
                    IG160206.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160206);
        }


        private void IG160306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160306'", IG160306.Text) == true)
                {
                    IG160306.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160306);
        }


        private void IG160406_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160406'", IG160406.Text) == true)
                {
                    IG160406.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160406.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160406);
        }


        private void IG160506_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160506'", IG160506.Text) == true)
                {
                    IG160506.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160506.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160506);
        }


        private void IG160606_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160606'", IG160606.Text) == true)
                {
                    IG160606.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160606.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160606);
        }


        private void IG160706_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160706'", IG160706.Text) == true)
                {
                    IG160706.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160706.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160706);
        }


        private void IG160806_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160806'", IG160806.Text) == true)
                {
                    IG160806.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160806.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160806);
        }


        private void IG160906_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160906'", IG160906.Text) == true)
                {
                    IG160906.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160906.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160906);
        }


        private void IG1601006_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601006'", IG1601006.Text) == true)
                {
                    IG1601006.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601006.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601006);
        }


        private void IG1601106_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601106'", IG1601106.Text) == true)
                {
                    IG1601106.Focus();
                }
                else
                {
                    if (
                        IG160106.Text == "1" &&
                        IG160206.Text == "1" &&
                        IG160306.Text == "1" &&
                        IG160406.Text == "1" &&
                        IG160506.Text == "1" &&
                        IG160606.Text == "1" &&
                        IG160706.Text == "1" &&
                        IG160806.Text == "1" &&
                        IG160906.Text == "1" &&
                        IG1601006.Text == "1" &&
                        IG1601106.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601106.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601106.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601106);
        }


        private void IG1601206_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601206'", IG1601206.Text) == true)
                {
                    IG1601206.Focus();
                }
                else
                {

                    if (
                        IG160106.Text == "1" &&
                        IG160206.Text == "1" &&
                        IG160306.Text == "1" &&
                        IG160406.Text == "1" &&
                        IG160506.Text == "1" &&
                        IG160606.Text == "1" &&
                        IG160706.Text == "1" &&
                        IG160806.Text == "1" &&
                        IG160906.Text == "1" &&
                        IG1601006.Text == "1" &&
                        IG1601206.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601206.Focus();
                    }
                    else
                    {

                        if (IG160107.Enabled == true)
                        {
                            IG160107.Focus();
                        }
                        else if (IG160108.Enabled == true)
                        {
                            IG160108.Focus();
                        }
                        else if (IG160109.Enabled == true)
                        {
                            IG160109.Focus();
                        }
                        else if (IG160110.Enabled == true)
                        {
                            IG160110.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 16;
                            chkMember11.Focus();
                        }

                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601206.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601206);
        }


        private void IG160107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160107'", IG160107.Text) == true)
                {
                    IG160107.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160107);
        }


        private void IG160207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160207'", IG160207.Text) == true)
                {
                    IG160207.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160207);
        }


        private void IG160307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160307'", IG160307.Text) == true)
                {
                    IG160307.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160307);
        }


        private void IG160407_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160407'", IG160407.Text) == true)
                {
                    IG160407.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160407.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160407);
        }


        private void IG160507_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160507'", IG160507.Text) == true)
                {
                    IG160507.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160507.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160507);
        }


        private void IG160607_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160607'", IG160607.Text) == true)
                {
                    IG160607.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160607.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160607);
        }


        private void IG160707_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160707'", IG160707.Text) == true)
                {
                    IG160707.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160707.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160707);
        }


        private void IG160807_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160807'", IG160807.Text) == true)
                {
                    IG160807.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160807.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160807);
        }


        private void IG160907_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160907'", IG160907.Text) == true)
                {
                    IG160907.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160907.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160907);
        }


        private void IG1601007_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601007'", IG1601007.Text) == true)
                {
                    IG1601007.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601007.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601007);
        }


        private void IG1601107_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601107'", IG1601107.Text) == true)
                {
                    IG1601107.Focus();
                }
                else
                {

                    if (
                        IG160107.Text == "1" &&
                        IG160207.Text == "1" &&
                        IG160307.Text == "1" &&
                        IG160407.Text == "1" &&
                        IG160507.Text == "1" &&
                        IG160607.Text == "1" &&
                        IG160707.Text == "1" &&
                        IG160807.Text == "1" &&
                        IG160907.Text == "1" &&
                        IG1601007.Text == "1" &&
                        IG1601107.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601107.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601107.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601107);
        }


        private void IG1601207_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601207'", IG1601207.Text) == true)
                {
                    IG1601207.Focus();
                }
                else
                {
                    if (
                        IG160107.Text == "1" &&
                        IG160207.Text == "1" &&
                        IG160307.Text == "1" &&
                        IG160407.Text == "1" &&
                        IG160507.Text == "1" &&
                        IG160607.Text == "1" &&
                        IG160707.Text == "1" &&
                        IG160807.Text == "1" &&
                        IG160907.Text == "1" &&
                        IG1601007.Text == "1" &&
                        IG1601207.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601207.Focus();
                    }
                    else
                    {
                        if (IG160108.Enabled == true)
                        {
                            IG160108.Focus();
                        }
                        else if (IG160109.Enabled == true)
                        {
                            IG160109.Focus();
                        }
                        else if (IG160110.Enabled == true)
                        {
                            IG160110.Focus();
                        }
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601207.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601207);
        }


        private void IG160108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160108'", IG160108.Text) == true)
                {
                    IG160108.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160108);
        }


        private void IG160208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160208'", IG160208.Text) == true)
                {
                    IG160208.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160208);
        }


        private void IG160308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160308'", IG160308.Text) == true)
                {
                    IG160308.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160308);
        }


        private void IG160408_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160408'", IG160408.Text) == true)
                {
                    IG160408.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160408.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160408);
        }


        private void IG160508_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160508'", IG160508.Text) == true)
                {
                    IG160508.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160508.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160508);
        }


        private void IG160608_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160608'", IG160608.Text) == true)
                {
                    IG160608.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160608.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160608);
        }


        private void IG160708_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160708'", IG160708.Text) == true)
                {
                    IG160708.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160708.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160708);
        }


        private void IG160808_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160808'", IG160808.Text) == true)
                {
                    IG160808.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160808.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160808);
        }


        private void IG160908_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160908'", IG160908.Text) == true)
                {
                    IG160908.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160908.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160908);
        }


        private void IG1601008_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601008'", IG1601008.Text) == true)
                {
                    IG1601008.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601008.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601008);
        }


        private void IG1601108_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601108'", IG1601108.Text) == true)
                {
                    IG1601108.Focus();
                }
                else
                {

                    if (
                        IG160108.Text == "1" &&
                        IG160208.Text == "1" &&
                        IG160308.Text == "1" &&
                        IG160408.Text == "1" &&
                        IG160508.Text == "1" &&
                        IG160608.Text == "1" &&
                        IG160708.Text == "1" &&
                        IG160808.Text == "1" &&
                        IG160908.Text == "1" &&
                        IG1601008.Text == "1" &&
                        IG1601108.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601108.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601108.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601108);
        }


        private void IG1601208_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601208'", IG1601208.Text) == true)
                {
                    IG1601208.Focus();
                }
                else
                {

                    if (
                       IG160108.Text == "1" &&
                       IG160208.Text == "1" &&
                       IG160308.Text == "1" &&
                       IG160408.Text == "1" &&
                       IG160508.Text == "1" &&
                       IG160608.Text == "1" &&
                       IG160708.Text == "1" &&
                       IG160808.Text == "1" &&
                       IG160908.Text == "1" &&
                       IG1601008.Text == "1" &&
                       IG1601208.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601208.Focus();
                    }
                    else
                    {
                        if (IG160109.Enabled == true)
                        {
                            IG160109.Focus();
                        }
                        else if (IG160110.Enabled == true)
                        {
                            IG160110.Focus();
                        }
                    }



                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601208.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601208);
        }


        private void IG160109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160109'", IG160109.Text) == true)
                {
                    IG160109.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160109);
        }


        private void IG160209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160209'", IG160209.Text) == true)
                {
                    IG160209.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160209);
        }


        private void IG160309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160309'", IG160309.Text) == true)
                {
                    IG160309.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160309);
        }


        private void IG160409_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160409'", IG160409.Text) == true)
                {
                    IG160409.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160409.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160409);
        }


        private void IG160509_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160509'", IG160509.Text) == true)
                {
                    IG160509.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160509.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160509);
        }


        private void IG160609_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160609'", IG160609.Text) == true)
                {
                    IG160609.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160609.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160609);
        }


        private void IG160709_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160709'", IG160709.Text) == true)
                {
                    IG160709.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160709.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160709);
        }


        private void IG160809_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160809'", IG160809.Text) == true)
                {
                    IG160809.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160809.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160809);
        }


        private void IG160909_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160909'", IG160909.Text) == true)
                {
                    IG160909.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160909.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160909);
        }


        private void IG1601009_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601009'", IG1601009.Text) == true)
                {
                    IG1601009.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601009.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601009);
        }


        private void IG1601109_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601109'", IG1601109.Text) == true)
                {
                    IG1601109.Focus();
                }
                else
                {

                    if (
                        IG160109.Text == "1" &&
                        IG160209.Text == "1" &&
                        IG160309.Text == "1" &&
                        IG160409.Text == "1" &&
                        IG160509.Text == "1" &&
                        IG160609.Text == "1" &&
                        IG160709.Text == "1" &&
                        IG160809.Text == "1" &&
                        IG160909.Text == "1" &&
                        IG1601009.Text == "1" &&
                        IG1601109.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601109.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601109.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601109);
        }


        private void IG1601209_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601209'", IG1601209.Text) == true)
                {
                    IG1601209.Focus();
                }
                else
                {

                    if (
                       IG160109.Text == "1" &&
                       IG160209.Text == "1" &&
                       IG160309.Text == "1" &&
                       IG160409.Text == "1" &&
                       IG160509.Text == "1" &&
                       IG160609.Text == "1" &&
                       IG160709.Text == "1" &&
                       IG160809.Text == "1" &&
                       IG160909.Text == "1" &&
                       IG1601009.Text == "1" &&
                       IG1601209.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601209.Focus();
                    }
                    else
                    {
                        if (IG160110.Enabled == true)
                        {
                            IG160110.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601209.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601209);
        }


        private void IG160110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160110'", IG160110.Text) == true)
                {
                    IG160110.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160110);
        }


        private void IG160210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160210'", IG160210.Text) == true)
                {
                    IG160210.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160210);
        }


        private void IG160310_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160310'", IG160310.Text) == true)
                {
                    IG160310.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160310.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160310);
        }


        private void IG160410_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160410'", IG160410.Text) == true)
                {
                    IG160410.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160410.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160410);
        }


        private void IG160510_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160510'", IG160510.Text) == true)
                {
                    IG160510.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160510.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160510);
        }


        private void IG160610_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160610'", IG160610.Text) == true)
                {
                    IG160610.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160610.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160610);
        }


        private void IG160710_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160710'", IG160710.Text) == true)
                {
                    IG160710.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160710.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160710);
        }


        private void IG160810_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160810'", IG160810.Text) == true)
                {
                    IG160810.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160810.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160810);
        }


        private void IG160910_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160910'", IG160910.Text) == true)
                {
                    IG160910.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160910.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160910);
        }


        private void IG1601010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601010'", IG1601010.Text) == true)
                {
                    IG1601010.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601010);
        }


        private void IG1601110_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601110'", IG1601110.Text) == true)
                {
                    IG1601110.Focus();
                }
                else
                {

                    if (
                        IG160110.Text == "1" &&
                        IG160210.Text == "1" &&
                        IG160310.Text == "1" &&
                        IG160410.Text == "1" &&
                        IG160510.Text == "1" &&
                        IG160610.Text == "1" &&
                        IG160710.Text == "1" &&
                        IG160810.Text == "1" &&
                        IG160910.Text == "1" &&
                        IG1601010.Text == "1" &&
                        IG1601110.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601110.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601110.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601110);
        }


        private void IG1601210_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601210'", IG1601210.Text) == true)
                {
                    IG1601210.Focus();
                }
                else
                {

                    if (
                       IG160110.Text == "1" &&
                       IG160210.Text == "1" &&
                       IG160310.Text == "1" &&
                       IG160410.Text == "1" &&
                       IG160510.Text == "1" &&
                       IG160610.Text == "1" &&
                       IG160710.Text == "1" &&
                       IG160810.Text == "1" &&
                       IG160910.Text == "1" &&
                       IG1601010.Text == "1" &&
                       IG1601210.Text == "1"
                       )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601210.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 16;
                        chkMember11.Focus();
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601210.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601210);
        }


        private void chkMember11_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember11'", chkMember11.Text) == true)
                {
                    chkMember11.Focus();
                }
                else
                {
                    if (chkMember11.Text == "1")
                    {
                        obj_op.EnableControls(IG0411);
                        obj_op.EnableControls(IG0511);
                        obj_op.EnableControls(IG060111);
                        obj_op.EnableControls(IG060211);
                        obj_op.EnableControls(IG060311);
                        obj_op.EnableControls(IG060411);
                        obj_op.EnableControls(IG060511);

                        obj_op.EnableControls(IG070111);
                        obj_op.EnableControls(IG070211);
                        obj_op.EnableControls(IG070311);
                        obj_op.EnableControls(IG070411);
                        obj_op.EnableControls(IG070511);
                        obj_op.EnableControls(IG070611);
                        obj_op.EnableControls(IG070711);
                        obj_op.EnableControls(IG070811);
                        obj_op.EnableControls(IG070911);
                        obj_op.EnableControls(IG0701011);
                        obj_op.EnableControls(IG0701111);
                        obj_op.EnableControls(IG0701211);
                        obj_op.EnableControls(IG0701311);


                        obj_op.EnableControls(IG0811);
                        obj_op.EnableControls(IG0911);
                        obj_op.EnableControls(IG01011);
                        obj_op.EnableControls(IG01111);
                        obj_op.EnableControls(IG01211);
                        obj_op.EnableControls(IG01311);
                        obj_op.EnableControls(IG01411);
                        obj_op.EnableControls(IG01511);

                        obj_op.EnableControls(IG160111);
                        obj_op.EnableControls(IG160211);
                        obj_op.EnableControls(IG160311);
                        obj_op.EnableControls(IG160411);
                        obj_op.EnableControls(IG160511);
                        obj_op.EnableControls(IG160611);
                        obj_op.EnableControls(IG160711);
                        obj_op.EnableControls(IG160811);
                        obj_op.EnableControls(IG160911);
                        obj_op.EnableControls(IG1601011);
                        obj_op.EnableControls(IG1601111);
                        obj_op.EnableControls(IG1601211);


                        IG0411.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IG0411);
                        obj_op.DisableControls(IG0511);
                        obj_op.DisableControls(IG060111);
                        obj_op.DisableControls(IG060211);
                        obj_op.DisableControls(IG060311);
                        obj_op.DisableControls(IG060411);
                        obj_op.DisableControls(IG060511);

                        obj_op.DisableControls(IG070111);
                        obj_op.DisableControls(IG070211);
                        obj_op.DisableControls(IG070311);
                        obj_op.DisableControls(IG070411);
                        obj_op.DisableControls(IG070511);
                        obj_op.DisableControls(IG070611);
                        obj_op.DisableControls(IG070711);
                        obj_op.DisableControls(IG070811);
                        obj_op.DisableControls(IG070911);
                        obj_op.DisableControls(IG0701011);
                        obj_op.DisableControls(IG0701111);
                        obj_op.DisableControls(IG0701211);
                        obj_op.DisableControls(IG0701311);


                        obj_op.DisableControls(IG0811);
                        obj_op.DisableControls(IG0911);
                        obj_op.DisableControls(IG01011);
                        obj_op.DisableControls(IG01111);
                        obj_op.DisableControls(IG01211);
                        obj_op.DisableControls(IG01311);
                        obj_op.DisableControls(IG01411);
                        obj_op.DisableControls(IG01511);

                        obj_op.DisableControls(IG160111);
                        obj_op.DisableControls(IG160211);
                        obj_op.DisableControls(IG160311);
                        obj_op.DisableControls(IG160411);
                        obj_op.DisableControls(IG160511);
                        obj_op.DisableControls(IG160611);
                        obj_op.DisableControls(IG160711);
                        obj_op.DisableControls(IG160811);
                        obj_op.DisableControls(IG160911);
                        obj_op.DisableControls(IG1601011);
                        obj_op.DisableControls(IG1601111);
                        obj_op.DisableControls(IG1601211);





                        obj_op.DisableControls(IG0412);
                        obj_op.DisableControls(IG0512);
                        obj_op.DisableControls(IG060112);
                        obj_op.DisableControls(IG060212);
                        obj_op.DisableControls(IG060312);
                        obj_op.DisableControls(IG060412);
                        obj_op.DisableControls(IG060512);

                        obj_op.DisableControls(IG070112);
                        obj_op.DisableControls(IG070212);
                        obj_op.DisableControls(IG070312);
                        obj_op.DisableControls(IG070412);
                        obj_op.DisableControls(IG070512);
                        obj_op.DisableControls(IG070612);
                        obj_op.DisableControls(IG070712);
                        obj_op.DisableControls(IG070812);
                        obj_op.DisableControls(IG070912);
                        obj_op.DisableControls(IG0701012);
                        obj_op.DisableControls(IG0701112);
                        obj_op.DisableControls(IG0701212);
                        obj_op.DisableControls(IG0701312);


                        obj_op.DisableControls(IG0812);
                        obj_op.DisableControls(IG0912);
                        obj_op.DisableControls(IG01012);
                        obj_op.DisableControls(IG01112);
                        obj_op.DisableControls(IG01212);
                        obj_op.DisableControls(IG01312);
                        obj_op.DisableControls(IG01412);
                        obj_op.DisableControls(IG01512);

                        obj_op.DisableControls(IG160112);
                        obj_op.DisableControls(IG160212);
                        obj_op.DisableControls(IG160312);
                        obj_op.DisableControls(IG160412);
                        obj_op.DisableControls(IG160512);
                        obj_op.DisableControls(IG160612);
                        obj_op.DisableControls(IG160712);
                        obj_op.DisableControls(IG160812);
                        obj_op.DisableControls(IG160912);
                        obj_op.DisableControls(IG1601012);
                        obj_op.DisableControls(IG1601112);
                        obj_op.DisableControls(IG1601212);




                        obj_op.DisableControls(IG0413);
                        obj_op.DisableControls(IG0513);
                        obj_op.DisableControls(IG060113);
                        obj_op.DisableControls(IG060213);
                        obj_op.DisableControls(IG060313);
                        obj_op.DisableControls(IG060413);
                        obj_op.DisableControls(IG060513);

                        obj_op.DisableControls(IG070113);
                        obj_op.DisableControls(IG070213);
                        obj_op.DisableControls(IG070313);
                        obj_op.DisableControls(IG070413);
                        obj_op.DisableControls(IG070513);
                        obj_op.DisableControls(IG070613);
                        obj_op.DisableControls(IG070713);
                        obj_op.DisableControls(IG070813);
                        obj_op.DisableControls(IG070913);
                        obj_op.DisableControls(IG0701013);
                        obj_op.DisableControls(IG0701113);
                        obj_op.DisableControls(IG0701213);
                        obj_op.DisableControls(IG0701313);


                        obj_op.DisableControls(IG0813);
                        obj_op.DisableControls(IG0913);
                        obj_op.DisableControls(IG01013);
                        obj_op.DisableControls(IG01113);
                        obj_op.DisableControls(IG01213);
                        obj_op.DisableControls(IG01313);
                        obj_op.DisableControls(IG01413);
                        obj_op.DisableControls(IG01513);

                        obj_op.DisableControls(IG160113);
                        obj_op.DisableControls(IG160213);
                        obj_op.DisableControls(IG160313);
                        obj_op.DisableControls(IG160413);
                        obj_op.DisableControls(IG160513);
                        obj_op.DisableControls(IG160613);
                        obj_op.DisableControls(IG160713);
                        obj_op.DisableControls(IG160813);
                        obj_op.DisableControls(IG160913);
                        obj_op.DisableControls(IG1601013);
                        obj_op.DisableControls(IG1601113);
                        obj_op.DisableControls(IG1601213);



                        obj_op.DisableControls(IG0414);
                        obj_op.DisableControls(IG0514);
                        obj_op.DisableControls(IG060114);
                        obj_op.DisableControls(IG060214);
                        obj_op.DisableControls(IG060314);
                        obj_op.DisableControls(IG060414);
                        obj_op.DisableControls(IG060514);

                        obj_op.DisableControls(IG070114);
                        obj_op.DisableControls(IG070214);
                        obj_op.DisableControls(IG070314);
                        obj_op.DisableControls(IG070414);
                        obj_op.DisableControls(IG070514);
                        obj_op.DisableControls(IG070614);
                        obj_op.DisableControls(IG070714);
                        obj_op.DisableControls(IG070814);
                        obj_op.DisableControls(IG070914);
                        obj_op.DisableControls(IG0701014);
                        obj_op.DisableControls(IG0701114);
                        obj_op.DisableControls(IG0701214);
                        obj_op.DisableControls(IG0701314);


                        obj_op.DisableControls(IG0814);
                        obj_op.DisableControls(IG0914);
                        obj_op.DisableControls(IG01014);
                        obj_op.DisableControls(IG01114);
                        obj_op.DisableControls(IG01214);
                        obj_op.DisableControls(IG01314);
                        obj_op.DisableControls(IG01414);
                        obj_op.DisableControls(IG01514);

                        obj_op.DisableControls(IG160114);
                        obj_op.DisableControls(IG160214);
                        obj_op.DisableControls(IG160314);
                        obj_op.DisableControls(IG160414);
                        obj_op.DisableControls(IG160514);
                        obj_op.DisableControls(IG160614);
                        obj_op.DisableControls(IG160714);
                        obj_op.DisableControls(IG160814);
                        obj_op.DisableControls(IG160914);
                        obj_op.DisableControls(IG1601014);
                        obj_op.DisableControls(IG1601114);
                        obj_op.DisableControls(IG1601214);




                        obj_op.DisableControls(IG0415);
                        obj_op.DisableControls(IG0515);
                        obj_op.DisableControls(IG060115);
                        obj_op.DisableControls(IG060215);
                        obj_op.DisableControls(IG060315);
                        obj_op.DisableControls(IG060415);
                        obj_op.DisableControls(IG060515);

                        obj_op.DisableControls(IG070115);
                        obj_op.DisableControls(IG070215);
                        obj_op.DisableControls(IG070315);
                        obj_op.DisableControls(IG070415);
                        obj_op.DisableControls(IG070515);
                        obj_op.DisableControls(IG070615);
                        obj_op.DisableControls(IG070715);
                        obj_op.DisableControls(IG070815);
                        obj_op.DisableControls(IG070915);
                        obj_op.DisableControls(IG0701015);
                        obj_op.DisableControls(IG0701115);
                        obj_op.DisableControls(IG0701215);
                        obj_op.DisableControls(IG0701315);


                        obj_op.DisableControls(IG0815);
                        obj_op.DisableControls(IG0915);
                        obj_op.DisableControls(IG01015);
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                        obj_op.DisableControls(IG01315);
                        obj_op.DisableControls(IG01415);
                        obj_op.DisableControls(IG01515);

                        obj_op.DisableControls(IG160115);
                        obj_op.DisableControls(IG160215);
                        obj_op.DisableControls(IG160315);
                        obj_op.DisableControls(IG160415);
                        obj_op.DisableControls(IG160515);
                        obj_op.DisableControls(IG160615);
                        obj_op.DisableControls(IG160715);
                        obj_op.DisableControls(IG160815);
                        obj_op.DisableControls(IG160915);
                        obj_op.DisableControls(IG1601015);
                        obj_op.DisableControls(IG1601115);
                        obj_op.DisableControls(IG1601215);

                        chkMember12.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember11.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember11);
        }


        private void IG0411_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0411'", IG0411.Text) == true)
                {
                    IG0411.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0411.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0411);
        }


        private void IG0511_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0511'", IG0511.Text) == true)
                {
                    IG0511.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0511.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0511);
        }


        private void IG060111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060111'", IG060111.Text) == true)
                {
                    IG060111.Focus();
                }
                else
                {
                    if (IG070111.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070111.Focus();
                    }
                    else if (IG070112.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060111);
        }


        private void IG060211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060211'", IG060211.Text) == true)
                {
                    IG060211.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060211);
        }


        private void IG060311_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060311'", IG060311.Text) == true)
                {
                    IG060311.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060311.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060311);
        }


        private void IG060411_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060411'", IG060411.Text) == true)
                {
                    IG060411.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060411.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060411);
        }


        private void IG060511_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060511'", IG060511.Text) == true)
                {
                    IG060511.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060511.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060511);
        }


        private void chkMember12_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember12'", chkMember12.Text) == true)
                {
                    chkMember12.Focus();
                }
                else
                {


                    if (chkMember11.Text == "2" && chkMember12.Text == "1")
                    {
                        MessageBox.Show("You have to add 11th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember12.Focus();
                        return;
                    }



                    if (chkMember12.Text == "1")
                    {
                        obj_op.EnableControls(IG0412);
                        obj_op.EnableControls(IG0512);
                        obj_op.EnableControls(IG060112);
                        obj_op.EnableControls(IG060212);
                        obj_op.EnableControls(IG060312);
                        obj_op.EnableControls(IG060412);
                        obj_op.EnableControls(IG060512);

                        obj_op.EnableControls(IG070112);
                        obj_op.EnableControls(IG070212);
                        obj_op.EnableControls(IG070312);
                        obj_op.EnableControls(IG070412);
                        obj_op.EnableControls(IG070512);
                        obj_op.EnableControls(IG070612);
                        obj_op.EnableControls(IG070712);
                        obj_op.EnableControls(IG070812);
                        obj_op.EnableControls(IG070912);
                        obj_op.EnableControls(IG0701012);
                        obj_op.EnableControls(IG0701112);
                        obj_op.EnableControls(IG0701212);
                        obj_op.EnableControls(IG0701312);


                        obj_op.EnableControls(IG0812);
                        obj_op.EnableControls(IG0912);
                        obj_op.EnableControls(IG01012);
                        obj_op.EnableControls(IG01112);
                        obj_op.EnableControls(IG01212);
                        obj_op.EnableControls(IG01312);
                        obj_op.EnableControls(IG01412);
                        obj_op.EnableControls(IG01512);


                        obj_op.EnableControls(IG160112);
                        obj_op.EnableControls(IG160212);
                        obj_op.EnableControls(IG160312);
                        obj_op.EnableControls(IG160412);
                        obj_op.EnableControls(IG160512);
                        obj_op.EnableControls(IG160612);
                        obj_op.EnableControls(IG160712);
                        obj_op.EnableControls(IG160812);
                        obj_op.EnableControls(IG160912);
                        obj_op.EnableControls(IG1601012);
                        obj_op.EnableControls(IG1601112);
                        obj_op.EnableControls(IG1601212);


                        IG0412.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0412);
                        obj_op.DisableControls(IG0512);
                        obj_op.DisableControls(IG060112);
                        obj_op.DisableControls(IG060212);
                        obj_op.DisableControls(IG060312);
                        obj_op.DisableControls(IG060412);
                        obj_op.DisableControls(IG060512);

                        obj_op.DisableControls(IG070112);
                        obj_op.DisableControls(IG070212);
                        obj_op.DisableControls(IG070312);
                        obj_op.DisableControls(IG070412);
                        obj_op.DisableControls(IG070512);
                        obj_op.DisableControls(IG070612);
                        obj_op.DisableControls(IG070712);
                        obj_op.DisableControls(IG070812);
                        obj_op.DisableControls(IG070912);
                        obj_op.DisableControls(IG0701012);
                        obj_op.DisableControls(IG0701112);
                        obj_op.DisableControls(IG0701212);
                        obj_op.DisableControls(IG0701312);


                        obj_op.DisableControls(IG0812);
                        obj_op.DisableControls(IG0912);
                        obj_op.DisableControls(IG01012);
                        obj_op.DisableControls(IG01112);
                        obj_op.DisableControls(IG01212);
                        obj_op.DisableControls(IG01312);
                        obj_op.DisableControls(IG01412);
                        obj_op.DisableControls(IG01512);

                        obj_op.DisableControls(IG160112);
                        obj_op.DisableControls(IG160212);
                        obj_op.DisableControls(IG160312);
                        obj_op.DisableControls(IG160412);
                        obj_op.DisableControls(IG160512);
                        obj_op.DisableControls(IG160612);
                        obj_op.DisableControls(IG160712);
                        obj_op.DisableControls(IG160812);
                        obj_op.DisableControls(IG160912);
                        obj_op.DisableControls(IG1601012);
                        obj_op.DisableControls(IG1601112);
                        obj_op.DisableControls(IG1601212);




                        obj_op.DisableControls(IG0413);
                        obj_op.DisableControls(IG0513);
                        obj_op.DisableControls(IG060113);
                        obj_op.DisableControls(IG060213);
                        obj_op.DisableControls(IG060313);
                        obj_op.DisableControls(IG060413);
                        obj_op.DisableControls(IG060513);

                        obj_op.DisableControls(IG070113);
                        obj_op.DisableControls(IG070213);
                        obj_op.DisableControls(IG070313);
                        obj_op.DisableControls(IG070413);
                        obj_op.DisableControls(IG070513);
                        obj_op.DisableControls(IG070613);
                        obj_op.DisableControls(IG070713);
                        obj_op.DisableControls(IG070813);
                        obj_op.DisableControls(IG070913);
                        obj_op.DisableControls(IG0701013);
                        obj_op.DisableControls(IG0701113);
                        obj_op.DisableControls(IG0701213);
                        obj_op.DisableControls(IG0701313);


                        obj_op.DisableControls(IG0813);
                        obj_op.DisableControls(IG0913);
                        obj_op.DisableControls(IG01013);
                        obj_op.DisableControls(IG01113);
                        obj_op.DisableControls(IG01213);
                        obj_op.DisableControls(IG01313);
                        obj_op.DisableControls(IG01413);
                        obj_op.DisableControls(IG01513);

                        obj_op.DisableControls(IG160113);
                        obj_op.DisableControls(IG160213);
                        obj_op.DisableControls(IG160313);
                        obj_op.DisableControls(IG160413);
                        obj_op.DisableControls(IG160513);
                        obj_op.DisableControls(IG160613);
                        obj_op.DisableControls(IG160713);
                        obj_op.DisableControls(IG160813);
                        obj_op.DisableControls(IG160913);
                        obj_op.DisableControls(IG1601013);
                        obj_op.DisableControls(IG1601113);
                        obj_op.DisableControls(IG1601213);



                        obj_op.DisableControls(IG0414);
                        obj_op.DisableControls(IG0514);
                        obj_op.DisableControls(IG060114);
                        obj_op.DisableControls(IG060214);
                        obj_op.DisableControls(IG060314);
                        obj_op.DisableControls(IG060414);
                        obj_op.DisableControls(IG060514);

                        obj_op.DisableControls(IG070114);
                        obj_op.DisableControls(IG070214);
                        obj_op.DisableControls(IG070314);
                        obj_op.DisableControls(IG070414);
                        obj_op.DisableControls(IG070514);
                        obj_op.DisableControls(IG070614);
                        obj_op.DisableControls(IG070714);
                        obj_op.DisableControls(IG070814);
                        obj_op.DisableControls(IG070914);
                        obj_op.DisableControls(IG0701014);
                        obj_op.DisableControls(IG0701114);
                        obj_op.DisableControls(IG0701214);
                        obj_op.DisableControls(IG0701314);


                        obj_op.DisableControls(IG0814);
                        obj_op.DisableControls(IG0914);
                        obj_op.DisableControls(IG01014);
                        obj_op.DisableControls(IG01114);
                        obj_op.DisableControls(IG01214);
                        obj_op.DisableControls(IG01314);
                        obj_op.DisableControls(IG01414);
                        obj_op.DisableControls(IG01514);

                        obj_op.DisableControls(IG160114);
                        obj_op.DisableControls(IG160214);
                        obj_op.DisableControls(IG160314);
                        obj_op.DisableControls(IG160414);
                        obj_op.DisableControls(IG160514);
                        obj_op.DisableControls(IG160614);
                        obj_op.DisableControls(IG160714);
                        obj_op.DisableControls(IG160814);
                        obj_op.DisableControls(IG160914);
                        obj_op.DisableControls(IG1601014);
                        obj_op.DisableControls(IG1601114);
                        obj_op.DisableControls(IG1601214);




                        obj_op.DisableControls(IG0415);
                        obj_op.DisableControls(IG0515);
                        obj_op.DisableControls(IG060115);
                        obj_op.DisableControls(IG060215);
                        obj_op.DisableControls(IG060315);
                        obj_op.DisableControls(IG060415);
                        obj_op.DisableControls(IG060515);

                        obj_op.DisableControls(IG070115);
                        obj_op.DisableControls(IG070215);
                        obj_op.DisableControls(IG070315);
                        obj_op.DisableControls(IG070415);
                        obj_op.DisableControls(IG070515);
                        obj_op.DisableControls(IG070615);
                        obj_op.DisableControls(IG070715);
                        obj_op.DisableControls(IG070815);
                        obj_op.DisableControls(IG070915);
                        obj_op.DisableControls(IG0701015);
                        obj_op.DisableControls(IG0701115);
                        obj_op.DisableControls(IG0701215);
                        obj_op.DisableControls(IG0701315);


                        obj_op.DisableControls(IG0815);
                        obj_op.DisableControls(IG0915);
                        obj_op.DisableControls(IG01015);
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                        obj_op.DisableControls(IG01315);
                        obj_op.DisableControls(IG01415);
                        obj_op.DisableControls(IG01515);

                        obj_op.DisableControls(IG160115);
                        obj_op.DisableControls(IG160215);
                        obj_op.DisableControls(IG160315);
                        obj_op.DisableControls(IG160415);
                        obj_op.DisableControls(IG160515);
                        obj_op.DisableControls(IG160615);
                        obj_op.DisableControls(IG160715);
                        obj_op.DisableControls(IG160815);
                        obj_op.DisableControls(IG160915);
                        obj_op.DisableControls(IG1601015);
                        obj_op.DisableControls(IG1601115);
                        obj_op.DisableControls(IG1601215);


                        chkMember13.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember12.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember12);
        }


        private void IG0412_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0412'", IG0412.Text) == true)
                {
                    IG0412.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0412.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0412);
        }


        private void IG0512_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0512'", IG0512.Text) == true)
                {
                    IG0512.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0512.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0512);
        }


        private void IG060112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060112'", IG060112.Text) == true)
                {
                    IG060112.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060112);
        }


        private void IG060212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060212'", IG060212.Text) == true)
                {
                    IG060212.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060212);
        }


        private void IG060312_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060312'", IG060312.Text) == true)
                {
                    IG060312.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060312.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060312);
        }


        private void IG060412_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060412'", IG060412.Text) == true)
                {
                    IG060412.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060412.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060412);
        }


        private void IG060512_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060512'", IG060512.Text) == true)
                {
                    IG060512.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060512.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060512);
        }


        private void chkMember13_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember13'", chkMember13.Text) == true)
                {
                    chkMember13.Focus();
                }
                else
                {

                    if (chkMember12.Text == "2" && chkMember13.Text == "1")
                    {
                        MessageBox.Show("You have to add 13th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember13.Focus();
                        return;
                    }



                    if (chkMember13.Text == "1")
                    {
                        obj_op.EnableControls(IG0413);
                        obj_op.EnableControls(IG0513);
                        obj_op.EnableControls(IG060113);
                        obj_op.EnableControls(IG060213);
                        obj_op.EnableControls(IG060313);
                        obj_op.EnableControls(IG060413);
                        obj_op.EnableControls(IG060513);

                        obj_op.EnableControls(IG070113);
                        obj_op.EnableControls(IG070213);
                        obj_op.EnableControls(IG070313);
                        obj_op.EnableControls(IG070413);
                        obj_op.EnableControls(IG070513);
                        obj_op.EnableControls(IG070613);
                        obj_op.EnableControls(IG070713);
                        obj_op.EnableControls(IG070813);
                        obj_op.EnableControls(IG070913);
                        obj_op.EnableControls(IG0701013);
                        obj_op.EnableControls(IG0701113);
                        obj_op.EnableControls(IG0701213);
                        obj_op.EnableControls(IG0701313);


                        obj_op.EnableControls(IG0813);
                        obj_op.EnableControls(IG0913);
                        obj_op.EnableControls(IG01013);
                        obj_op.EnableControls(IG01113);
                        obj_op.EnableControls(IG01213);
                        obj_op.EnableControls(IG01313);
                        obj_op.EnableControls(IG01413);
                        obj_op.EnableControls(IG01513);


                        obj_op.EnableControls(IG160113);
                        obj_op.EnableControls(IG160213);
                        obj_op.EnableControls(IG160313);
                        obj_op.EnableControls(IG160413);
                        obj_op.EnableControls(IG160513);
                        obj_op.EnableControls(IG160613);
                        obj_op.EnableControls(IG160713);
                        obj_op.EnableControls(IG160813);
                        obj_op.EnableControls(IG160913);
                        obj_op.EnableControls(IG1601013);
                        obj_op.EnableControls(IG1601113);
                        obj_op.EnableControls(IG1601213);


                        IG0413.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0413);
                        obj_op.DisableControls(IG0513);
                        obj_op.DisableControls(IG060113);
                        obj_op.DisableControls(IG060213);
                        obj_op.DisableControls(IG060313);
                        obj_op.DisableControls(IG060413);
                        obj_op.DisableControls(IG060513);

                        obj_op.DisableControls(IG070113);
                        obj_op.DisableControls(IG070213);
                        obj_op.DisableControls(IG070313);
                        obj_op.DisableControls(IG070413);
                        obj_op.DisableControls(IG070513);
                        obj_op.DisableControls(IG070613);
                        obj_op.DisableControls(IG070713);
                        obj_op.DisableControls(IG070813);
                        obj_op.DisableControls(IG070913);
                        obj_op.DisableControls(IG0701013);
                        obj_op.DisableControls(IG0701113);
                        obj_op.DisableControls(IG0701213);
                        obj_op.DisableControls(IG0701313);


                        obj_op.DisableControls(IG0813);
                        obj_op.DisableControls(IG0913);
                        obj_op.DisableControls(IG01013);
                        obj_op.DisableControls(IG01113);
                        obj_op.DisableControls(IG01213);
                        obj_op.DisableControls(IG01313);
                        obj_op.DisableControls(IG01413);
                        obj_op.DisableControls(IG01513);

                        obj_op.DisableControls(IG160113);
                        obj_op.DisableControls(IG160213);
                        obj_op.DisableControls(IG160313);
                        obj_op.DisableControls(IG160413);
                        obj_op.DisableControls(IG160513);
                        obj_op.DisableControls(IG160613);
                        obj_op.DisableControls(IG160713);
                        obj_op.DisableControls(IG160813);
                        obj_op.DisableControls(IG160913);
                        obj_op.DisableControls(IG1601013);
                        obj_op.DisableControls(IG1601113);
                        obj_op.DisableControls(IG1601213);



                        obj_op.DisableControls(IG0414);
                        obj_op.DisableControls(IG0514);
                        obj_op.DisableControls(IG060114);
                        obj_op.DisableControls(IG060214);
                        obj_op.DisableControls(IG060314);
                        obj_op.DisableControls(IG060414);
                        obj_op.DisableControls(IG060514);

                        obj_op.DisableControls(IG070114);
                        obj_op.DisableControls(IG070214);
                        obj_op.DisableControls(IG070314);
                        obj_op.DisableControls(IG070414);
                        obj_op.DisableControls(IG070514);
                        obj_op.DisableControls(IG070614);
                        obj_op.DisableControls(IG070714);
                        obj_op.DisableControls(IG070814);
                        obj_op.DisableControls(IG070914);
                        obj_op.DisableControls(IG0701014);
                        obj_op.DisableControls(IG0701114);
                        obj_op.DisableControls(IG0701214);
                        obj_op.DisableControls(IG0701314);


                        obj_op.DisableControls(IG0814);
                        obj_op.DisableControls(IG0914);
                        obj_op.DisableControls(IG01014);
                        obj_op.DisableControls(IG01114);
                        obj_op.DisableControls(IG01214);
                        obj_op.DisableControls(IG01314);
                        obj_op.DisableControls(IG01414);
                        obj_op.DisableControls(IG01514);

                        obj_op.DisableControls(IG160114);
                        obj_op.DisableControls(IG160214);
                        obj_op.DisableControls(IG160314);
                        obj_op.DisableControls(IG160414);
                        obj_op.DisableControls(IG160514);
                        obj_op.DisableControls(IG160614);
                        obj_op.DisableControls(IG160714);
                        obj_op.DisableControls(IG160814);
                        obj_op.DisableControls(IG160914);
                        obj_op.DisableControls(IG1601014);
                        obj_op.DisableControls(IG1601114);
                        obj_op.DisableControls(IG1601214);




                        obj_op.DisableControls(IG0415);
                        obj_op.DisableControls(IG0515);
                        obj_op.DisableControls(IG060115);
                        obj_op.DisableControls(IG060215);
                        obj_op.DisableControls(IG060315);
                        obj_op.DisableControls(IG060415);
                        obj_op.DisableControls(IG060515);

                        obj_op.DisableControls(IG070115);
                        obj_op.DisableControls(IG070215);
                        obj_op.DisableControls(IG070315);
                        obj_op.DisableControls(IG070415);
                        obj_op.DisableControls(IG070515);
                        obj_op.DisableControls(IG070615);
                        obj_op.DisableControls(IG070715);
                        obj_op.DisableControls(IG070815);
                        obj_op.DisableControls(IG070915);
                        obj_op.DisableControls(IG0701015);
                        obj_op.DisableControls(IG0701115);
                        obj_op.DisableControls(IG0701215);
                        obj_op.DisableControls(IG0701315);


                        obj_op.DisableControls(IG0815);
                        obj_op.DisableControls(IG0915);
                        obj_op.DisableControls(IG01015);
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                        obj_op.DisableControls(IG01315);
                        obj_op.DisableControls(IG01415);
                        obj_op.DisableControls(IG01515);

                        obj_op.DisableControls(IG160115);
                        obj_op.DisableControls(IG160215);
                        obj_op.DisableControls(IG160315);
                        obj_op.DisableControls(IG160415);
                        obj_op.DisableControls(IG160515);
                        obj_op.DisableControls(IG160615);
                        obj_op.DisableControls(IG160715);
                        obj_op.DisableControls(IG160815);
                        obj_op.DisableControls(IG160915);
                        obj_op.DisableControls(IG1601015);
                        obj_op.DisableControls(IG1601115);
                        obj_op.DisableControls(IG1601215);

                        chkMember14.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember13.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember13);
        }


        private void IG0413_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0413'", IG0413.Text) == true)
                {
                    IG0413.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0413.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0413);
        }


        private void IG0513_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0513'", IG0513.Text) == true)
                {
                    IG0513.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0513.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0513);
        }


        private void IG060113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060113'", IG060113.Text) == true)
                {
                    IG060113.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060113);
        }


        private void IG060213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060213'", IG060213.Text) == true)
                {
                    IG060213.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060213);
        }


        private void IG060313_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060313'", IG060313.Text) == true)
                {
                    IG060313.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060313.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060313);
        }


        private void IG060413_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060413'", IG060413.Text) == true)
                {
                    IG060413.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060413.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060413);
        }


        private void IG060513_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060513'", IG060513.Text) == true)
                {
                    IG060513.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060513.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060513);
        }


        private void chkMember14_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember14'", chkMember14.Text) == true)
                {
                    chkMember14.Focus();
                }
                else
                {

                    if (chkMember13.Text == "2" && chkMember14.Text == "1")
                    {
                        MessageBox.Show("You have to add 13th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember14.Focus();
                        return;
                    }



                    if (chkMember14.Text == "1")
                    {
                        obj_op.EnableControls(IG0414);
                        obj_op.EnableControls(IG0514);
                        obj_op.EnableControls(IG060114);
                        obj_op.EnableControls(IG060214);
                        obj_op.EnableControls(IG060314);
                        obj_op.EnableControls(IG060414);
                        obj_op.EnableControls(IG060514);

                        obj_op.EnableControls(IG070114);
                        obj_op.EnableControls(IG070214);
                        obj_op.EnableControls(IG070314);
                        obj_op.EnableControls(IG070414);
                        obj_op.EnableControls(IG070514);
                        obj_op.EnableControls(IG070614);
                        obj_op.EnableControls(IG070714);
                        obj_op.EnableControls(IG070814);
                        obj_op.EnableControls(IG070914);
                        obj_op.EnableControls(IG0701014);
                        obj_op.EnableControls(IG0701114);
                        obj_op.EnableControls(IG0701214);
                        obj_op.EnableControls(IG0701314);


                        obj_op.EnableControls(IG0814);
                        obj_op.EnableControls(IG0914);
                        obj_op.EnableControls(IG01014);
                        obj_op.EnableControls(IG01114);
                        obj_op.EnableControls(IG01214);
                        obj_op.EnableControls(IG01314);
                        obj_op.EnableControls(IG01414);
                        obj_op.EnableControls(IG01514);


                        obj_op.EnableControls(IG160114);
                        obj_op.EnableControls(IG160214);
                        obj_op.EnableControls(IG160314);
                        obj_op.EnableControls(IG160414);
                        obj_op.EnableControls(IG160514);
                        obj_op.EnableControls(IG160614);
                        obj_op.EnableControls(IG160714);
                        obj_op.EnableControls(IG160814);
                        obj_op.EnableControls(IG160914);
                        obj_op.EnableControls(IG1601014);
                        obj_op.EnableControls(IG1601114);
                        obj_op.EnableControls(IG1601214);


                        IG0414.Focus();

                    }
                    else
                    {


                        obj_op.DisableControls(IG0414);
                        obj_op.DisableControls(IG0514);
                        obj_op.DisableControls(IG060114);
                        obj_op.DisableControls(IG060214);
                        obj_op.DisableControls(IG060314);
                        obj_op.DisableControls(IG060414);
                        obj_op.DisableControls(IG060514);

                        obj_op.DisableControls(IG070114);
                        obj_op.DisableControls(IG070214);
                        obj_op.DisableControls(IG070314);
                        obj_op.DisableControls(IG070414);
                        obj_op.DisableControls(IG070514);
                        obj_op.DisableControls(IG070614);
                        obj_op.DisableControls(IG070714);
                        obj_op.DisableControls(IG070814);
                        obj_op.DisableControls(IG070914);
                        obj_op.DisableControls(IG0701014);
                        obj_op.DisableControls(IG0701114);
                        obj_op.DisableControls(IG0701214);
                        obj_op.DisableControls(IG0701314);


                        obj_op.DisableControls(IG0814);
                        obj_op.DisableControls(IG0914);
                        obj_op.DisableControls(IG01014);
                        obj_op.DisableControls(IG01114);
                        obj_op.DisableControls(IG01214);
                        obj_op.DisableControls(IG01314);
                        obj_op.DisableControls(IG01414);
                        obj_op.DisableControls(IG01514);

                        obj_op.DisableControls(IG160114);
                        obj_op.DisableControls(IG160214);
                        obj_op.DisableControls(IG160314);
                        obj_op.DisableControls(IG160414);
                        obj_op.DisableControls(IG160514);
                        obj_op.DisableControls(IG160614);
                        obj_op.DisableControls(IG160714);
                        obj_op.DisableControls(IG160814);
                        obj_op.DisableControls(IG160914);
                        obj_op.DisableControls(IG1601014);
                        obj_op.DisableControls(IG1601114);
                        obj_op.DisableControls(IG1601214);




                        obj_op.DisableControls(IG0415);
                        obj_op.DisableControls(IG0515);
                        obj_op.DisableControls(IG060115);
                        obj_op.DisableControls(IG060215);
                        obj_op.DisableControls(IG060315);
                        obj_op.DisableControls(IG060415);
                        obj_op.DisableControls(IG060515);

                        obj_op.DisableControls(IG070115);
                        obj_op.DisableControls(IG070215);
                        obj_op.DisableControls(IG070315);
                        obj_op.DisableControls(IG070415);
                        obj_op.DisableControls(IG070515);
                        obj_op.DisableControls(IG070615);
                        obj_op.DisableControls(IG070715);
                        obj_op.DisableControls(IG070815);
                        obj_op.DisableControls(IG070915);
                        obj_op.DisableControls(IG0701015);
                        obj_op.DisableControls(IG0701115);
                        obj_op.DisableControls(IG0701215);
                        obj_op.DisableControls(IG0701315);


                        obj_op.DisableControls(IG0815);
                        obj_op.DisableControls(IG0915);
                        obj_op.DisableControls(IG01015);
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                        obj_op.DisableControls(IG01315);
                        obj_op.DisableControls(IG01415);
                        obj_op.DisableControls(IG01515);

                        obj_op.DisableControls(IG160115);
                        obj_op.DisableControls(IG160215);
                        obj_op.DisableControls(IG160315);
                        obj_op.DisableControls(IG160415);
                        obj_op.DisableControls(IG160515);
                        obj_op.DisableControls(IG160615);
                        obj_op.DisableControls(IG160715);
                        obj_op.DisableControls(IG160815);
                        obj_op.DisableControls(IG160915);
                        obj_op.DisableControls(IG1601015);
                        obj_op.DisableControls(IG1601115);
                        obj_op.DisableControls(IG1601215);

                        chkMember15.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember14.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember14);
        }


        private void IG0414_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0414'", IG0414.Text) == true)
                {
                    IG0414.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0414.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0414);
        }


        private void IG0514_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0514'", IG0514.Text) == true)
                {
                    IG0514.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0514.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0514);
        }


        private void IG060114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060114'", IG060114.Text) == true)
                {
                    IG060114.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060114);
        }


        private void IG060214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060214'", IG060214.Text) == true)
                {
                    IG060214.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060214);
        }


        private void IG060314_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060314'", IG060314.Text) == true)
                {
                    IG060314.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060314.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060314);
        }


        private void IG060414_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060414'", IG060414.Text) == true)
                {
                    IG060414.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060414.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060414);
        }


        private void IG060514_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060514'", IG060514.Text) == true)
                {
                    IG060514.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060514.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060514);
        }


        private void chkMember15_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember15'", chkMember15.Text) == true)
                {
                    chkMember15.Focus();
                }
                else
                {


                    if (chkMember14.Text == "2" && chkMember15.Text == "1")
                    {
                        MessageBox.Show("You have to add 14th member first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember15.Focus();
                        return;
                    }



                    if (chkMember15.Text == "1")
                    {
                        obj_op.EnableControls(IG0415);
                        obj_op.EnableControls(IG0515);
                        obj_op.EnableControls(IG060115);
                        obj_op.EnableControls(IG060215);
                        obj_op.EnableControls(IG060315);
                        obj_op.EnableControls(IG060415);
                        obj_op.EnableControls(IG060515);

                        obj_op.EnableControls(IG070115);
                        obj_op.EnableControls(IG070215);
                        obj_op.EnableControls(IG070315);
                        obj_op.EnableControls(IG070415);
                        obj_op.EnableControls(IG070515);
                        obj_op.EnableControls(IG070615);
                        obj_op.EnableControls(IG070715);
                        obj_op.EnableControls(IG070815);
                        obj_op.EnableControls(IG070915);
                        obj_op.EnableControls(IG0701015);
                        obj_op.EnableControls(IG0701115);
                        obj_op.EnableControls(IG0701215);
                        obj_op.EnableControls(IG0701315);


                        obj_op.EnableControls(IG0815);
                        obj_op.EnableControls(IG0915);
                        obj_op.EnableControls(IG01015);
                        obj_op.EnableControls(IG01115);
                        obj_op.EnableControls(IG01215);
                        obj_op.EnableControls(IG01315);
                        obj_op.EnableControls(IG01415);
                        obj_op.EnableControls(IG01515);


                        obj_op.EnableControls(IG160115);
                        obj_op.EnableControls(IG160215);
                        obj_op.EnableControls(IG160315);
                        obj_op.EnableControls(IG160415);
                        obj_op.EnableControls(IG160515);
                        obj_op.EnableControls(IG160615);
                        obj_op.EnableControls(IG160715);
                        obj_op.EnableControls(IG160815);
                        obj_op.EnableControls(IG160915);
                        obj_op.EnableControls(IG1601015);
                        obj_op.EnableControls(IG1601115);
                        obj_op.EnableControls(IG1601215);


                        IG0415.Focus();

                    }
                    else
                    {



                        obj_op.DisableControls(IG0415);
                        obj_op.DisableControls(IG0515);
                        obj_op.DisableControls(IG060115);
                        obj_op.DisableControls(IG060215);
                        obj_op.DisableControls(IG060315);
                        obj_op.DisableControls(IG060415);
                        obj_op.DisableControls(IG060515);

                        obj_op.DisableControls(IG070115);
                        obj_op.DisableControls(IG070215);
                        obj_op.DisableControls(IG070315);
                        obj_op.DisableControls(IG070415);
                        obj_op.DisableControls(IG070515);
                        obj_op.DisableControls(IG070615);
                        obj_op.DisableControls(IG070715);
                        obj_op.DisableControls(IG070815);
                        obj_op.DisableControls(IG070915);
                        obj_op.DisableControls(IG0701015);
                        obj_op.DisableControls(IG0701115);
                        obj_op.DisableControls(IG0701215);
                        obj_op.DisableControls(IG0701315);


                        obj_op.DisableControls(IG0815);
                        obj_op.DisableControls(IG0915);
                        obj_op.DisableControls(IG01015);
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                        obj_op.DisableControls(IG01315);
                        obj_op.DisableControls(IG01415);
                        obj_op.DisableControls(IG01515);

                        obj_op.DisableControls(IG160115);
                        obj_op.DisableControls(IG160215);
                        obj_op.DisableControls(IG160315);
                        obj_op.DisableControls(IG160415);
                        obj_op.DisableControls(IG160515);
                        obj_op.DisableControls(IG160615);
                        obj_op.DisableControls(IG160715);
                        obj_op.DisableControls(IG160815);
                        obj_op.DisableControls(IG160915);
                        obj_op.DisableControls(IG1601015);
                        obj_op.DisableControls(IG1601115);
                        obj_op.DisableControls(IG1601215);


                        IG060111.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember15.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember15);
        }


        private void IG0415_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0415'", IG0415.Text) == true)
                {
                    IG0415.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0415.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0415);
        }


        private void IG0515_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0515'", IG0515.Text) == true)
                {
                    IG0515.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0515.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0515);
        }


        private void IG060115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060115'", IG060115.Text) == true)
                {
                    IG060115.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060115);
        }


        private void IG060215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060215'", IG060215.Text) == true)
                {
                    IG060215.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060215);
        }


        private void IG060315_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060315'", IG060315.Text) == true)
                {
                    IG060315.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060315.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060315);
        }


        private void IG060415_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060415'", IG060415.Text) == true)
                {
                    IG060415.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060415.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060415);
        }


        private void IG060515_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060515'", IG060515.Text) == true)
                {
                    IG060515.Focus();
                }
                else
                {
                    if (IG070111.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070111.Focus();
                    }
                    else if (IG070112.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 17;
                        IG070115.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060515.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060515);
        }


        private void IG070111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070111'", IG070111.Text) == true)
                {
                    IG070111.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070111);
        }


        private void IG070211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070211'", IG070211.Text) == true)
                {
                    IG070211.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070211);
        }


        private void IG070311_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070311'", IG070311.Text) == true)
                {
                    IG070311.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070311.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070311);
        }


        private void IG070411_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070411'", IG070411.Text) == true)
                {
                    IG070411.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070411.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070411);
        }


        private void IG070511_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070511'", IG070511.Text) == true)
                {
                    IG070511.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070511.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070511);
        }


        private void IG070611_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070611'", IG070611.Text) == true)
                {
                    IG070611.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070611.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070611);
        }


        private void IG070711_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070711'", IG070711.Text) == true)
                {
                    IG070711.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070711.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070711);
        }


        private void IG070811_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070811'", IG070811.Text) == true)
                {
                    IG070811.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070811.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070811);
        }


        private void IG070911_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070911'", IG070911.Text) == true)
                {
                    IG070911.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070911.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070911);
        }


        private void IG0701011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701011'", IG0701011.Text) == true)
                {
                    IG0701011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701011);
        }


        private void IG0701111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701111'", IG0701111.Text) == true)
                {
                    IG0701111.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701111);
        }


        private void IG0701211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701211'", IG0701211.Text) == true)
                {
                    IG0701211.Focus();
                }
                else
                {

                    if (
                        IG070111.Text == "1" &&
                        IG070211.Text == "1" &&
                        IG070311.Text == "1" &&
                        IG070411.Text == "1" &&
                        IG070511.Text == "1" &&
                        IG070611.Text == "1" &&
                        IG070711.Text == "1" &&
                        IG070811.Text == "1" &&
                        IG070911.Text == "1" &&
                        IG0701011.Text == "1" &&
                        IG0701111.Text == "1" &&
                        IG0701211.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701211.Focus();
                    }
                    else
                    {
                        if (IG0701211.Text == "1")
                        {
                            obj_op.DisableControls(IG0701311);
                            obj_op.DisableControls(IG0811);

                            IG0911.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701311);
                            obj_op.EnableControls(IG0811);

                            IG0701311.Focus();
                        }
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701211);
        }


        private void IG0701311_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701311'", IG0701311.Text) == true)
                {
                    IG0701311.Focus();
                }
                else
                {

                    if (
                        IG070111.Text == "1" &&
                        IG070211.Text == "1" &&
                        IG070311.Text == "1" &&
                        IG070411.Text == "1" &&
                        IG070511.Text == "1" &&
                        IG070611.Text == "1" &&
                        IG070711.Text == "1" &&
                        IG070811.Text == "1" &&
                        IG070911.Text == "1" &&
                        IG0701011.Text == "1" &&
                        IG0701111.Text == "1" &&
                        IG0701311.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701311.Focus();
                    }
                    else
                    {
                        if (IG0701311.Text == "1")
                        {
                            obj_op.DisableControls(IG0811);
                            IG0911.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0811);
                            IG0811.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701311.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701311);
        }


        private void IG0811_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0811'", IG0811.Text) == true)
                {
                    IG0811.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0811.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0811);
        }


        private void IG0911_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0911'", IG0911.Text) == true)
                {
                    IG0911.Focus();
                }
                else
                {
                    if (IG0911.Text == "0")
                    {
                        obj_op.DisableControls(IG01011);
                        IG01111.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01011);
                        IG01011.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0911.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0911);
        }


        private void IG01011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01011'", IG01011.Text) == true)
                {
                    IG01011.Focus();
                }
                else
                {
                    if (IG01011.Text == "1")
                    {
                        obj_op.DisableControls(IG01111);
                        obj_op.DisableControls(IG01211);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01111);
                        obj_op.EnableControls(IG01211);
                    }



                    if (IG01111.Enabled == true)
                    {
                        IG01111.Focus();
                    }
                    else if (IG070112.Enabled == true)
                    {
                        IG070112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01011);
        }


        private void IG01111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01111'", IG01111.Text) == true)
                {
                    IG01111.Focus();
                }
                else
                {
                    if (IG01111.Text == "1")
                    {
                        obj_op.DisableControls(IG01211);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01211);
                    }


                    if (IG070112.Enabled == true)
                    {
                        IG070112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01111);
        }


        private void IG01211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01211'", IG01211.Text) == true)
                {
                    IG01211.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01211);
        }


        private void IG01311_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01311'", IG01311.Text) == true)
                {
                    IG01311.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01311.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01311);
        }


        private void IG01411_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01411'", IG01411.Text) == true)
                {
                    IG01411.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01411.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01411);
        }


        private void IG01511_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01511'", IG01511.Text) == true)
                {
                    IG01511.Focus();
                }
                else
                {
                    if (IG070112.Enabled == true)
                    {
                        IG070112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01511.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01511);
        }


        private void IG070112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070112'", IG070112.Text) == true)
                {
                    IG070112.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070112);
        }


        private void IG070212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070212'", IG070212.Text) == true)
                {
                    IG070212.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070212);
        }


        private void IG070312_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070312'", IG070312.Text) == true)
                {
                    IG070312.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070312.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070312);
        }


        private void IG070412_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070412'", IG070412.Text) == true)
                {
                    IG070412.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070412.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070412);
        }


        private void IG070512_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070512'", IG070512.Text) == true)
                {
                    IG070512.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070512.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070512);
        }


        private void IG070612_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070612'", IG070612.Text) == true)
                {
                    IG070612.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070612.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070612);
        }


        private void IG070712_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070712'", IG070712.Text) == true)
                {
                    IG070712.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070712.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070712);
        }


        private void IG070812_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070812'", IG070812.Text) == true)
                {
                    IG070812.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070812.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070812);
        }


        private void IG070912_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070912'", IG070912.Text) == true)
                {
                    IG070912.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070912.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070912);
        }


        private void IG0701012_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701012'", IG0701012.Text) == true)
                {
                    IG0701012.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701012.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701012);
        }


        private void IG0701112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701112'", IG0701112.Text) == true)
                {
                    IG0701112.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701112);
        }


        private void IG0701212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701212'", IG0701212.Text) == true)
                {
                    IG0701212.Focus();
                }
                else
                {

                    if (
                        IG070112.Text == "1" &&
                        IG070212.Text == "1" &&
                        IG070312.Text == "1" &&
                        IG070412.Text == "1" &&
                        IG070512.Text == "1" &&
                        IG070612.Text == "1" &&
                        IG070712.Text == "1" &&
                        IG070812.Text == "1" &&
                        IG070912.Text == "1" &&
                        IG0701012.Text == "1" &&
                        IG0701112.Text == "1" &&
                        IG0701212.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701212.Focus();
                    }
                    else
                    {
                        if (IG0701212.Text == "1")
                        {
                            obj_op.DisableControls(IG0701312);
                            obj_op.DisableControls(IG0812);

                            IG0912.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701312);
                            obj_op.EnableControls(IG0812);

                            IG0701312.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701212);
        }


        private void IG0701312_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701312'", IG0701312.Text) == true)
                {
                    IG0701312.Focus();
                }
                else
                {

                    if (
                        IG070111.Text == "1" &&
                        IG070211.Text == "1" &&
                        IG070311.Text == "1" &&
                        IG070411.Text == "1" &&
                        IG070511.Text == "1" &&
                        IG070611.Text == "1" &&
                        IG070711.Text == "1" &&
                        IG070811.Text == "1" &&
                        IG070911.Text == "1" &&
                        IG0701011.Text == "1" &&
                        IG0701111.Text == "1" &&
                        IG0701312.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701312.Focus();
                    }
                    else
                    {
                        if (IG0701312.Text == "1")
                        {
                            obj_op.DisableControls(IG0812);
                            IG0912.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0812);
                            IG0812.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701312.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701312);
        }


        private void IG0812_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0812'", IG0812.Text) == true)
                {
                    IG0812.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0812.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0812);
        }


        private void IG0912_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0912'", IG0912.Text) == true)
                {
                    IG0912.Focus();
                }
                else
                {
                    if (IG0912.Text == "0")
                    {
                        obj_op.DisableControls(IG01012);
                        IG01112.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01012);
                        IG01012.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0912.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0912);
        }


        private void IG01012_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01012'", IG01012.Text) == true)
                {
                    IG01012.Focus();
                }
                else
                {
                    if (IG01012.Text == "1")
                    {
                        obj_op.DisableControls(IG01112);
                        obj_op.DisableControls(IG01212);

                    }
                    else
                    {
                        obj_op.EnableControls(IG01112);
                        obj_op.EnableControls(IG01212);

                    }


                    if (IG01112.Enabled == true)
                    {
                        IG01112.Focus();
                    }
                    else if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01012.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01012);
        }


        private void IG01112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01112'", IG01112.Text) == true)
                {
                    IG01112.Focus();
                }
                else
                {
                    if (IG01112.Text == "1")
                    {
                        obj_op.DisableControls(IG01212);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01212);
                    }


                    if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01112);
        }


        private void IG01212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01212'", IG01212.Text) == true)
                {
                    IG01212.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01212);
        }


        private void IG01312_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01312'", IG01312.Text) == true)
                {
                    IG01312.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01312.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01312);
        }


        private void IG01412_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01412'", IG01412.Text) == true)
                {
                    IG01412.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01412.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01412);
        }


        private void IG01512_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01512'", IG01512.Text) == true)
                {
                    IG01512.Focus();
                }
                else
                {
                    if (IG070113.Enabled == true)
                    {
                        IG070113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01512.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01512);
        }


        private void IG070113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070113'", IG070113.Text) == true)
                {
                    IG070113.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070113);
        }


        private void IG070213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070213'", IG070213.Text) == true)
                {
                    IG070213.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070213);
        }


        private void IG070313_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070313'", IG070313.Text) == true)
                {
                    IG070313.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070313.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070313);
        }


        private void IG070413_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070413'", IG070413.Text) == true)
                {
                    IG070413.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070413.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070413);
        }


        private void IG070513_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070513'", IG070513.Text) == true)
                {
                    IG070513.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070513.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070513);
        }


        private void IG070613_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070613'", IG070613.Text) == true)
                {
                    IG070613.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070613.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070613);
        }


        private void IG070713_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070713'", IG070713.Text) == true)
                {
                    IG070713.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070713.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070713);
        }


        private void IG070813_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070813'", IG070813.Text) == true)
                {
                    IG070813.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070813.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070813);
        }


        private void IG070913_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070913'", IG070913.Text) == true)
                {
                    IG070913.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070913.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070913);
        }


        private void IG0701013_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701013'", IG0701013.Text) == true)
                {
                    IG0701013.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701013.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701013);
        }


        private void IG0701113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701113'", IG0701113.Text) == true)
                {
                    IG0701113.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701113);
        }


        private void IG0701213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701213'", IG0701213.Text) == true)
                {
                    IG0701213.Focus();
                }
                else
                {

                    if (
                        IG070113.Text == "1" &&
                        IG070213.Text == "1" &&
                        IG070313.Text == "1" &&
                        IG070413.Text == "1" &&
                        IG070513.Text == "1" &&
                        IG070613.Text == "1" &&
                        IG070713.Text == "1" &&
                        IG070813.Text == "1" &&
                        IG070913.Text == "1" &&
                        IG0701013.Text == "1" &&
                        IG0701113.Text == "1" &&
                        IG0701213.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701213.Focus();
                    }
                    else
                    {
                        if (IG0701213.Text == "1")
                        {
                            obj_op.DisableControls(IG0701313);
                            obj_op.DisableControls(IG0813);

                            IG0913.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701313);
                            obj_op.EnableControls(IG0813);

                            IG0701313.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701213);
        }


        private void IG0701313_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701313'", IG0701313.Text) == true)
                {
                    IG0701313.Focus();
                }
                else
                {

                    if (
                        IG070113.Text == "1" &&
                        IG070213.Text == "1" &&
                        IG070313.Text == "1" &&
                        IG070413.Text == "1" &&
                        IG070513.Text == "1" &&
                        IG070613.Text == "1" &&
                        IG070713.Text == "1" &&
                        IG070813.Text == "1" &&
                        IG070913.Text == "1" &&
                        IG0701013.Text == "1" &&
                        IG0701113.Text == "1" &&
                        IG0701313.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701313.Focus();
                    }
                    else
                    {
                        if (IG0701313.Text == "1")
                        {
                            obj_op.DisableControls(IG0813);
                            IG0913.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0813);
                            IG0813.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701313.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701313);
        }


        private void IG0813_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0813'", IG0813.Text) == true)
                {
                    IG0813.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0813.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0813);
        }


        private void IG0913_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0913'", IG0913.Text) == true)
                {
                    IG0913.Focus();
                }
                else
                {
                    if (IG0913.Text == "0")
                    {
                        obj_op.DisableControls(IG01013);
                        IG01113.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01013);
                        IG01013.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0913.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0913);
        }


        private void IG01013_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01013'", IG01013.Text) == true)
                {
                    IG01013.Focus();
                }
                else
                {
                    if (IG01013.Text == "1")
                    {
                        obj_op.DisableControls(IG01113);
                        obj_op.DisableControls(IG01213);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01113);
                        obj_op.EnableControls(IG01213);
                    }


                    if (IG01113.Enabled == true)
                    {
                        IG01113.Focus();
                    }
                    else if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01013.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01013);
        }


        private void IG01113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01113'", IG01113.Text) == true)
                {
                    IG01113.Focus();
                }
                else
                {
                    if (IG01113.Text == "1")
                    {
                        obj_op.DisableControls(IG01213);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01213);
                    }



                    if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01113);
        }


        private void IG01213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01213'", IG01213.Text) == true)
                {
                    IG01213.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01213);
        }


        private void IG01313_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01313'", IG01313.Text) == true)
                {
                    IG01313.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01313.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01313);
        }


        private void IG01413_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01413'", IG01413.Text) == true)
                {
                    IG01413.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01413.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01413);
        }


        private void IG01513_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01513'", IG01513.Text) == true)
                {
                    IG01513.Focus();
                }
                else
                {
                    if (IG070114.Enabled == true)
                    {
                        IG070114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01513.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01513);
        }


        private void IG070114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070114'", IG070114.Text) == true)
                {
                    IG070114.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070114);
        }


        private void IG070214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070214'", IG070214.Text) == true)
                {
                    IG070214.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070214);
        }


        private void IG070314_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070314'", IG070314.Text) == true)
                {
                    IG070314.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070314.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070314);
        }


        private void IG070414_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070414'", IG070414.Text) == true)
                {
                    IG070414.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070414.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070414);
        }


        private void IG070514_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070514'", IG070514.Text) == true)
                {
                    IG070514.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070514.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070514);
        }


        private void IG070614_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070614'", IG070614.Text) == true)
                {
                    IG070614.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070614.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070614);
        }


        private void IG070714_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070714'", IG070714.Text) == true)
                {
                    IG070714.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070714.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070714);
        }


        private void IG070814_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070814'", IG070814.Text) == true)
                {
                    IG070814.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070814.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070814);
        }


        private void IG070914_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070914'", IG070914.Text) == true)
                {
                    IG070914.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070914.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070914);
        }


        private void IG0701014_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701014'", IG0701014.Text) == true)
                {
                    IG0701014.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701014.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701014);
        }


        private void IG0701114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701114'", IG0701114.Text) == true)
                {
                    IG0701114.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701114);
        }


        private void IG0701214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701214'", IG0701214.Text) == true)
                {
                    IG0701214.Focus();
                }
                else
                {

                    if (
                        IG070114.Text == "1" &&
                        IG070214.Text == "1" &&
                        IG070314.Text == "1" &&
                        IG070414.Text == "1" &&
                        IG070514.Text == "1" &&
                        IG070614.Text == "1" &&
                        IG070714.Text == "1" &&
                        IG070814.Text == "1" &&
                        IG070914.Text == "1" &&
                        IG0701014.Text == "1" &&
                        IG0701114.Text == "1" &&
                        IG0701214.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701214.Focus();
                    }
                    else
                    {
                        if (IG0701214.Text == "1")
                        {
                            obj_op.DisableControls(IG0701314);
                            obj_op.DisableControls(IG0814);

                            IG0914.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701314);
                            obj_op.EnableControls(IG0814);

                            IG0701314.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701214);
        }


        private void IG0701314_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701314'", IG0701314.Text) == true)
                {
                    IG0701314.Focus();
                }
                else
                {

                    if (
                        IG070114.Text == "1" &&
                        IG070214.Text == "1" &&
                        IG070314.Text == "1" &&
                        IG070414.Text == "1" &&
                        IG070514.Text == "1" &&
                        IG070614.Text == "1" &&
                        IG070714.Text == "1" &&
                        IG070814.Text == "1" &&
                        IG070914.Text == "1" &&
                        IG0701014.Text == "1" &&
                        IG0701114.Text == "1" &&
                        IG0701314.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701314.Focus();
                    }
                    else
                    {
                        if (IG0701314.Text == "1")
                        {
                            obj_op.DisableControls(IG0814);
                            IG0914.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0814);
                            IG0814.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701314.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701314);
        }


        private void IG0814_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0814'", IG0814.Text) == true)
                {
                    IG0814.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0814.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0814);
        }


        private void IG0914_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0914'", IG0914.Text) == true)
                {
                    IG0914.Focus();
                }
                else
                {
                    if (IG0914.Text == "0")
                    {
                        obj_op.DisableControls(IG01014);
                        IG01114.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01014);
                        IG01014.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0914.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0914);
        }


        private void IG01014_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01014'", IG01014.Text) == true)
                {
                    IG01014.Focus();
                }
                else
                {
                    if (IG01014.Text == "1")
                    {
                        obj_op.DisableControls(IG01114);
                        obj_op.DisableControls(IG01214);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01114);
                        obj_op.EnableControls(IG01214);
                    }


                    if (IG01114.Enabled == true)
                    {
                        IG01114.Focus();
                    }
                    else if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01014.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01014);
        }


        private void IG01114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01114'", IG01114.Text) == true)
                {
                    IG01114.Focus();
                }
                else
                {
                    if (IG01114.Text == "1")
                    {
                        obj_op.DisableControls(IG01214);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01214);
                    }


                    if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01114);
        }


        private void IG01214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01214'", IG01214.Text) == true)
                {
                    IG01214.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01214);
        }


        private void IG01314_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01314'", IG01314.Text) == true)
                {
                    IG01314.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01314.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01314);
        }


        private void IG01414_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01414'", IG01414.Text) == true)
                {
                    IG01414.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01414.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01414);
        }


        private void IG01514_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01514'", IG01514.Text) == true)
                {
                    IG01514.Focus();
                }
                else
                {
                    if (IG070115.Enabled == true)
                    {
                        IG070115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01514.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01514);
        }


        private void IG070115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070115'", IG070115.Text) == true)
                {
                    IG070115.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070115);
        }


        private void IG070215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070215'", IG070215.Text) == true)
                {
                    IG070215.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070215);
        }


        private void IG070315_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070315'", IG070315.Text) == true)
                {
                    IG070315.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070315.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070315);
        }


        private void IG070415_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070415'", IG070415.Text) == true)
                {
                    IG070415.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070415.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070415);
        }


        private void IG070515_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070515'", IG070515.Text) == true)
                {
                    IG070515.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070515.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070515);
        }


        private void IG070615_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070615'", IG070615.Text) == true)
                {
                    IG070615.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070615.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070615);
        }


        private void IG070715_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070715'", IG070715.Text) == true)
                {
                    IG070715.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070715.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070715);
        }


        private void IG070815_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070815'", IG070815.Text) == true)
                {
                    IG070815.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070815.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070815);
        }


        private void IG070915_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070915'", IG070915.Text) == true)
                {
                    IG070915.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070915.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070915);
        }


        private void IG0701015_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701015'", IG0701015.Text) == true)
                {
                    IG0701015.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701015.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701015);
        }


        private void IG0701115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701115'", IG0701115.Text) == true)
                {
                    IG0701115.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701115);
        }


        private void IG0701215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701215'", IG0701215.Text) == true)
                {
                    IG0701215.Focus();
                }
                else
                {

                    if (
                        IG070115.Text == "1" &&
                        IG070215.Text == "1" &&
                        IG070315.Text == "1" &&
                        IG070415.Text == "1" &&
                        IG070515.Text == "1" &&
                        IG070615.Text == "1" &&
                        IG070715.Text == "1" &&
                        IG070815.Text == "1" &&
                        IG070915.Text == "1" &&
                        IG0701015.Text == "1" &&
                        IG0701115.Text == "1" &&
                        IG0701215.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701215.Focus();
                    }
                    else
                    {
                        if (IG0701215.Text == "1")
                        {
                            obj_op.DisableControls(IG0701315);
                            obj_op.DisableControls(IG0815);

                            IG0915.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701315);
                            obj_op.EnableControls(IG0815);

                            IG0701315.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701215);
        }


        private void IG0701315_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701315'", IG0701315.Text) == true)
                {
                    IG0701315.Focus();
                }
                else
                {

                    if (
                        IG070115.Text == "1" &&
                        IG070215.Text == "1" &&
                        IG070315.Text == "1" &&
                        IG070415.Text == "1" &&
                        IG070515.Text == "1" &&
                        IG070615.Text == "1" &&
                        IG070715.Text == "1" &&
                        IG070815.Text == "1" &&
                        IG070915.Text == "1" &&
                        IG0701015.Text == "1" &&
                        IG0701115.Text == "1" &&
                        IG0701315.Text == "1"
                        )
                    {
                        MessageBox.Show("if all of the above options are 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701315.Focus();
                    }
                    else
                    {
                        if (IG0701315.Text == "1")
                        {
                            obj_op.DisableControls(IG0815);
                            IG0915.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0815);
                            IG0815.Focus();
                        }
                    }

                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701315.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701315);
        }


        private void IG0815_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0815'", IG0815.Text) == true)
                {
                    IG0815.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0815.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0815);
        }


        private void IG0915_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0915'", IG0915.Text) == true)
                {
                    IG0915.Focus();
                }
                else
                {
                    if (IG0915.Text == "0")
                    {
                        obj_op.DisableControls(IG01015);
                        IG01115.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IG01015);
                        IG01015.Focus();
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0915.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0915);
        }


        private void IG01015_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01015'", IG01015.Text) == true)
                {
                    IG01015.Focus();
                }
                else
                {
                    if (IG01015.Text == "1")
                    {
                        obj_op.DisableControls(IG01115);
                        obj_op.DisableControls(IG01215);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01115);
                        obj_op.EnableControls(IG01215);
                    }



                    if (IG01115.Enabled == true)
                    {
                        IG01115.Focus();
                    }
                    else if (IG01211.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }
                    else if (IG01212.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01212.Focus();
                    }
                    else if (IG01213.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01213.Focus();
                    }
                    else if (IG01214.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01214.Focus();
                    }
                    else if (IG01215.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01215.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01311.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01015.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01015);
        }


        private void IG01115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01115'", IG01115.Text) == true)
                {
                    IG01115.Focus();
                }
                else
                {
                    if (IG01115.Text == "1")
                    {
                        obj_op.DisableControls(IG01215);
                    }
                    else
                    {
                        obj_op.EnableControls(IG01215);
                    }


                    if (IG01211.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01211.Focus();
                    }
                    else if (IG01212.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01212.Focus();
                    }
                    else if (IG01213.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01213.Focus();
                    }
                    else if (IG01214.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01214.Focus();
                    }
                    else if (IG01215.Enabled == true)
                    {
                        tabControl1.SelectedIndex = 18;
                        IG01215.Focus();
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01115);
        }


        private void IG01215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01215'", IG01215.Text) == true)
                {
                    IG01215.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01215);
        }


        private void IG01315_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01315'", IG01315.Text) == true)
                {
                    IG01315.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01315.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01315);
        }


        private void IG01415_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01415'", IG01415.Text) == true)
                {
                    IG01415.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01415.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01415);
        }


        private void IG01515_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01515'", IG01515.Text) == true)
                {
                    IG01515.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01515.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01515);
        }


        private void IG160111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160111'", IG160111.Text) == true)
                {
                    IG160111.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160111);
        }


        private void IG160211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160211'", IG160211.Text) == true)
                {
                    IG160211.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160211);
        }


        private void IG160311_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160311'", IG160311.Text) == true)
                {
                    IG160311.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160311.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160311);
        }


        private void IG160411_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160411'", IG160411.Text) == true)
                {
                    IG160411.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160411.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160411);
        }


        private void IG160511_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160511'", IG160511.Text) == true)
                {
                    IG160511.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160511.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160511);
        }


        private void IG160611_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160611'", IG160611.Text) == true)
                {
                    IG160611.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160611.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160611);
        }


        private void IG160711_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160711'", IG160711.Text) == true)
                {
                    IG160711.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160711.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160711);
        }


        private void IG160811_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160811'", IG160811.Text) == true)
                {
                    IG160811.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160811.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160811);
        }


        private void IG160911_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160911'", IG160911.Text) == true)
                {
                    IG160911.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160911.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160911);
        }


        private void IG1601011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601011'", IG1601011.Text) == true)
                {
                    IG1601011.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601011.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601011);
        }


        private void IG1601111_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601111'", IG1601111.Text) == true)
                {
                    IG1601111.Focus();
                }
                else
                {
                    if (
                        IG160111.Text == "1" &&
                        IG160211.Text == "1" &&
                        IG160311.Text == "1" &&
                        IG160411.Text == "1" &&
                        IG160511.Text == "1" &&
                        IG160611.Text == "1" &&
                        IG160711.Text == "1" &&
                        IG160811.Text == "1" &&
                        IG160911.Text == "1" &&
                        IG1601011.Text == "1" &&
                        IG1601111.Text == "1"
                        )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601111.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601111.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601111);
        }


        private void IG1601211_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601211'", IG1601211.Text) == true)
                {
                    IG1601211.Focus();
                }
                else
                {
                    if (
                        IG160111.Text == "1" &&
                        IG160211.Text == "1" &&
                        IG160311.Text == "1" &&
                        IG160411.Text == "1" &&
                        IG160511.Text == "1" &&
                        IG160611.Text == "1" &&
                        IG160711.Text == "1" &&
                        IG160811.Text == "1" &&
                        IG160911.Text == "1" &&
                        IG1601011.Text == "1" &&
                        IG1601211.Text == "1"
                        )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601211.Focus();
                    }
                    else
                    {
                        if (IG01212.Enabled == true)
                        {
                            IG01212.Focus();
                        }
                        else if (IG01213.Enabled == true)
                        {
                            IG01213.Focus();
                        }
                        else if (IG01214.Enabled == true)
                        {
                            IG01214.Focus();
                        }
                        else if (IG01215.Enabled == true)
                        {
                            IG01215.Focus();
                        }
                        else if (IG01312.Enabled == true)
                        {
                            IG01312.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 9;
                            QCFUP02.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601211.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601211);
        }


        private void IG160112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160112'", IG160112.Text) == true)
                {
                    IG160112.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160112);
        }


        private void IG160212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160212'", IG160212.Text) == true)
                {
                    IG160212.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160212);
        }


        private void IG160312_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160312'", IG160312.Text) == true)
                {
                    IG160312.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160312.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160312);
        }


        private void IG160412_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160412'", IG160412.Text) == true)
                {
                    IG160412.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160412.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160412);
        }


        private void IG160512_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160512'", IG160512.Text) == true)
                {
                    IG160512.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160512.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160512);
        }


        private void IG160612_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160612'", IG160612.Text) == true)
                {
                    IG160612.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160612.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160612);
        }


        private void IG160712_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160712'", IG160712.Text) == true)
                {
                    IG160712.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160712.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160712);
        }


        private void IG160812_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160812'", IG160812.Text) == true)
                {
                    IG160812.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160812.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160812);
        }


        private void IG160912_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160912'", IG160912.Text) == true)
                {
                    IG160912.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160912.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160912);
        }


        private void IG1601012_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601012'", IG1601012.Text) == true)
                {
                    IG1601012.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601012.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601012);
        }


        private void IG1601112_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601112'", IG1601112.Text) == true)
                {
                    IG1601112.Focus();
                }
                else
                {
                    if (
                       IG160112.Text == "1" &&
                       IG160212.Text == "1" &&
                       IG160312.Text == "1" &&
                       IG160412.Text == "1" &&
                       IG160512.Text == "1" &&
                       IG160612.Text == "1" &&
                       IG160712.Text == "1" &&
                       IG160812.Text == "1" &&
                       IG160912.Text == "1" &&
                       IG1601012.Text == "1" &&
                       IG1601112.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601112.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601112.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601112);
        }


        private void IG1601212_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601212'", IG1601212.Text) == true)
                {
                    IG1601212.Focus();
                }
                else
                {

                    if (
                       IG160112.Text == "1" &&
                       IG160212.Text == "1" &&
                       IG160312.Text == "1" &&
                       IG160412.Text == "1" &&
                       IG160512.Text == "1" &&
                       IG160612.Text == "1" &&
                       IG160712.Text == "1" &&
                       IG160812.Text == "1" &&
                       IG160912.Text == "1" &&
                       IG1601012.Text == "1" &&
                       IG1601212.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601212.Focus();
                    }
                    else
                    {
                        if (IG01213.Enabled == true)
                        {
                            IG01213.Focus();
                        }
                        else if (IG01214.Enabled == true)
                        {
                            IG01214.Focus();
                        }
                        else if (IG01215.Enabled == true)
                        {
                            IG01215.Focus();
                        }
                        else if (IG01313.Enabled == true)
                        {
                            IG01313.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 9;
                            QCFUP02.Focus();
                        }
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601212.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601212);
        }


        private void IG160113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160113'", IG160113.Text) == true)
                {
                    IG160113.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160113);
        }


        private void IG160213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160213'", IG160213.Text) == true)
                {
                    IG160213.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160213);
        }


        private void IG160313_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160313'", IG160313.Text) == true)
                {
                    IG160313.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160313.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160313);
        }


        private void IG160413_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160413'", IG160413.Text) == true)
                {
                    IG160413.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160413.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160413);
        }


        private void IG160513_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160513'", IG160513.Text) == true)
                {
                    IG160513.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160513.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160513);
        }


        private void IG160613_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160613'", IG160613.Text) == true)
                {
                    IG160613.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160613.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160613);
        }


        private void IG160713_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160713'", IG160713.Text) == true)
                {
                    IG160713.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160713.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160713);
        }


        private void IG160813_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160813'", IG160813.Text) == true)
                {
                    IG160813.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160813.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160813);
        }


        private void IG160913_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160913'", IG160913.Text) == true)
                {
                    IG160913.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160913.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160913);
        }


        private void IG1601013_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601013'", IG1601013.Text) == true)
                {
                    IG1601013.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601013.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601013);
        }


        private void IG1601113_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601113'", IG1601113.Text) == true)
                {
                    IG1601113.Focus();
                }
                else
                {
                    if (
                       IG160113.Text == "1" &&
                       IG160213.Text == "1" &&
                       IG160313.Text == "1" &&
                       IG160413.Text == "1" &&
                       IG160513.Text == "1" &&
                       IG160613.Text == "1" &&
                       IG160713.Text == "1" &&
                       IG160813.Text == "1" &&
                       IG160913.Text == "1" &&
                       IG1601013.Text == "1" &&
                       IG1601113.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601113.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601113.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601113);
        }


        private void IG1601213_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601213'", IG1601213.Text) == true)
                {
                    IG1601213.Focus();
                }
                else
                {

                    if (
                      IG160113.Text == "1" &&
                      IG160213.Text == "1" &&
                      IG160313.Text == "1" &&
                      IG160413.Text == "1" &&
                      IG160513.Text == "1" &&
                      IG160613.Text == "1" &&
                      IG160713.Text == "1" &&
                      IG160813.Text == "1" &&
                      IG160913.Text == "1" &&
                      IG1601013.Text == "1" &&
                      IG1601213.Text == "1"
                      )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601213.Focus();
                    }
                    else
                    {
                        if (IG01214.Enabled == true)
                        {
                            IG01214.Focus();
                        }
                        else if (IG01215.Enabled == true)
                        {
                            IG01215.Focus();
                        }
                        else if (IG01314.Enabled == true)
                        {
                            IG01314.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 9;
                            QCFUP02.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601213.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601213);
        }


        private void IG160114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160114'", IG160114.Text) == true)
                {
                    IG160114.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160114);
        }


        private void IG160214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160214'", IG160214.Text) == true)
                {
                    IG160214.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160214);
        }


        private void IG160314_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160314'", IG160314.Text) == true)
                {
                    IG160314.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160314.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160314);
        }


        private void IG160414_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160414'", IG160414.Text) == true)
                {
                    IG160414.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160414.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160414);
        }


        private void IG160514_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160514'", IG160514.Text) == true)
                {
                    IG160514.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160514.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160514);
        }


        private void IG160614_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160614'", IG160614.Text) == true)
                {
                    IG160614.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160614.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160614);
        }


        private void IG160714_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160714'", IG160714.Text) == true)
                {
                    IG160714.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160714.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160714);
        }


        private void IG160814_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160814'", IG160814.Text) == true)
                {
                    IG160814.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160814.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160814);
        }


        private void IG160914_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160914'", IG160914.Text) == true)
                {
                    IG160914.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160914.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160914);
        }


        private void IG1601014_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601014'", IG1601014.Text) == true)
                {
                    IG1601014.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601014.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601014);
        }


        private void IG1601114_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601114'", IG1601114.Text) == true)
                {
                    IG1601114.Focus();
                }
                else
                {
                    if (
                       IG160114.Text == "1" &&
                       IG160214.Text == "1" &&
                       IG160314.Text == "1" &&
                       IG160414.Text == "1" &&
                       IG160514.Text == "1" &&
                       IG160614.Text == "1" &&
                       IG160714.Text == "1" &&
                       IG160814.Text == "1" &&
                       IG160914.Text == "1" &&
                       IG1601014.Text == "1" &&
                       IG1601114.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601114.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601114.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601114);
        }


        private void IG1601214_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601214'", IG1601214.Text) == true)
                {
                    IG1601214.Focus();
                }
                else
                {
                    if (
                      IG160114.Text == "1" &&
                      IG160214.Text == "1" &&
                      IG160314.Text == "1" &&
                      IG160414.Text == "1" &&
                      IG160514.Text == "1" &&
                      IG160614.Text == "1" &&
                      IG160714.Text == "1" &&
                      IG160814.Text == "1" &&
                      IG160914.Text == "1" &&
                      IG1601014.Text == "1" &&
                      IG1601214.Text == "1"
                      )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601214.Focus();
                    }
                    else
                    {
                        if (IG01215.Enabled == true)
                        {
                            IG01215.Focus();
                        }
                        else if (IG01315.Enabled == true)
                        {
                            IG01315.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 9;
                            QCFUP02.Focus();
                        }
                    }


                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601214.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601214);
        }


        private void IG160115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160115'", IG160115.Text) == true)
                {
                    IG160115.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160115);
        }


        private void IG160215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160215'", IG160215.Text) == true)
                {
                    IG160215.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160215);
        }


        private void IG160315_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160315'", IG160315.Text) == true)
                {
                    IG160315.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160315.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160315);
        }


        private void IG160415_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160415'", IG160415.Text) == true)
                {
                    IG160415.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160415.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160415);
        }


        private void IG160515_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160515'", IG160515.Text) == true)
                {
                    IG160515.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160515.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160515);
        }


        private void IG160615_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160615'", IG160615.Text) == true)
                {
                    IG160615.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160615.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160615);
        }


        private void IG160715_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160715'", IG160715.Text) == true)
                {
                    IG160715.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160715.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160715);
        }


        private void IG160815_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160815'", IG160815.Text) == true)
                {
                    IG160815.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160815.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160815);
        }


        private void IG160915_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG160915'", IG160915.Text) == true)
                {
                    IG160915.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG160915.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG160915);
        }


        private void IG1601015_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601015'", IG1601015.Text) == true)
                {
                    IG1601015.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601015.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601015);
        }


        private void IG1601115_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601115'", IG1601115.Text) == true)
                {
                    IG1601115.Focus();
                }
                else
                {
                    if (
                       IG160115.Text == "1" &&
                       IG160215.Text == "1" &&
                       IG160315.Text == "1" &&
                       IG160415.Text == "1" &&
                       IG160515.Text == "1" &&
                       IG160615.Text == "1" &&
                       IG160715.Text == "1" &&
                       IG160815.Text == "1" &&
                       IG160915.Text == "1" &&
                       IG1601015.Text == "1" &&
                       IG1601115.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601115.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601115.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601115);
        }


        private void IG1601215_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG1601215'", IG1601215.Text) == true)
                {
                    IG1601215.Focus();
                }
                else
                {
                    if (
                       IG160115.Text == "1" &&
                       IG160215.Text == "1" &&
                       IG160315.Text == "1" &&
                       IG160415.Text == "1" &&
                       IG160515.Text == "1" &&
                       IG160615.Text == "1" &&
                       IG160715.Text == "1" &&
                       IG160815.Text == "1" &&
                       IG160915.Text == "1" &&
                       IG1601015.Text == "1" &&
                       IG1601215.Text == "1"
                       )
                    {
                        MessageBox.Show("if any of the above options 1 - Yes then not applicable cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG1601215.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 9;
                        QCFUP02.Focus();
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG1601215.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG1601215);
        }
        private void ChangeColorLabel(int a, Label lbl)
        {
            //if (a == 1)
            //{
            //    lbl.BackColor = Color.FromName("Aqua");
            //    //lbl.Width = 350;            
            //    //lbl.Height = 75;            
            //}
            //else
            //{
            //    lbl.BackColor = Color.FromName("Control");
            //    //lbl.Width = 200;            
            //    //lbl.Height = 75;            
            //}

        }
        private void IA01_Enter(object sender, EventArgs e)
        {
            IA01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IA01);
            IA01.SelectAll();
        }

        private void IA02_Enter(object sender, EventArgs e)
        {
            IA02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IA02);
            IA02.SelectAll();
        }

        private void IA03_Enter(object sender, EventArgs e)
        {
            IA03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IA03);
            IA03.SelectAll();
        }

        private void IA04_Enter(object sender, EventArgs e)
        {
            IA04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IA04);
            IA04.SelectAll();
        }

        private void IA05_Enter(object sender, EventArgs e)
        {
            IA05.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IA05);
            IA05.SelectAll();
        }

        private void IB01_Enter(object sender, EventArgs e)
        {
            IB01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB01);
            IB01.SelectAll();
        }

        private void IB02_Enter(object sender, EventArgs e)
        {
            IB02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB02);
            IB02.SelectAll();
        }

        private void IB03_Enter(object sender, EventArgs e)
        {
            IB03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB03);
            IB03.SelectAll();
        }

        private void IB04_Enter(object sender, EventArgs e)
        {
            IB04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB04);
            IB04.SelectAll();
        }

        private void IB05_Enter(object sender, EventArgs e)
        {
            IB05.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB05);
            IB05.SelectAll();
        }

        private void IB06_Enter(object sender, EventArgs e)
        {
            IB06.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB06);
            IB06.SelectAll();
        }

        private void IB07_Enter(object sender, EventArgs e)
        {
            IB07.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB07);
            IB07.SelectAll();
        }

        private void IB08_Enter(object sender, EventArgs e)
        {
            IB08.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB08);
            IB08.SelectAll();
        }


        private void IB0901_Enter(object sender, EventArgs e)
        {
            IB0901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB0901);
            IB0901.SelectAll();
        }

        private void IB0902_Enter(object sender, EventArgs e)
        {
            IB0902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB0902);
            IB0902.SelectAll();
        }

        private void IB0903_Enter(object sender, EventArgs e)
        {
            IB0903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB0903);
            IB0903.SelectAll();
        }

        private void IB0996_Enter(object sender, EventArgs e)
        {
            IB0996.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IB0996);
            IB0996.SelectAll();
        }

        private void IC01_Enter(object sender, EventArgs e)
        {
            IC01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01);
            IC01.SelectAll();
        }

        private void IC02_Enter(object sender, EventArgs e)
        {
            IC02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC02);
            IC02.SelectAll();
        }

        private void IC03_Enter(object sender, EventArgs e)
        {
            IC03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC03);
            IC03.SelectAll();
        }

        private void IC04_Enter(object sender, EventArgs e)
        {
            IC04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC04);
            IC04.SelectAll();
        }

        private void IC05_Enter(object sender, EventArgs e)
        {
            IC05.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC05);
            IC05.SelectAll();
        }

        private void ckkBaby1_Enter(object sender, EventArgs e)
        {
            chkBaby1.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby1);
            chkBaby1.SelectAll();
        }

        private void IC0601_Enter(object sender, EventArgs e)
        {
            IC0601.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0601);
            IC0601.SelectAll();
        }

        private void IC0701_Enter(object sender, EventArgs e)
        {
            IC0701.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0701);
            IC0701.SelectAll();
        }

        private void IC0801_Enter(object sender, EventArgs e)
        {
            IC0801.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0801);
            IC0801.SelectAll();
        }

        private void IC0901_Enter(object sender, EventArgs e)
        {
            IC0901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0901);
            IC0901.SelectAll();
        }

        private void IC01001_Enter(object sender, EventArgs e)
        {
            IC01001.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01001);
            IC01001.SelectAll();
        }

        private void IC01101_Enter(object sender, EventArgs e)
        {
            IC01101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01101);
            IC01101.SelectAll();
        }

        private void ckkBaby2_Enter(object sender, EventArgs e)
        {
            chkBaby2.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby2);
            chkBaby2.SelectAll();
        }

        private void IC0602_Enter(object sender, EventArgs e)
        {
            IC0602.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0602);
            IC0602.SelectAll();
        }

        private void IC0702_Enter(object sender, EventArgs e)
        {
            IC0702.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0702);
            IC0702.SelectAll();
        }

        private void IC0802_Enter(object sender, EventArgs e)
        {
            IC0802.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0802);
            IC0802.SelectAll();
        }

        private void IC0902_Enter(object sender, EventArgs e)
        {
            IC0902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0902);
            IC0902.SelectAll();
        }

        private void IC01002_Enter(object sender, EventArgs e)
        {
            IC01002.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01002);
            IC01002.SelectAll();
        }

        private void IC01102_Enter(object sender, EventArgs e)
        {
            IC01102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01102);
            IC01102.SelectAll();
        }

        private void ckkBaby3_Enter(object sender, EventArgs e)
        {
            chkBaby3.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby3);
            chkBaby3.SelectAll();
        }

        private void IC0603_Enter(object sender, EventArgs e)
        {
            IC0603.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0603);
            IC0603.SelectAll();
        }

        private void IC0703_Enter(object sender, EventArgs e)
        {
            IC0703.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0703);
            IC0703.SelectAll();
        }

        private void IC0803_Enter(object sender, EventArgs e)
        {
            IC0803.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0803);
            IC0803.SelectAll();
        }

        private void IC0903_Enter(object sender, EventArgs e)
        {
            IC0903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0903);
            IC0903.SelectAll();
        }

        private void IC01003_Enter(object sender, EventArgs e)
        {
            IC01003.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01003);
            IC01003.SelectAll();
        }

        private void IC01103_Enter(object sender, EventArgs e)
        {
            IC01103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01103);
            IC01103.SelectAll();
        }

        private void ckkBaby4_Enter(object sender, EventArgs e)
        {
            chkBaby4.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby4);
            chkBaby4.SelectAll();
        }

        private void IC0604_Enter(object sender, EventArgs e)
        {
            IC0604.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0604);
            IC0604.SelectAll();
        }

        private void IC0704_Enter(object sender, EventArgs e)
        {
            IC0704.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0704);
            IC0704.SelectAll();
        }

        private void IC0804_Enter(object sender, EventArgs e)
        {
            IC0804.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0804);
            IC0804.SelectAll();
        }

        private void IC0904_Enter(object sender, EventArgs e)
        {
            IC0904.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0904);
            IC0904.SelectAll();
        }

        private void IC01004_Enter(object sender, EventArgs e)
        {
            IC01004.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01004);
            IC01004.SelectAll();
        }

        private void IC01104_Enter(object sender, EventArgs e)
        {
            IC01104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01104);
            IC01104.SelectAll();
        }

        private void ID01_Enter(object sender, EventArgs e)
        {
            ID01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ID01);
            ID01.SelectAll();
        }

        private void ID02_Enter(object sender, EventArgs e)
        {
            ID02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ID02);
            ID02.SelectAll();
        }

        private void ID03_Enter(object sender, EventArgs e)
        {
            ID03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ID03);
            ID03.SelectAll();
        }

        private void ID04_Enter(object sender, EventArgs e)
        {
            ID04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ID04);
            ID04.SelectAll();
        }

        private void IE01_Enter(object sender, EventArgs e)
        {
            IE01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE01);
            IE01.SelectAll();
        }

        private void IE02_Enter(object sender, EventArgs e)
        {
            IE02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE02);
            IE02.SelectAll();
        }

        private void IE03_Enter(object sender, EventArgs e)
        {
            IE03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE03);
            IE03.SelectAll();
        }



        private void chkHHMem1_Enter(object sender, EventArgs e)
        {
            chkHHMem1.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkHHMem1);
            chkHHMem1.SelectAll();
        }



        private void chkHHMem2_Enter(object sender, EventArgs e)
        {
            chkHHMem2.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkHHMem2);
            chkHHMem2.SelectAll();
        }



        private void chkHHMem3_Enter(object sender, EventArgs e)
        {
            chkHHMem3.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkHHMem3);
            chkHHMem3.SelectAll();
        }



        private void chkHHMem4_Enter(object sender, EventArgs e)
        {
            chkHHMem4.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkHHMem4);
            chkHHMem4.SelectAll();
        }



        private void IE0801_Enter(object sender, EventArgs e)
        {
            IE0801.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0801);
            IE0801.SelectAll();
        }

        private void IE0901_Enter(object sender, EventArgs e)
        {
            IE0901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0901);
            IE0901.SelectAll();
        }

        private void IE0802_Enter(object sender, EventArgs e)
        {
            IE0802.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0802);
            IE0802.SelectAll();
        }

        private void IE0902_Enter(object sender, EventArgs e)
        {
            IE0902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0902);
            IE0902.SelectAll();
        }

        private void IE0803_Enter(object sender, EventArgs e)
        {
            IE0803.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0803);
            IE0803.SelectAll();
        }

        private void IE0903_Enter(object sender, EventArgs e)
        {
            IE0903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0903);
            IE0903.SelectAll();
        }

        private void IE0804_Enter(object sender, EventArgs e)
        {
            IE0804.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0804);
            IE0804.SelectAll();
        }

        private void IE0904_Enter(object sender, EventArgs e)
        {
            IE0904.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0904);
            IE0904.SelectAll();
        }

        private void IF01_Enter(object sender, EventArgs e)
        {
            IF01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF01);
            IF01.SelectAll();
        }

        private void IF02_Enter(object sender, EventArgs e)
        {
            IF02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF02);
            IF02.SelectAll();
        }

        private void IF03_Enter(object sender, EventArgs e)
        {
            IF03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF03);
            IF03.SelectAll();
        }

        private void IF04_Enter(object sender, EventArgs e)
        {
            IF04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF04);
            IF04.SelectAll();
        }

        private void chkPW1_Enter(object sender, EventArgs e)
        {
            chkPW1.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkPW1);
            chkPW1.SelectAll();
        }

        private void IF0601_Enter(object sender, EventArgs e)
        {
            IF0601.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF0601);
            IF0601.SelectAll();
        }

        private void chkPW2_Enter(object sender, EventArgs e)
        {
            chkPW2.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkPW2);
            chkPW2.SelectAll();
        }

        private void IF0602_Enter(object sender, EventArgs e)
        {
            IF0602.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF0602);
            IF0602.SelectAll();
        }

        private void chkPW3_Enter(object sender, EventArgs e)
        {
            chkPW3.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkPW3);
            chkPW3.SelectAll();
        }

        private void IF0603_Enter(object sender, EventArgs e)
        {
            IF0603.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF0603);
            IF0603.SelectAll();
        }

        private void chkPW4_Enter(object sender, EventArgs e)
        {
            chkPW4.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkPW4);
            chkPW4.SelectAll();
        }

        private void IF0604_Enter(object sender, EventArgs e)
        {
            IF0604.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IF0604);
            IF0604.SelectAll();
        }

        private void IG01_Enter(object sender, EventArgs e)
        {
            IG01.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01);
            IG01.SelectAll();
        }

        private void IG02_Enter(object sender, EventArgs e)
        {
            IG02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG02);
            IG02.SelectAll();
        }

        private void IG0301_Enter(object sender, EventArgs e)
        {
            IG0301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0301);
            IG0301.SelectAll();
        }

        private void IG0302_Enter(object sender, EventArgs e)
        {
            IG0302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0302);
            IG0302.SelectAll();
        }

        private void IG0303_Enter(object sender, EventArgs e)
        {
            IG0303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0303);
            IG0303.SelectAll();
        }

        private void IG0304_Enter(object sender, EventArgs e)
        {
            IG0304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0304);
            IG0304.SelectAll();
        }

        private void IG0305_Enter(object sender, EventArgs e)
        {
            IG0305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0305);
            IG0305.SelectAll();
        }

        private void IG0306_Enter(object sender, EventArgs e)
        {
            IG0306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0306);
            IG0306.SelectAll();
        }

        private void IG0307_Enter(object sender, EventArgs e)
        {
            IG0307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0307);
            IG0307.SelectAll();
        }

        private void IG0308_Enter(object sender, EventArgs e)
        {
            IG0308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0308);
            IG0308.SelectAll();
        }

        private void IG0309_Enter(object sender, EventArgs e)
        {
            IG0309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0309);
            IG0309.SelectAll();
        }

        private void IG03010_Enter(object sender, EventArgs e)
        {
            IG03010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG03010);
            IG03010.SelectAll();
        }

        private void chkMember1_Enter(object sender, EventArgs e)
        {
            chkMember1.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember1);
            chkMember1.SelectAll();
        }

        private void IG0401_Enter(object sender, EventArgs e)
        {
            IG0401.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0401);
            IG0401.SelectAll();
        }

        private void IG0501_Enter(object sender, EventArgs e)
        {
            IG0501.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0501);
            IG0501.SelectAll();
        }

        private void IG060101_Enter(object sender, EventArgs e)
        {
            IG060101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060101);
            IG060101.SelectAll();
        }

        private void IG060201_Enter(object sender, EventArgs e)
        {
            IG060201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060201);
            IG060201.SelectAll();
        }

        private void IG060301_Enter(object sender, EventArgs e)
        {
            IG060301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060301);
            IG060301.SelectAll();
        }

        private void IG060401_Enter(object sender, EventArgs e)
        {
            IG060401.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060401);
            IG060401.SelectAll();
        }

        private void IG060501_Enter(object sender, EventArgs e)
        {
            IG060501.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060501);
            IG060501.SelectAll();
        }

        private void IG070101_Enter(object sender, EventArgs e)
        {
            IG070101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070101);
            IG070101.SelectAll();
        }

        private void IG070201_Enter(object sender, EventArgs e)
        {
            IG070201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070201);
            IG070201.SelectAll();
        }

        private void IG070301_Enter(object sender, EventArgs e)
        {
            IG070301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070301);
            IG070301.SelectAll();
        }

        private void IG070401_Enter(object sender, EventArgs e)
        {
            IG070401.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070401);
            IG070401.SelectAll();
        }

        private void chkMember2_Enter(object sender, EventArgs e)
        {
            chkMember2.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember2);
            chkMember2.SelectAll();
        }

        private void IG0402_Enter(object sender, EventArgs e)
        {
            IG0402.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0402);
            IG0402.SelectAll();
        }

        private void IG0502_Enter(object sender, EventArgs e)
        {
            IG0502.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0502);
            IG0502.SelectAll();
        }

        private void IG060102_Enter(object sender, EventArgs e)
        {
            IG060102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060102);
            IG060102.SelectAll();
        }

        private void IG060202_Enter(object sender, EventArgs e)
        {
            IG060202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060202);
            IG060202.SelectAll();
        }

        private void IG060302_Enter(object sender, EventArgs e)
        {
            IG060302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060302);
            IG060302.SelectAll();
        }

        private void IG060402_Enter(object sender, EventArgs e)
        {
            IG060402.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060402);
            IG060402.SelectAll();
        }

        private void IG060502_Enter(object sender, EventArgs e)
        {
            IG060502.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060502);
            IG060502.SelectAll();
        }

        private void IG070102_Enter(object sender, EventArgs e)
        {
            IG070102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070102);
            IG070102.SelectAll();
        }

        private void IG070202_Enter(object sender, EventArgs e)
        {
            IG070202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070202);
            IG070202.SelectAll();
        }

        private void IG070302_Enter(object sender, EventArgs e)
        {
            IG070302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070302);
            IG070302.SelectAll();
        }

        private void IG070402_Enter(object sender, EventArgs e)
        {
            IG070402.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070402);
            IG070402.SelectAll();
        }

        private void chkMember3_Enter(object sender, EventArgs e)
        {
            chkMember3.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember3);
            chkMember3.SelectAll();
        }

        private void IG0403_Enter(object sender, EventArgs e)
        {
            IG0403.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0403);
            IG0403.SelectAll();
        }

        private void IG0503_Enter(object sender, EventArgs e)
        {
            IG0503.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0503);
            IG0503.SelectAll();
        }

        private void IG060103_Enter(object sender, EventArgs e)
        {
            IG060103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060103);
            IG060103.SelectAll();
        }

        private void IG060203_Enter(object sender, EventArgs e)
        {
            IG060203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060203);
            IG060203.SelectAll();
        }

        private void IG060303_Enter(object sender, EventArgs e)
        {
            IG060303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060303);
            IG060303.SelectAll();
        }

        private void IG060403_Enter(object sender, EventArgs e)
        {
            IG060403.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060403);
            IG060403.SelectAll();
        }

        private void IG060503_Enter(object sender, EventArgs e)
        {
            IG060503.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060503);
            IG060503.SelectAll();
        }

        private void IG070103_Enter(object sender, EventArgs e)
        {
            IG070103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070103);
            IG070103.SelectAll();
        }

        private void IG070203_Enter(object sender, EventArgs e)
        {
            IG070203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070203);
            IG070203.SelectAll();
        }

        private void IG070303_Enter(object sender, EventArgs e)
        {
            IG070303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070303);
            IG070303.SelectAll();
        }

        private void IG070403_Enter(object sender, EventArgs e)
        {
            IG070403.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070403);
            IG070403.SelectAll();
        }

        private void chkMember4_Enter(object sender, EventArgs e)
        {
            chkMember4.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember4);
            chkMember4.SelectAll();
        }

        private void IG0404_Enter(object sender, EventArgs e)
        {
            IG0404.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0404);
            IG0404.SelectAll();
        }

        private void IG0504_Enter(object sender, EventArgs e)
        {
            IG0504.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0504);
            IG0504.SelectAll();
        }

        private void IG060104_Enter(object sender, EventArgs e)
        {
            IG060104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060104);
            IG060104.SelectAll();
        }

        private void IG060204_Enter(object sender, EventArgs e)
        {
            IG060204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060204);
            IG060204.SelectAll();
        }

        private void IG060304_Enter(object sender, EventArgs e)
        {
            IG060304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060304);
            IG060304.SelectAll();
        }

        private void IG060404_Enter(object sender, EventArgs e)
        {
            IG060404.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060404);
            IG060404.SelectAll();
        }

        private void IG060504_Enter(object sender, EventArgs e)
        {
            IG060504.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060504);
            IG060504.SelectAll();
        }

        private void IG070104_Enter(object sender, EventArgs e)
        {
            IG070104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070104);
            IG070104.SelectAll();
        }

        private void IG070204_Enter(object sender, EventArgs e)
        {
            IG070204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070204);
            IG070204.SelectAll();
        }

        private void IG070304_Enter(object sender, EventArgs e)
        {
            IG070304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070304);
            IG070304.SelectAll();
        }

        private void IG070404_Enter(object sender, EventArgs e)
        {
            IG070404.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070404);
            IG070404.SelectAll();
        }

        private void chkMember5_Enter(object sender, EventArgs e)
        {
            chkMember5.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember5);
            chkMember5.SelectAll();
        }

        private void IG0405_Enter(object sender, EventArgs e)
        {
            IG0405.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0405);
            IG0405.SelectAll();
        }

        private void IG0505_Enter(object sender, EventArgs e)
        {
            IG0505.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0505);
            IG0505.SelectAll();
        }

        private void IG060105_Enter(object sender, EventArgs e)
        {
            IG060105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060105);
            IG060105.SelectAll();
        }

        private void IG060205_Enter(object sender, EventArgs e)
        {
            IG060205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060205);
            IG060205.SelectAll();
        }

        private void IG060305_Enter(object sender, EventArgs e)
        {
            IG060305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060305);
            IG060305.SelectAll();
        }

        private void IG060405_Enter(object sender, EventArgs e)
        {
            IG060405.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060405);
            IG060405.SelectAll();
        }

        private void IG060505_Enter(object sender, EventArgs e)
        {
            IG060505.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060505);
            IG060505.SelectAll();
        }

        private void IG070105_Enter(object sender, EventArgs e)
        {
            IG070105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070105);
            IG070105.SelectAll();
        }

        private void IG070205_Enter(object sender, EventArgs e)
        {
            IG070205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070205);
            IG070205.SelectAll();
        }

        private void IG070305_Enter(object sender, EventArgs e)
        {
            IG070305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070305);
            IG070305.SelectAll();
        }

        private void IG070405_Enter(object sender, EventArgs e)
        {
            IG070405.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070405);
            IG070405.SelectAll();
        }

        private void IG070501_Enter(object sender, EventArgs e)
        {
            IG070501.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070501);
            IG070501.SelectAll();
        }

        private void IG070601_Enter(object sender, EventArgs e)
        {
            IG070601.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070601);
            IG070601.SelectAll();
        }

        private void IG070701_Enter(object sender, EventArgs e)
        {
            IG070701.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070701);
            IG070701.SelectAll();
        }

        private void IG070801_Enter(object sender, EventArgs e)
        {
            IG070801.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070801);
            IG070801.SelectAll();
        }

        private void IG070901_Enter(object sender, EventArgs e)
        {
            IG070901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070901);
            IG070901.SelectAll();
        }

        private void IG0701001_Enter(object sender, EventArgs e)
        {
            IG0701001.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701001);
            IG0701001.SelectAll();
        }

        private void IG0701101_Enter(object sender, EventArgs e)
        {
            IG0701101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701101);
            IG0701101.SelectAll();
        }

        private void IG0701201_Enter(object sender, EventArgs e)
        {
            IG0701201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701201);
            IG0701201.SelectAll();
        }

        private void IG0701301_Enter(object sender, EventArgs e)
        {
            IG0701301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701301);
            IG0701301.SelectAll();
        }

        private void IG0801_Enter(object sender, EventArgs e)
        {
            IG0801.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0801);
            IG0801.SelectAll();
        }

        private void IG0901_Enter(object sender, EventArgs e)
        {
            IG0901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0901);
            IG0901.SelectAll();
        }

        private void IG01001_Enter(object sender, EventArgs e)
        {
            IG01001.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01001);
            IG01001.SelectAll();
        }

        private void IG01101_Enter(object sender, EventArgs e)
        {
            IG01101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01101);
            IG01101.SelectAll();
        }

        private void IG01201_Enter(object sender, EventArgs e)
        {
            IG01201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01201);
            IG01201.SelectAll();
        }

        private void IG01301_Enter(object sender, EventArgs e)
        {
            IG01301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01301);
            IG01301.SelectAll();
        }

        private void IG01401_Enter(object sender, EventArgs e)
        {
            IG01401.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01401);
            IG01401.SelectAll();
        }

        private void IG01501_Enter(object sender, EventArgs e)
        {
            IG01501.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01501);
            IG01501.SelectAll();
        }

        private void IG160101_Enter(object sender, EventArgs e)
        {
            IG160101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160101);
            IG160101.SelectAll();
        }

        private void IG160201_Enter(object sender, EventArgs e)
        {
            IG160201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160201);
            IG160201.SelectAll();
        }

        private void IG160301_Enter(object sender, EventArgs e)
        {
            IG160301.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160301);
            IG160301.SelectAll();
        }

        private void IG160401_Enter(object sender, EventArgs e)
        {
            IG160401.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160401);
            IG160401.SelectAll();
        }

        private void IG160501_Enter(object sender, EventArgs e)
        {
            IG160501.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160501);
            IG160501.SelectAll();
        }

        private void IG160601_Enter(object sender, EventArgs e)
        {
            IG160601.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160601);
            IG160601.SelectAll();
        }

        private void IG160701_Enter(object sender, EventArgs e)
        {
            IG160701.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160701);
            IG160701.SelectAll();
        }

        private void IG160801_Enter(object sender, EventArgs e)
        {
            IG160801.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160801);
            IG160801.SelectAll();
        }

        private void IG160901_Enter(object sender, EventArgs e)
        {
            IG160901.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160901);
            IG160901.SelectAll();
        }

        private void IG1601001_Enter(object sender, EventArgs e)
        {
            IG1601001.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601001);
            IG1601001.SelectAll();
        }

        private void IG1601101_Enter(object sender, EventArgs e)
        {
            IG1601101.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601101);
            IG1601101.SelectAll();
        }

        private void IG1601201_Enter(object sender, EventArgs e)
        {
            IG1601201.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601201);
            IG1601201.SelectAll();
        }

        private void IG070502_Enter(object sender, EventArgs e)
        {
            IG070502.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070502);
            IG070502.SelectAll();
        }

        private void IG070602_Enter(object sender, EventArgs e)
        {
            IG070602.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070602);
            IG070602.SelectAll();
        }

        private void IG070702_Enter(object sender, EventArgs e)
        {
            IG070702.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070702);
            IG070702.SelectAll();
        }

        private void IG070802_Enter(object sender, EventArgs e)
        {
            IG070802.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070802);
            IG070802.SelectAll();
        }

        private void IG070902_Enter(object sender, EventArgs e)
        {
            IG070902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070902);
            IG070902.SelectAll();
        }

        private void IG0701002_Enter(object sender, EventArgs e)
        {
            IG0701002.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701002);
            IG0701002.SelectAll();
        }

        private void IG0701102_Enter(object sender, EventArgs e)
        {
            IG0701102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701102);
            IG0701102.SelectAll();
        }

        private void IG0701202_Enter(object sender, EventArgs e)
        {
            IG0701202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701202);
            IG0701202.SelectAll();
        }

        private void IG0701302_Enter(object sender, EventArgs e)
        {
            IG0701302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701302);
            IG0701302.SelectAll();
        }

        private void IG0802_Enter(object sender, EventArgs e)
        {
            IG0802.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0802);
            IG0802.SelectAll();
        }

        private void IG0902_Enter(object sender, EventArgs e)
        {
            IG0902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0902);
            IG0902.SelectAll();
        }

        private void IG01002_Enter(object sender, EventArgs e)
        {
            IG01002.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01002);
            IG01002.SelectAll();
        }

        private void IG01102_Enter(object sender, EventArgs e)
        {
            IG01102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01102);
            IG01102.SelectAll();
        }

        private void IG01202_Enter(object sender, EventArgs e)
        {
            IG01202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01202);
            IG01202.SelectAll();
        }

        private void IG01302_Enter(object sender, EventArgs e)
        {
            IG01302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01302);
            IG01302.SelectAll();
        }

        private void IG01402_Enter(object sender, EventArgs e)
        {
            IG01402.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01402);
            IG01402.SelectAll();
        }

        private void IG01502_Enter(object sender, EventArgs e)
        {
            IG01502.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01502);
            IG01502.SelectAll();
        }

        private void IG160102_Enter(object sender, EventArgs e)
        {
            IG160102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160102);
            IG160102.SelectAll();
        }

        private void IG160202_Enter(object sender, EventArgs e)
        {
            IG160202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160202);
            IG160202.SelectAll();
        }

        private void IG160302_Enter(object sender, EventArgs e)
        {
            IG160302.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160302);
            IG160302.SelectAll();
        }

        private void IG160402_Enter(object sender, EventArgs e)
        {
            IG160402.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160402);
            IG160402.SelectAll();
        }

        private void IG160502_Enter(object sender, EventArgs e)
        {
            IG160502.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160502);
            IG160502.SelectAll();
        }

        private void IG160602_Enter(object sender, EventArgs e)
        {
            IG160602.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160602);
            IG160602.SelectAll();
        }

        private void IG160702_Enter(object sender, EventArgs e)
        {
            IG160702.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160702);
            IG160702.SelectAll();
        }

        private void IG160802_Enter(object sender, EventArgs e)
        {
            IG160802.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160802);
            IG160802.SelectAll();
        }

        private void IG160902_Enter(object sender, EventArgs e)
        {
            IG160902.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160902);
            IG160902.SelectAll();
        }

        private void IG1601002_Enter(object sender, EventArgs e)
        {
            IG1601002.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601002);
            IG1601002.SelectAll();
        }

        private void IG1601102_Enter(object sender, EventArgs e)
        {
            IG1601102.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601102);
            IG1601102.SelectAll();
        }

        private void IG1601202_Enter(object sender, EventArgs e)
        {
            IG1601202.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601202);
            IG1601202.SelectAll();
        }

        private void IG070503_Enter(object sender, EventArgs e)
        {
            IG070503.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070503);
            IG070503.SelectAll();
        }

        private void IG070603_Enter(object sender, EventArgs e)
        {
            IG070603.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070603);
            IG070603.SelectAll();
        }

        private void IG070703_Enter(object sender, EventArgs e)
        {
            IG070703.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070703);
            IG070703.SelectAll();
        }

        private void IG070803_Enter(object sender, EventArgs e)
        {
            IG070803.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070803);
            IG070803.SelectAll();
        }

        private void IG070903_Enter(object sender, EventArgs e)
        {
            IG070903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070903);
            IG070903.SelectAll();
        }

        private void IG0701003_Enter(object sender, EventArgs e)
        {
            IG0701003.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701003);
            IG0701003.SelectAll();
        }

        private void IG0701103_Enter(object sender, EventArgs e)
        {
            IG0701103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701103);
            IG0701103.SelectAll();
        }

        private void IG0701203_Enter(object sender, EventArgs e)
        {
            IG0701203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701203);
            IG0701203.SelectAll();
        }

        private void IG0701303_Enter(object sender, EventArgs e)
        {
            IG0701303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701303);
            IG0701303.SelectAll();
        }

        private void IG0803_Enter(object sender, EventArgs e)
        {
            IG0803.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0803);
            IG0803.SelectAll();
        }

        private void IG0903_Enter(object sender, EventArgs e)
        {
            IG0903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0903);
            IG0903.SelectAll();
        }

        private void IG01003_Enter(object sender, EventArgs e)
        {
            IG01003.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01003);
            IG01003.SelectAll();
        }

        private void IG01103_Enter(object sender, EventArgs e)
        {
            IG01103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01103);
            IG01103.SelectAll();
        }

        private void IG01203_Enter(object sender, EventArgs e)
        {
            IG01203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01203);
            IG01203.SelectAll();
        }

        private void IG01303_Enter(object sender, EventArgs e)
        {
            IG01303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01303);
            IG01303.SelectAll();
        }

        private void IG01403_Enter(object sender, EventArgs e)
        {
            IG01403.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01403);
            IG01403.SelectAll();
        }

        private void IG01503_Enter(object sender, EventArgs e)
        {
            IG01503.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01503);
            IG01503.SelectAll();
        }

        private void IG160103_Enter(object sender, EventArgs e)
        {
            IG160103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160103);
            IG160103.SelectAll();
        }

        private void IG160203_Enter(object sender, EventArgs e)
        {
            IG160203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160203);
            IG160203.SelectAll();
        }

        private void IG160303_Enter(object sender, EventArgs e)
        {
            IG160303.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160303);
            IG160303.SelectAll();
        }

        private void IG160403_Enter(object sender, EventArgs e)
        {
            IG160403.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160403);
            IG160403.SelectAll();
        }

        private void IG160503_Enter(object sender, EventArgs e)
        {
            IG160503.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160503);
            IG160503.SelectAll();
        }

        private void IG160603_Enter(object sender, EventArgs e)
        {
            IG160603.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160603);
            IG160603.SelectAll();
        }

        private void IG160703_Enter(object sender, EventArgs e)
        {
            IG160703.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160703);
            IG160703.SelectAll();
        }

        private void IG160803_Enter(object sender, EventArgs e)
        {
            IG160803.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160803);
            IG160803.SelectAll();
        }

        private void IG160903_Enter(object sender, EventArgs e)
        {
            IG160903.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160903);
            IG160903.SelectAll();
        }

        private void IG1601003_Enter(object sender, EventArgs e)
        {
            IG1601003.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601003);
            IG1601003.SelectAll();
        }

        private void IG1601103_Enter(object sender, EventArgs e)
        {
            IG1601103.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601103);
            IG1601103.SelectAll();
        }

        private void IG1601203_Enter(object sender, EventArgs e)
        {
            IG1601203.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601203);
            IG1601203.SelectAll();
        }

        private void IG070504_Enter(object sender, EventArgs e)
        {
            IG070504.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070504);
            IG070504.SelectAll();
        }

        private void IG070604_Enter(object sender, EventArgs e)
        {
            IG070604.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070604);
            IG070604.SelectAll();
        }

        private void IG070704_Enter(object sender, EventArgs e)
        {
            IG070704.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070704);
            IG070704.SelectAll();
        }

        private void IG070804_Enter(object sender, EventArgs e)
        {
            IG070804.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070804);
            IG070804.SelectAll();
        }

        private void IG070904_Enter(object sender, EventArgs e)
        {
            IG070904.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070904);
            IG070904.SelectAll();
        }

        private void IG0701004_Enter(object sender, EventArgs e)
        {
            IG0701004.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701004);
            IG0701004.SelectAll();
        }

        private void IG0701104_Enter(object sender, EventArgs e)
        {
            IG0701104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701104);
            IG0701104.SelectAll();
        }

        private void IG0701204_Enter(object sender, EventArgs e)
        {
            IG0701204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701204);
            IG0701204.SelectAll();
        }

        private void IG0701304_Enter(object sender, EventArgs e)
        {
            IG0701304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701304);
            IG0701304.SelectAll();
        }

        private void IG0804_Enter(object sender, EventArgs e)
        {
            IG0804.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0804);
            IG0804.SelectAll();
        }

        private void IG0904_Enter(object sender, EventArgs e)
        {
            IG0904.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0904);
            IG0904.SelectAll();
        }

        private void IG01004_Enter(object sender, EventArgs e)
        {
            IG01004.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01004);
            IG01004.SelectAll();
        }

        private void IG01104_Enter(object sender, EventArgs e)
        {
            IG01104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01104);
            IG01104.SelectAll();
        }

        private void IG01204_Enter(object sender, EventArgs e)
        {
            IG01204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01204);
            IG01204.SelectAll();
        }

        private void IG01304_Enter(object sender, EventArgs e)
        {
            IG01304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01304);
            IG01304.SelectAll();
        }

        private void IG01404_Enter(object sender, EventArgs e)
        {
            IG01404.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01404);
            IG01404.SelectAll();
        }

        private void IG01504_Enter(object sender, EventArgs e)
        {
            IG01504.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01504);
            IG01504.SelectAll();
        }

        private void IG160104_Enter(object sender, EventArgs e)
        {
            IG160104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160104);
            IG160104.SelectAll();
        }

        private void IG160204_Enter(object sender, EventArgs e)
        {
            IG160204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160204);
            IG160204.SelectAll();
        }

        private void IG160304_Enter(object sender, EventArgs e)
        {
            IG160304.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160304);
            IG160304.SelectAll();
        }

        private void IG160404_Enter(object sender, EventArgs e)
        {
            IG160404.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160404);
            IG160404.SelectAll();
        }

        private void IG160504_Enter(object sender, EventArgs e)
        {
            IG160504.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160504);
            IG160504.SelectAll();
        }

        private void IG160604_Enter(object sender, EventArgs e)
        {
            IG160604.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160604);
            IG160604.SelectAll();
        }

        private void IG160704_Enter(object sender, EventArgs e)
        {
            IG160704.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160704);
            IG160704.SelectAll();
        }

        private void IG160804_Enter(object sender, EventArgs e)
        {
            IG160804.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160804);
            IG160804.SelectAll();
        }

        private void IG160904_Enter(object sender, EventArgs e)
        {
            IG160904.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160904);
            IG160904.SelectAll();
        }

        private void IG1601004_Enter(object sender, EventArgs e)
        {
            IG1601004.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601004);
            IG1601004.SelectAll();
        }

        private void IG1601104_Enter(object sender, EventArgs e)
        {
            IG1601104.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601104);
            IG1601104.SelectAll();
        }

        private void IG1601204_Enter(object sender, EventArgs e)
        {
            IG1601204.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601204);
            IG1601204.SelectAll();
        }

        private void IG070505_Enter(object sender, EventArgs e)
        {
            IG070505.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070505);
            IG070505.SelectAll();
        }

        private void IG070605_Enter(object sender, EventArgs e)
        {
            IG070605.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070605);
            IG070605.SelectAll();
        }

        private void IG070705_Enter(object sender, EventArgs e)
        {
            IG070705.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070705);
            IG070705.SelectAll();
        }

        private void IG070805_Enter(object sender, EventArgs e)
        {
            IG070805.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070805);
            IG070805.SelectAll();
        }

        private void IG070905_Enter(object sender, EventArgs e)
        {
            IG070905.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070905);
            IG070905.SelectAll();
        }

        private void IG0701005_Enter(object sender, EventArgs e)
        {
            IG0701005.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701005);
            IG0701005.SelectAll();
        }

        private void IG0701105_Enter(object sender, EventArgs e)
        {
            IG0701105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701105);
            IG0701105.SelectAll();
        }

        private void IG0701205_Enter(object sender, EventArgs e)
        {
            IG0701205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701205);
            IG0701205.SelectAll();
        }

        private void IG0701305_Enter(object sender, EventArgs e)
        {
            IG0701305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701305);
            IG0701305.SelectAll();
        }

        private void IG0805_Enter(object sender, EventArgs e)
        {
            IG0805.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0805);
            IG0805.SelectAll();
        }

        private void IG0905_Enter(object sender, EventArgs e)
        {
            IG0905.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0905);
            IG0905.SelectAll();
        }

        private void IG01005_Enter(object sender, EventArgs e)
        {
            IG01005.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01005);
            IG01005.SelectAll();
        }

        private void IG01105_Enter(object sender, EventArgs e)
        {
            IG01105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01105);
            IG01105.SelectAll();
        }

        private void IG01205_Enter(object sender, EventArgs e)
        {
            IG01205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01205);
            IG01205.SelectAll();
        }

        private void IG01305_Enter(object sender, EventArgs e)
        {
            IG01305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01305);
            IG01305.SelectAll();
        }

        private void IG01405_Enter(object sender, EventArgs e)
        {
            IG01405.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01405);
            IG01405.SelectAll();
        }

        private void IG01505_Enter(object sender, EventArgs e)
        {
            IG01505.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01505);
            IG01505.SelectAll();
        }

        private void IG160105_Enter(object sender, EventArgs e)
        {
            IG160105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160105);
            IG160105.SelectAll();
        }

        private void IG160205_Enter(object sender, EventArgs e)
        {
            IG160205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160205);
            IG160205.SelectAll();
        }

        private void IG160305_Enter(object sender, EventArgs e)
        {
            IG160305.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160305);
            IG160305.SelectAll();
        }

        private void IG160405_Enter(object sender, EventArgs e)
        {
            IG160405.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160405);
            IG160405.SelectAll();
        }

        private void IG160505_Enter(object sender, EventArgs e)
        {
            IG160505.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160505);
            IG160505.SelectAll();
        }

        private void IG160605_Enter(object sender, EventArgs e)
        {
            IG160605.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160605);
            IG160605.SelectAll();
        }

        private void IG160705_Enter(object sender, EventArgs e)
        {
            IG160705.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160705);
            IG160705.SelectAll();
        }

        private void IG160805_Enter(object sender, EventArgs e)
        {
            IG160805.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160805);
            IG160805.SelectAll();
        }

        private void IG160905_Enter(object sender, EventArgs e)
        {
            IG160905.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160905);
            IG160905.SelectAll();
        }

        private void IG1601005_Enter(object sender, EventArgs e)
        {
            IG1601005.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601005);
            IG1601005.SelectAll();
        }

        private void IG1601105_Enter(object sender, EventArgs e)
        {
            IG1601105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601105);
            IG1601105.SelectAll();
        }

        private void IG1601205_Enter(object sender, EventArgs e)
        {
            IG1601205.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601205);
            IG1601205.SelectAll();
        }



        private void QCFUP02_Enter(object sender, EventArgs e)
        {
            QCFUP02.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP02);
            QCFUP02.SelectAll();
        }

        private void QCFUP03_Enter(object sender, EventArgs e)
        {
            QCFUP03.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP03);
            QCFUP03.SelectAll();
        }

        private void QCFUP04_Enter(object sender, EventArgs e)
        {
            QCFUP04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP04);
            QCFUP04.SelectAll();
        }

        private void QCFUP05_Enter(object sender, EventArgs e)
        {
            QCFUP05.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP05);
            QCFUP05.SelectAll();
        }

        private void QCFUP06_Enter(object sender, EventArgs e)
        {
            QCFUP06.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP06);
            QCFUP06.SelectAll();
        }

        private void QCFUP07_Enter(object sender, EventArgs e)
        {
            QCFUP07.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_QCFUP07);
            QCFUP07.SelectAll();
        }

        private void ckkBaby5_Enter(object sender, EventArgs e)
        {
            chkBaby5.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby5);
            chkBaby5.SelectAll();
        }

        private void IC0605_Enter(object sender, EventArgs e)
        {
            IC0605.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0605);
            IC0605.SelectAll();
        }

        private void IC0705_Enter(object sender, EventArgs e)
        {
            IC0705.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0705);
            IC0705.SelectAll();
        }

        private void IC0805_Enter(object sender, EventArgs e)
        {
            IC0805.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0805);
            IC0805.SelectAll();
        }

        private void IC0905_Enter(object sender, EventArgs e)
        {
            IC0905.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0905);
            IC0905.SelectAll();
        }

        private void IC01005_Enter(object sender, EventArgs e)
        {
            IC01005.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01005);
            IC01005.SelectAll();
        }

        private void IC01105_Enter(object sender, EventArgs e)
        {
            IC01105.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01105);
            IC01105.SelectAll();
        }

        private void ckkBaby6_Enter(object sender, EventArgs e)
        {
            chkBaby6.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby6);
            chkBaby6.SelectAll();
        }

        private void IC0606_Enter(object sender, EventArgs e)
        {
            IC0606.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0606);
            IC0606.SelectAll();
        }

        private void IC0706_Enter(object sender, EventArgs e)
        {
            IC0706.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0706);
            IC0706.SelectAll();
        }

        private void IC0806_Enter(object sender, EventArgs e)
        {
            IC0806.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0806);
            IC0806.SelectAll();
        }

        private void IC0906_Enter(object sender, EventArgs e)
        {
            IC0906.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0906);
            IC0906.SelectAll();
        }

        private void IC01006_Enter(object sender, EventArgs e)
        {
            IC01006.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01006);
            IC01006.SelectAll();
        }

        private void IC01106_Enter(object sender, EventArgs e)
        {
            IC01106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01106);
            IC01106.SelectAll();
        }

        private void ckkBaby7_Enter(object sender, EventArgs e)
        {
            chkBaby7.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby7);
            chkBaby7.SelectAll();
        }

        private void IC0607_Enter(object sender, EventArgs e)
        {
            IC0607.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0607);
            IC0607.SelectAll();
        }

        private void IC0707_Enter(object sender, EventArgs e)
        {
            IC0707.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0707);
            IC0707.SelectAll();
        }

        private void IC0807_Enter(object sender, EventArgs e)
        {
            IC0807.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0807);
            IC0807.SelectAll();
        }

        private void IC0907_Enter(object sender, EventArgs e)
        {
            IC0907.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0907);
            IC0907.SelectAll();
        }

        private void IC01007_Enter(object sender, EventArgs e)
        {
            IC01007.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01007);
            IC01007.SelectAll();
        }

        private void IC01107_Enter(object sender, EventArgs e)
        {
            IC01107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01107);
            IC01107.SelectAll();
        }

        private void ckkBaby8_Enter(object sender, EventArgs e)
        {
            chkBaby8.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby8);
            chkBaby8.SelectAll();
        }

        private void IC0608_Enter(object sender, EventArgs e)
        {
            IC0608.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0608);
            IC0608.SelectAll();
        }

        private void IC0708_Enter(object sender, EventArgs e)
        {
            IC0708.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0708);
            IC0708.SelectAll();
        }

        private void IC0808_Enter(object sender, EventArgs e)
        {
            IC0808.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0808);
            IC0808.SelectAll();
        }

        private void IC0908_Enter(object sender, EventArgs e)
        {
            IC0908.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0908);
            IC0908.SelectAll();
        }

        private void IC01008_Enter(object sender, EventArgs e)
        {
            IC01008.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01008);
            IC01008.SelectAll();
        }

        private void IC01108_Enter(object sender, EventArgs e)
        {
            IC01108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01108);
            IC01108.SelectAll();
        }

        private void ckkBaby9_Enter(object sender, EventArgs e)
        {
            chkBaby9.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby9);
            chkBaby9.SelectAll();
        }

        private void IC0609_Enter(object sender, EventArgs e)
        {
            IC0609.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0609);
            IC0609.SelectAll();
        }

        private void IC0709_Enter(object sender, EventArgs e)
        {
            IC0709.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0709);
            IC0709.SelectAll();
        }

        private void IC0809_Enter(object sender, EventArgs e)
        {
            IC0809.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0809);
            IC0809.SelectAll();
        }

        private void IC0909_Enter(object sender, EventArgs e)
        {
            IC0909.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC0909);
            IC0909.SelectAll();
        }

        private void IC01009_Enter(object sender, EventArgs e)
        {
            IC01009.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01009);
            IC01009.SelectAll();
        }

        private void IC01109_Enter(object sender, EventArgs e)
        {
            IC01109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01109);
            IC01109.SelectAll();
        }

        private void ckkBaby10_Enter(object sender, EventArgs e)
        {
            chkBaby10.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby10);
            chkBaby10.SelectAll();
        }

        private void IC06010_Enter(object sender, EventArgs e)
        {
            IC06010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC06010);
            IC06010.SelectAll();
        }

        private void IC07010_Enter(object sender, EventArgs e)
        {
            IC07010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC07010);
            IC07010.SelectAll();
        }

        private void IC08010_Enter(object sender, EventArgs e)
        {
            IC08010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC08010);
            IC08010.SelectAll();
        }

        private void IC09010_Enter(object sender, EventArgs e)
        {
            IC09010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC09010);
            IC09010.SelectAll();
        }

        private void IC01010_Enter(object sender, EventArgs e)
        {
            IC01010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01010);
            IC01010.SelectAll();
        }

        private void IC01110_Enter(object sender, EventArgs e)
        {
            IC01110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01110);
            IC01110.SelectAll();
        }

        private void ckkBaby11_Enter(object sender, EventArgs e)
        {
            chkBaby11.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_ckkBaby11);
            chkBaby11.SelectAll();
        }

        private void IC06011_Enter(object sender, EventArgs e)
        {
            IC06011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC06011);
            IC06011.SelectAll();
        }

        private void IC07011_Enter(object sender, EventArgs e)
        {
            IC07011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC07011);
            IC07011.SelectAll();
        }

        private void IC08011_Enter(object sender, EventArgs e)
        {
            IC08011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC08011);
            IC08011.SelectAll();
        }

        private void IC09011_Enter(object sender, EventArgs e)
        {
            IC09011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC09011);
            IC09011.SelectAll();
        }

        private void IC01011_Enter(object sender, EventArgs e)
        {
            IC01011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01011);
            IC01011.SelectAll();
        }

        private void IC01111_Enter(object sender, EventArgs e)
        {
            IC01111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IC01111);
            IC01111.SelectAll();
        }

        private void chkMember6_Enter(object sender, EventArgs e)
        {
            chkMember6.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember6);
            chkMember6.SelectAll();
        }

        private void IG0406_Enter(object sender, EventArgs e)
        {
            IG0406.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0406);
            IG0406.SelectAll();
        }

        private void IG0506_Enter(object sender, EventArgs e)
        {
            IG0506.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0506);
            IG0506.SelectAll();
        }

        private void IG060106_Enter(object sender, EventArgs e)
        {
            IG060106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060106);
            IG060106.SelectAll();
        }

        private void IG060206_Enter(object sender, EventArgs e)
        {
            IG060206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060206);
            IG060206.SelectAll();
        }

        private void IG060306_Enter(object sender, EventArgs e)
        {
            IG060306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060306);
            IG060306.SelectAll();
        }

        private void IG060406_Enter(object sender, EventArgs e)
        {
            IG060406.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060406);
            IG060406.SelectAll();
        }

        private void IG060506_Enter(object sender, EventArgs e)
        {
            IG060506.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060506);
            IG060506.SelectAll();
        }

        private void IG070106_Enter(object sender, EventArgs e)
        {
            IG070106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070106);
            IG070106.SelectAll();
        }

        private void IG070206_Enter(object sender, EventArgs e)
        {
            IG070206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070206);
            IG070206.SelectAll();
        }

        private void IG070306_Enter(object sender, EventArgs e)
        {
            IG070306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070306);
            IG070306.SelectAll();
        }

        private void IG070406_Enter(object sender, EventArgs e)
        {
            IG070406.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070406);
            IG070406.SelectAll();
        }

        private void IG070506_Enter(object sender, EventArgs e)
        {
            IG070506.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070506);
            IG070506.SelectAll();
        }

        private void IG070606_Enter(object sender, EventArgs e)
        {
            IG070606.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070606);
            IG070606.SelectAll();
        }

        private void IG070706_Enter(object sender, EventArgs e)
        {
            IG070706.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070706);
            IG070706.SelectAll();
        }

        private void IG070806_Enter(object sender, EventArgs e)
        {
            IG070806.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070806);
            IG070806.SelectAll();
        }

        private void IG070906_Enter(object sender, EventArgs e)
        {
            IG070906.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070906);
            IG070906.SelectAll();
        }

        private void IG0701006_Enter(object sender, EventArgs e)
        {
            IG0701006.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701006);
            IG0701006.SelectAll();
        }

        private void IG0701106_Enter(object sender, EventArgs e)
        {
            IG0701106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701106);
            IG0701106.SelectAll();
        }

        private void IG0701206_Enter(object sender, EventArgs e)
        {
            IG0701206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701206);
            IG0701206.SelectAll();
        }

        private void IG0701306_Enter(object sender, EventArgs e)
        {
            IG0701306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701306);
            IG0701306.SelectAll();
        }

        private void IG0806_Enter(object sender, EventArgs e)
        {
            IG0806.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0806);
            IG0806.SelectAll();
        }

        private void IG0906_Enter(object sender, EventArgs e)
        {
            IG0906.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0906);
            IG0906.SelectAll();
        }

        private void IG01006_Enter(object sender, EventArgs e)
        {
            IG01006.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01006);
            IG01006.SelectAll();
        }

        private void chkMember7_Enter(object sender, EventArgs e)
        {
            chkMember7.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember7);
            chkMember7.SelectAll();
        }

        private void IG0407_Enter(object sender, EventArgs e)
        {
            IG0407.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0407);
            IG0407.SelectAll();
        }

        private void IG0507_Enter(object sender, EventArgs e)
        {
            IG0507.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0507);
            IG0507.SelectAll();
        }

        private void IG060107_Enter(object sender, EventArgs e)
        {
            IG060107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060107);
            IG060107.SelectAll();
        }

        private void IG060207_Enter(object sender, EventArgs e)
        {
            IG060207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060207);
            IG060207.SelectAll();
        }

        private void IG060307_Enter(object sender, EventArgs e)
        {
            IG060307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060307);
            IG060307.SelectAll();
        }

        private void IG060407_Enter(object sender, EventArgs e)
        {
            IG060407.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060407);
            IG060407.SelectAll();
        }

        private void IG060507_Enter(object sender, EventArgs e)
        {
            IG060507.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060507);
            IG060507.SelectAll();
        }

        private void IG070107_Enter(object sender, EventArgs e)
        {
            IG070107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070107);
            IG070107.SelectAll();
        }

        private void IG070207_Enter(object sender, EventArgs e)
        {
            IG070207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070207);
            IG070207.SelectAll();
        }

        private void IG070307_Enter(object sender, EventArgs e)
        {
            IG070307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070307);
            IG070307.SelectAll();
        }

        private void IG070407_Enter(object sender, EventArgs e)
        {
            IG070407.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070407);
            IG070407.SelectAll();
        }

        private void IG070507_Enter(object sender, EventArgs e)
        {
            IG070507.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070507);
            IG070507.SelectAll();
        }

        private void IG070607_Enter(object sender, EventArgs e)
        {
            IG070607.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070607);
            IG070607.SelectAll();
        }

        private void IG070707_Enter(object sender, EventArgs e)
        {
            IG070707.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070707);
            IG070707.SelectAll();
        }

        private void IG070807_Enter(object sender, EventArgs e)
        {
            IG070807.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070807);
            IG070807.SelectAll();
        }

        private void IG070907_Enter(object sender, EventArgs e)
        {
            IG070907.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070907);
            IG070907.SelectAll();
        }

        private void IG0701007_Enter(object sender, EventArgs e)
        {
            IG0701007.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701007);
            IG0701007.SelectAll();
        }

        private void IG0701107_Enter(object sender, EventArgs e)
        {
            IG0701107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701107);
            IG0701107.SelectAll();
        }

        private void IG0701207_Enter(object sender, EventArgs e)
        {
            IG0701207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701207);
            IG0701207.SelectAll();
        }

        private void IG0701307_Enter(object sender, EventArgs e)
        {
            IG0701307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701307);
            IG0701307.SelectAll();
        }

        private void IG0807_Enter(object sender, EventArgs e)
        {
            IG0807.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0807);
            IG0807.SelectAll();
        }

        private void IG0907_Enter(object sender, EventArgs e)
        {
            IG0907.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0907);
            IG0907.SelectAll();
        }

        private void IG01007_Enter(object sender, EventArgs e)
        {
            IG01007.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01007);
            IG01007.SelectAll();
        }

        private void chkMember8_Enter(object sender, EventArgs e)
        {
            chkMember8.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember8);
            chkMember8.SelectAll();
        }

        private void IG0408_Enter(object sender, EventArgs e)
        {
            IG0408.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0408);
            IG0408.SelectAll();
        }

        private void IG0508_Enter(object sender, EventArgs e)
        {
            IG0508.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0508);
            IG0508.SelectAll();
        }

        private void IG060108_Enter(object sender, EventArgs e)
        {
            IG060108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060108);
            IG060108.SelectAll();
        }

        private void IG060208_Enter(object sender, EventArgs e)
        {
            IG060208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060208);
            IG060208.SelectAll();
        }

        private void IG060308_Enter(object sender, EventArgs e)
        {
            IG060308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060308);
            IG060308.SelectAll();
        }

        private void IG060408_Enter(object sender, EventArgs e)
        {
            IG060408.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060408);
            IG060408.SelectAll();
        }

        private void IG060508_Enter(object sender, EventArgs e)
        {
            IG060508.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060508);
            IG060508.SelectAll();
        }

        private void IG070108_Enter(object sender, EventArgs e)
        {
            IG070108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070108);
            IG070108.SelectAll();
        }

        private void IG070208_Enter(object sender, EventArgs e)
        {
            IG070208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070208);
            IG070208.SelectAll();
        }

        private void IG070308_Enter(object sender, EventArgs e)
        {
            IG070308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070308);
            IG070308.SelectAll();
        }

        private void IG070408_Enter(object sender, EventArgs e)
        {
            IG070408.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070408);
            IG070408.SelectAll();
        }

        private void IG070508_Enter(object sender, EventArgs e)
        {
            IG070508.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070508);
            IG070508.SelectAll();
        }

        private void IG070608_Enter(object sender, EventArgs e)
        {
            IG070608.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070608);
            IG070608.SelectAll();
        }

        private void IG070708_Enter(object sender, EventArgs e)
        {
            IG070708.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070708);
            IG070708.SelectAll();
        }

        private void IG070808_Enter(object sender, EventArgs e)
        {
            IG070808.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070808);
            IG070808.SelectAll();
        }

        private void IG070908_Enter(object sender, EventArgs e)
        {
            IG070908.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070908);
            IG070908.SelectAll();
        }

        private void IG0701008_Enter(object sender, EventArgs e)
        {
            IG0701008.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701008);
            IG0701008.SelectAll();
        }

        private void IG0701108_Enter(object sender, EventArgs e)
        {
            IG0701108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701108);
            IG0701108.SelectAll();
        }

        private void IG0701208_Enter(object sender, EventArgs e)
        {
            IG0701208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701208);
            IG0701208.SelectAll();
        }

        private void IG0701308_Enter(object sender, EventArgs e)
        {
            IG0701308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701308);
            IG0701308.SelectAll();
        }

        private void IG0808_Enter(object sender, EventArgs e)
        {
            IG0808.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0808);
            IG0808.SelectAll();
        }

        private void IG0908_Enter(object sender, EventArgs e)
        {
            IG0908.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0908);
            IG0908.SelectAll();
        }

        private void IG01008_Enter(object sender, EventArgs e)
        {
            IG01008.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01008);
            IG01008.SelectAll();
        }

        private void chkMember9_Enter(object sender, EventArgs e)
        {
            chkMember9.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember9);
            chkMember9.SelectAll();
        }

        private void IG0409_Enter(object sender, EventArgs e)
        {
            IG0409.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0409);
            IG0409.SelectAll();
        }

        private void IG0509_Enter(object sender, EventArgs e)
        {
            IG0509.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0509);
            IG0509.SelectAll();
        }

        private void IG060109_Enter(object sender, EventArgs e)
        {
            IG060109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060109);
            IG060109.SelectAll();
        }

        private void IG060209_Enter(object sender, EventArgs e)
        {
            IG060209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060209);
            IG060209.SelectAll();
        }

        private void IG060309_Enter(object sender, EventArgs e)
        {
            IG060309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060309);
            IG060309.SelectAll();
        }

        private void IG060409_Enter(object sender, EventArgs e)
        {
            IG060409.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060409);
            IG060409.SelectAll();
        }

        private void IG060509_Enter(object sender, EventArgs e)
        {
            IG060509.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060509);
            IG060509.SelectAll();
        }

        private void IG070109_Enter(object sender, EventArgs e)
        {
            IG070109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070109);
            IG070109.SelectAll();
        }

        private void IG070209_Enter(object sender, EventArgs e)
        {
            IG070209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070209);
            IG070209.SelectAll();
        }

        private void IG070309_Enter(object sender, EventArgs e)
        {
            IG070309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070309);
            IG070309.SelectAll();
        }

        private void IG070409_Enter(object sender, EventArgs e)
        {
            IG070409.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070409);
            IG070409.SelectAll();
        }

        private void IG070509_Enter(object sender, EventArgs e)
        {
            IG070509.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070509);
            IG070509.SelectAll();
        }

        private void IG070609_Enter(object sender, EventArgs e)
        {
            IG070609.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070609);
            IG070609.SelectAll();
        }

        private void IG070709_Enter(object sender, EventArgs e)
        {
            IG070709.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070709);
            IG070709.SelectAll();
        }

        private void IG070809_Enter(object sender, EventArgs e)
        {
            IG070809.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070809);
            IG070809.SelectAll();
        }

        private void IG070909_Enter(object sender, EventArgs e)
        {
            IG070909.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070909);
            IG070909.SelectAll();
        }

        private void IG0701009_Enter(object sender, EventArgs e)
        {
            IG0701009.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701009);
            IG0701009.SelectAll();
        }

        private void IG0701109_Enter(object sender, EventArgs e)
        {
            IG0701109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701109);
            IG0701109.SelectAll();
        }

        private void IG0701209_Enter(object sender, EventArgs e)
        {
            IG0701209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701209);
            IG0701209.SelectAll();
        }

        private void IG0701309_Enter(object sender, EventArgs e)
        {
            IG0701309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701309);
            IG0701309.SelectAll();
        }

        private void IG0809_Enter(object sender, EventArgs e)
        {
            IG0809.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0809);
            IG0809.SelectAll();
        }

        private void IG0909_Enter(object sender, EventArgs e)
        {
            IG0909.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0909);
            IG0909.SelectAll();
        }

        private void IG01009_Enter(object sender, EventArgs e)
        {
            IG01009.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01009);
            IG01009.SelectAll();
        }

        private void chkMember10_Enter(object sender, EventArgs e)
        {
            chkMember10.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember10);
            chkMember10.SelectAll();
        }

        private void IG0410_Enter(object sender, EventArgs e)
        {
            IG0410.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0410);
            IG0410.SelectAll();
        }

        private void IG0510_Enter(object sender, EventArgs e)
        {
            IG0510.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0510);
            IG0510.SelectAll();
        }

        private void IG060110_Enter(object sender, EventArgs e)
        {
            IG060110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060110);
            IG060110.SelectAll();
        }

        private void IG060210_Enter(object sender, EventArgs e)
        {
            IG060210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060210);
            IG060210.SelectAll();
        }

        private void IG060310_Enter(object sender, EventArgs e)
        {
            IG060310.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060310);
            IG060310.SelectAll();
        }

        private void IG060410_Enter(object sender, EventArgs e)
        {
            IG060410.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060410);
            IG060410.SelectAll();
        }

        private void IG060510_Enter(object sender, EventArgs e)
        {
            IG060510.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060510);
            IG060510.SelectAll();
        }

        private void IG070110_Enter(object sender, EventArgs e)
        {
            IG070110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070110);
            IG070110.SelectAll();
        }

        private void IG070210_Enter(object sender, EventArgs e)
        {
            IG070210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070210);
            IG070210.SelectAll();
        }

        private void IG070310_Enter(object sender, EventArgs e)
        {
            IG070310.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070310);
            IG070310.SelectAll();
        }

        private void IG070410_Enter(object sender, EventArgs e)
        {
            IG070410.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070410);
            IG070410.SelectAll();
        }

        private void IG070510_Enter(object sender, EventArgs e)
        {
            IG070510.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070510);
            IG070510.SelectAll();
        }

        private void IG070610_Enter(object sender, EventArgs e)
        {
            IG070610.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070610);
            IG070610.SelectAll();
        }

        private void IG070710_Enter(object sender, EventArgs e)
        {
            IG070710.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070710);
            IG070710.SelectAll();
        }

        private void IG070810_Enter(object sender, EventArgs e)
        {
            IG070810.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070810);
            IG070810.SelectAll();
        }

        private void IG070910_Enter(object sender, EventArgs e)
        {
            IG070910.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070910);
            IG070910.SelectAll();
        }

        private void IG0701010_Enter(object sender, EventArgs e)
        {
            IG0701010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701010);
            IG0701010.SelectAll();
        }

        private void IG0701110_Enter(object sender, EventArgs e)
        {
            IG0701110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701110);
            IG0701110.SelectAll();
        }

        private void IG0701210_Enter(object sender, EventArgs e)
        {
            IG0701210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701210);
            IG0701210.SelectAll();
        }

        private void IG0701310_Enter(object sender, EventArgs e)
        {
            IG0701310.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701310);
            IG0701310.SelectAll();
        }

        private void IG0810_Enter(object sender, EventArgs e)
        {
            IG0810.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0810);
            IG0810.SelectAll();
        }

        private void IG0910_Enter(object sender, EventArgs e)
        {
            IG0910.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0910);
            IG0910.SelectAll();
        }

        private void IG01010_Enter(object sender, EventArgs e)
        {
            IG01010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01010);
            IG01010.SelectAll();
        }

        private void IG01106_Enter(object sender, EventArgs e)
        {
            IG01106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01106);
            IG01106.SelectAll();
        }

        private void IG01206_Enter(object sender, EventArgs e)
        {
            IG01206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01206);
            IG01206.SelectAll();
        }

        private void IG01306_Enter(object sender, EventArgs e)
        {
            IG01306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01306);
            IG01306.SelectAll();
        }

        private void IG01406_Enter(object sender, EventArgs e)
        {
            IG01406.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01406);
            IG01406.SelectAll();
        }

        private void IG01506_Enter(object sender, EventArgs e)
        {
            IG01506.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01506);
            IG01506.SelectAll();
        }

        private void IG01107_Enter(object sender, EventArgs e)
        {
            IG01107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01107);
            IG01107.SelectAll();
        }

        private void IG01207_Enter(object sender, EventArgs e)
        {
            IG01207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01207);
            IG01207.SelectAll();
        }

        private void IG01307_Enter(object sender, EventArgs e)
        {
            IG01307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01307);
            IG01307.SelectAll();
        }

        private void IG01407_Enter(object sender, EventArgs e)
        {
            IG01407.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01407);
            IG01407.SelectAll();
        }

        private void IG01507_Enter(object sender, EventArgs e)
        {
            IG01507.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01507);
            IG01507.SelectAll();
        }

        private void IG01108_Enter(object sender, EventArgs e)
        {
            IG01108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01108);
            IG01108.SelectAll();
        }

        private void IG01208_Enter(object sender, EventArgs e)
        {
            IG01208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01208);
            IG01208.SelectAll();
        }

        private void IG01308_Enter(object sender, EventArgs e)
        {
            IG01308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01308);
            IG01308.SelectAll();
        }

        private void IG01408_Enter(object sender, EventArgs e)
        {
            IG01408.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01408);
            IG01408.SelectAll();
        }

        private void IG01508_Enter(object sender, EventArgs e)
        {
            IG01508.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01508);
            IG01508.SelectAll();
        }

        private void IG01109_Enter(object sender, EventArgs e)
        {
            IG01109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01109);
            IG01109.SelectAll();
        }

        private void IG01209_Enter(object sender, EventArgs e)
        {
            IG01209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01209);
            IG01209.SelectAll();
        }

        private void IG01309_Enter(object sender, EventArgs e)
        {
            IG01309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01309);
            IG01309.SelectAll();
        }

        private void IG01409_Enter(object sender, EventArgs e)
        {
            IG01409.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01409);
            IG01409.SelectAll();
        }

        private void IG01509_Enter(object sender, EventArgs e)
        {
            IG01509.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01509);
            IG01509.SelectAll();
        }

        private void IG01110_Enter(object sender, EventArgs e)
        {
            IG01110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01110);
            IG01110.SelectAll();
        }

        private void IG01210_Enter(object sender, EventArgs e)
        {
            IG01210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01210);
            IG01210.SelectAll();
        }

        private void IG01310_Enter(object sender, EventArgs e)
        {
            IG01310.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01310);
            IG01310.SelectAll();
        }

        private void IG01410_Enter(object sender, EventArgs e)
        {
            IG01410.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01410);
            IG01410.SelectAll();
        }

        private void IG01510_Enter(object sender, EventArgs e)
        {
            IG01510.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01510);
            IG01510.SelectAll();
        }

        private void IG160106_Enter(object sender, EventArgs e)
        {
            IG160106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160106);
            IG160106.SelectAll();
        }

        private void IG160206_Enter(object sender, EventArgs e)
        {
            IG160206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160206);
            IG160206.SelectAll();
        }

        private void IG160306_Enter(object sender, EventArgs e)
        {
            IG160306.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160306);
            IG160306.SelectAll();
        }

        private void IG160406_Enter(object sender, EventArgs e)
        {
            IG160406.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160406);
            IG160406.SelectAll();
        }

        private void IG160506_Enter(object sender, EventArgs e)
        {
            IG160506.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160506);
            IG160506.SelectAll();
        }

        private void IG160606_Enter(object sender, EventArgs e)
        {
            IG160606.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160606);
            IG160606.SelectAll();
        }

        private void IG160706_Enter(object sender, EventArgs e)
        {
            IG160706.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160706);
            IG160706.SelectAll();
        }

        private void IG160806_Enter(object sender, EventArgs e)
        {
            IG160806.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160806);
            IG160806.SelectAll();
        }

        private void IG160906_Enter(object sender, EventArgs e)
        {
            IG160906.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160906);
            IG160906.SelectAll();
        }

        private void IG1601006_Enter(object sender, EventArgs e)
        {
            IG1601006.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601006);
            IG1601006.SelectAll();
        }

        private void IG1601106_Enter(object sender, EventArgs e)
        {
            IG1601106.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601106);
            IG1601106.SelectAll();
        }

        private void IG1601206_Enter(object sender, EventArgs e)
        {
            IG1601206.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601206);
            IG1601206.SelectAll();
        }

        private void IG160107_Enter(object sender, EventArgs e)
        {
            IG160107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160107);
            IG160107.SelectAll();
        }

        private void IG160207_Enter(object sender, EventArgs e)
        {
            IG160207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160207);
            IG160207.SelectAll();
        }

        private void IG160307_Enter(object sender, EventArgs e)
        {
            IG160307.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160307);
            IG160307.SelectAll();
        }

        private void IG160407_Enter(object sender, EventArgs e)
        {
            IG160407.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160407);
            IG160407.SelectAll();
        }

        private void IG160507_Enter(object sender, EventArgs e)
        {
            IG160507.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160507);
            IG160507.SelectAll();
        }

        private void IG160607_Enter(object sender, EventArgs e)
        {
            IG160607.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160607);
            IG160607.SelectAll();
        }

        private void IG160707_Enter(object sender, EventArgs e)
        {
            IG160707.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160707);
            IG160707.SelectAll();
        }

        private void IG160807_Enter(object sender, EventArgs e)
        {
            IG160807.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160807);
            IG160807.SelectAll();
        }

        private void IG160907_Enter(object sender, EventArgs e)
        {
            IG160907.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160907);
            IG160907.SelectAll();
        }

        private void IG1601007_Enter(object sender, EventArgs e)
        {
            IG1601007.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601007);
            IG1601007.SelectAll();
        }

        private void IG1601107_Enter(object sender, EventArgs e)
        {
            IG1601107.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601107);
            IG1601107.SelectAll();
        }

        private void IG1601207_Enter(object sender, EventArgs e)
        {
            IG1601207.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601207);
            IG1601207.SelectAll();
        }

        private void IG160108_Enter(object sender, EventArgs e)
        {
            IG160108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160108);
            IG160108.SelectAll();
        }

        private void IG160208_Enter(object sender, EventArgs e)
        {
            IG160208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160208);
            IG160208.SelectAll();
        }

        private void IG160308_Enter(object sender, EventArgs e)
        {
            IG160308.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160308);
            IG160308.SelectAll();
        }

        private void IG160408_Enter(object sender, EventArgs e)
        {
            IG160408.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160408);
            IG160408.SelectAll();
        }

        private void IG160508_Enter(object sender, EventArgs e)
        {
            IG160508.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160508);
            IG160508.SelectAll();
        }

        private void IG160608_Enter(object sender, EventArgs e)
        {
            IG160608.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160608);
            IG160608.SelectAll();
        }

        private void IG160708_Enter(object sender, EventArgs e)
        {
            IG160708.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160708);
            IG160708.SelectAll();
        }

        private void IG160808_Enter(object sender, EventArgs e)
        {
            IG160808.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160808);
            IG160808.SelectAll();
        }

        private void IG160908_Enter(object sender, EventArgs e)
        {
            IG160908.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160908);
            IG160908.SelectAll();
        }

        private void IG1601008_Enter(object sender, EventArgs e)
        {
            IG1601008.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601008);
            IG1601008.SelectAll();
        }

        private void IG1601108_Enter(object sender, EventArgs e)
        {
            IG1601108.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601108);
            IG1601108.SelectAll();
        }

        private void IG1601208_Enter(object sender, EventArgs e)
        {
            IG1601208.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601208);
            IG1601208.SelectAll();
        }

        private void IG160109_Enter(object sender, EventArgs e)
        {
            IG160109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160109);
            IG160109.SelectAll();
        }

        private void IG160209_Enter(object sender, EventArgs e)
        {
            IG160209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160209);
            IG160209.SelectAll();
        }

        private void IG160309_Enter(object sender, EventArgs e)
        {
            IG160309.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160309);
            IG160309.SelectAll();
        }

        private void IG160409_Enter(object sender, EventArgs e)
        {
            IG160409.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160409);
            IG160409.SelectAll();
        }

        private void IG160509_Enter(object sender, EventArgs e)
        {
            IG160509.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160509);
            IG160509.SelectAll();
        }

        private void IG160609_Enter(object sender, EventArgs e)
        {
            IG160609.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160609);
            IG160609.SelectAll();
        }

        private void IG160709_Enter(object sender, EventArgs e)
        {
            IG160709.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160709);
            IG160709.SelectAll();
        }

        private void IG160809_Enter(object sender, EventArgs e)
        {
            IG160809.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160809);
            IG160809.SelectAll();
        }

        private void IG160909_Enter(object sender, EventArgs e)
        {
            IG160909.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160909);
            IG160909.SelectAll();
        }

        private void IG1601009_Enter(object sender, EventArgs e)
        {
            IG1601009.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601009);
            IG1601009.SelectAll();
        }

        private void IG1601109_Enter(object sender, EventArgs e)
        {
            IG1601109.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601109);
            IG1601109.SelectAll();
        }

        private void IG1601209_Enter(object sender, EventArgs e)
        {
            IG1601209.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601209);
            IG1601209.SelectAll();
        }

        private void IG160110_Enter(object sender, EventArgs e)
        {
            IG160110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160110);
            IG160110.SelectAll();
        }

        private void IG160210_Enter(object sender, EventArgs e)
        {
            IG160210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160210);
            IG160210.SelectAll();
        }

        private void IG160310_Enter(object sender, EventArgs e)
        {
            IG160310.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160310);
            IG160310.SelectAll();
        }

        private void IG160410_Enter(object sender, EventArgs e)
        {
            IG160410.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160410);
            IG160410.SelectAll();
        }

        private void IG160510_Enter(object sender, EventArgs e)
        {
            IG160510.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160510);
            IG160510.SelectAll();
        }

        private void IG160610_Enter(object sender, EventArgs e)
        {
            IG160610.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160610);
            IG160610.SelectAll();
        }

        private void IG160710_Enter(object sender, EventArgs e)
        {
            IG160710.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160710);
            IG160710.SelectAll();
        }

        private void IG160810_Enter(object sender, EventArgs e)
        {
            IG160810.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160810);
            IG160810.SelectAll();
        }

        private void IG160910_Enter(object sender, EventArgs e)
        {
            IG160910.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160910);
            IG160910.SelectAll();
        }

        private void IG1601010_Enter(object sender, EventArgs e)
        {
            IG1601010.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601010);
            IG1601010.SelectAll();
        }

        private void IG1601110_Enter(object sender, EventArgs e)
        {
            IG1601110.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601110);
            IG1601110.SelectAll();
        }

        private void IG1601210_Enter(object sender, EventArgs e)
        {
            IG1601210.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601210);
            IG1601210.SelectAll();
        }

        private void chkMember11_Enter(object sender, EventArgs e)
        {
            chkMember11.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember11);
            chkMember11.SelectAll();
        }

        private void IG0411_Enter(object sender, EventArgs e)
        {
            IG0411.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0411);
            IG0411.SelectAll();
        }

        private void IG0511_Enter(object sender, EventArgs e)
        {
            IG0511.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0511);
            IG0511.SelectAll();
        }

        private void IG060111_Enter(object sender, EventArgs e)
        {
            IG060111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060111);
            IG060111.SelectAll();
        }

        private void IG060211_Enter(object sender, EventArgs e)
        {
            IG060211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060211);
            IG060211.SelectAll();
        }

        private void IG060311_Enter(object sender, EventArgs e)
        {
            IG060311.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060311);
            IG060311.SelectAll();
        }

        private void IG060411_Enter(object sender, EventArgs e)
        {
            IG060411.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060411);
            IG060411.SelectAll();
        }

        private void IG060511_Enter(object sender, EventArgs e)
        {
            IG060511.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060511);
            IG060511.SelectAll();
        }

        private void chkMember12_Enter(object sender, EventArgs e)
        {
            chkMember12.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember12);
            chkMember12.SelectAll();
        }

        private void IG0412_Enter(object sender, EventArgs e)
        {
            IG0412.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0412);
            IG0412.SelectAll();
        }

        private void IG0512_Enter(object sender, EventArgs e)
        {
            IG0512.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0512);
            IG0512.SelectAll();
        }

        private void IG060112_Enter(object sender, EventArgs e)
        {
            IG060112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060112);
            IG060112.SelectAll();
        }

        private void IG060212_Enter(object sender, EventArgs e)
        {
            IG060212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060212);
            IG060212.SelectAll();
        }

        private void IG060312_Enter(object sender, EventArgs e)
        {
            IG060312.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060312);
            IG060312.SelectAll();
        }

        private void IG060412_Enter(object sender, EventArgs e)
        {
            IG060412.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060412);
            IG060412.SelectAll();
        }

        private void IG060512_Enter(object sender, EventArgs e)
        {
            IG060512.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060512);
            IG060512.SelectAll();
        }

        private void chkMember13_Enter(object sender, EventArgs e)
        {
            chkMember13.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember13);
            chkMember13.SelectAll();
        }

        private void IG0413_Enter(object sender, EventArgs e)
        {
            IG0413.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0413);
            IG0413.SelectAll();
        }

        private void IG0513_Enter(object sender, EventArgs e)
        {
            IG0513.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0513);
            IG0513.SelectAll();
        }

        private void IG060113_Enter(object sender, EventArgs e)
        {
            IG060113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060113);
            IG060113.SelectAll();
        }

        private void IG060213_Enter(object sender, EventArgs e)
        {
            IG060213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060213);
            IG060213.SelectAll();
        }

        private void IG060313_Enter(object sender, EventArgs e)
        {
            IG060313.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060313);
            IG060313.SelectAll();
        }

        private void IG060413_Enter(object sender, EventArgs e)
        {
            IG060413.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060413);
            IG060413.SelectAll();
        }

        private void IG060513_Enter(object sender, EventArgs e)
        {
            IG060513.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060513);
            IG060513.SelectAll();
        }

        private void chkMember14_Enter(object sender, EventArgs e)
        {
            chkMember14.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember14);
            chkMember14.SelectAll();
        }

        private void IG0414_Enter(object sender, EventArgs e)
        {
            IG0414.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0414);
            IG0414.SelectAll();
        }

        private void IG0514_Enter(object sender, EventArgs e)
        {
            IG0514.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0514);
            IG0514.SelectAll();
        }

        private void IG060114_Enter(object sender, EventArgs e)
        {
            IG060114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060114);
            IG060114.SelectAll();
        }

        private void IG060214_Enter(object sender, EventArgs e)
        {
            IG060214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060214);
            IG060214.SelectAll();
        }

        private void IG060314_Enter(object sender, EventArgs e)
        {
            IG060314.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060314);
            IG060314.SelectAll();
        }

        private void IG060414_Enter(object sender, EventArgs e)
        {
            IG060414.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060414);
            IG060414.SelectAll();
        }

        private void IG060514_Enter(object sender, EventArgs e)
        {
            IG060514.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060514);
            IG060514.SelectAll();
        }

        private void chkMember15_Enter(object sender, EventArgs e)
        {
            chkMember15.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_chkMember15);
            chkMember15.SelectAll();
        }

        private void IG0415_Enter(object sender, EventArgs e)
        {
            IG0415.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0415);
            IG0415.SelectAll();
        }

        private void IG0515_Enter(object sender, EventArgs e)
        {
            IG0515.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0515);
            IG0515.SelectAll();
        }

        private void IG060115_Enter(object sender, EventArgs e)
        {
            IG060115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060115);
            IG060115.SelectAll();
        }

        private void IG060215_Enter(object sender, EventArgs e)
        {
            IG060215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060215);
            IG060215.SelectAll();
        }

        private void IG060315_Enter(object sender, EventArgs e)
        {
            IG060315.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060315);
            IG060315.SelectAll();
        }

        private void IG060415_Enter(object sender, EventArgs e)
        {
            IG060415.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060415);
            IG060415.SelectAll();
        }

        private void IG060515_Enter(object sender, EventArgs e)
        {
            IG060515.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG060515);
            IG060515.SelectAll();
        }

        private void IG070111_Enter(object sender, EventArgs e)
        {
            IG070111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070111);
            IG070111.SelectAll();
        }

        private void IG070211_Enter(object sender, EventArgs e)
        {
            IG070211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070211);
            IG070211.SelectAll();
        }

        private void IG070311_Enter(object sender, EventArgs e)
        {
            IG070311.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070311);
            IG070311.SelectAll();
        }

        private void IG070411_Enter(object sender, EventArgs e)
        {
            IG070411.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070411);
            IG070411.SelectAll();
        }

        private void IG070511_Enter(object sender, EventArgs e)
        {
            IG070511.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070511);
            IG070511.SelectAll();
        }

        private void IG070611_Enter(object sender, EventArgs e)
        {
            IG070611.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070611);
            IG070611.SelectAll();
        }

        private void IG070711_Enter(object sender, EventArgs e)
        {
            IG070711.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070711);
            IG070711.SelectAll();
        }

        private void IG070811_Enter(object sender, EventArgs e)
        {
            IG070811.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070811);
            IG070811.SelectAll();
        }

        private void IG070911_Enter(object sender, EventArgs e)
        {
            IG070911.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070911);
            IG070911.SelectAll();
        }

        private void IG0701011_Enter(object sender, EventArgs e)
        {
            IG0701011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701011);
            IG0701011.SelectAll();
        }

        private void IG0701111_Enter(object sender, EventArgs e)
        {
            IG0701111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701111);
            IG0701111.SelectAll();
        }

        private void IG0701211_Enter(object sender, EventArgs e)
        {
            IG0701211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701211);
            IG0701211.SelectAll();
        }

        private void IG0701311_Enter(object sender, EventArgs e)
        {
            IG0701311.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701311);
            IG0701311.SelectAll();
        }

        private void IG0811_Enter(object sender, EventArgs e)
        {
            IG0811.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0811);
            IG0811.SelectAll();
        }

        private void IG0911_Enter(object sender, EventArgs e)
        {
            IG0911.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0911);
            IG0911.SelectAll();
        }

        private void IG01011_Enter(object sender, EventArgs e)
        {
            IG01011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01011);
            IG01011.SelectAll();
        }

        private void IG01111_Enter(object sender, EventArgs e)
        {
            IG01111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01111);
            IG01111.SelectAll();
        }

        private void IG01211_Enter(object sender, EventArgs e)
        {
            IG01211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01211);
            IG01211.SelectAll();
        }

        private void IG01311_Enter(object sender, EventArgs e)
        {
            IG01311.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01311);
            IG01311.SelectAll();
        }

        private void IG01411_Enter(object sender, EventArgs e)
        {
            IG01411.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01411);
            IG01411.SelectAll();
        }

        private void IG01511_Enter(object sender, EventArgs e)
        {
            IG01511.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01511);
            IG01511.SelectAll();
        }

        private void IG070112_Enter(object sender, EventArgs e)
        {
            IG070112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070112);
            IG070112.SelectAll();
        }

        private void IG070212_Enter(object sender, EventArgs e)
        {
            IG070212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070212);
            IG070212.SelectAll();
        }

        private void IG070312_Enter(object sender, EventArgs e)
        {
            IG070312.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070312);
            IG070312.SelectAll();
        }

        private void IG070412_Enter(object sender, EventArgs e)
        {
            IG070412.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070412);
            IG070412.SelectAll();
        }

        private void IG070512_Enter(object sender, EventArgs e)
        {
            IG070512.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070512);
            IG070512.SelectAll();
        }

        private void IG070612_Enter(object sender, EventArgs e)
        {
            IG070612.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070612);
            IG070612.SelectAll();
        }

        private void IG070712_Enter(object sender, EventArgs e)
        {
            IG070712.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070712);
            IG070712.SelectAll();
        }

        private void IG070812_Enter(object sender, EventArgs e)
        {
            IG070812.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070812);
            IG070812.SelectAll();
        }

        private void IG070912_Enter(object sender, EventArgs e)
        {
            IG070912.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070912);
            IG070912.SelectAll();
        }

        private void IG0701012_Enter(object sender, EventArgs e)
        {
            IG0701012.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701012);
            IG0701012.SelectAll();
        }

        private void IG0701112_Enter(object sender, EventArgs e)
        {
            IG0701112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701112);
            IG0701112.SelectAll();
        }

        private void IG0701212_Enter(object sender, EventArgs e)
        {
            IG0701212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701212);
            IG0701212.SelectAll();
        }

        private void IG0701312_Enter(object sender, EventArgs e)
        {
            IG0701312.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701312);
            IG0701312.SelectAll();
        }

        private void IG0812_Enter(object sender, EventArgs e)
        {
            IG0812.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0812);
            IG0812.SelectAll();
        }

        private void IG0912_Enter(object sender, EventArgs e)
        {
            IG0912.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0912);
            IG0912.SelectAll();
        }

        private void IG01012_Enter(object sender, EventArgs e)
        {
            IG01012.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01012);
            IG01012.SelectAll();
        }

        private void IG01112_Enter(object sender, EventArgs e)
        {
            IG01112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01112);
            IG01112.SelectAll();
        }

        private void IG01212_Enter(object sender, EventArgs e)
        {
            IG01212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01212);
            IG01212.SelectAll();
        }

        private void IG01312_Enter(object sender, EventArgs e)
        {
            IG01312.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01312);
            IG01312.SelectAll();
        }

        private void IG01412_Enter(object sender, EventArgs e)
        {
            IG01412.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01412);
            IG01412.SelectAll();
        }

        private void IG01512_Enter(object sender, EventArgs e)
        {
            IG01512.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01512);
            IG01512.SelectAll();
        }

        private void IG070113_Enter(object sender, EventArgs e)
        {
            IG070113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070113);
            IG070113.SelectAll();
        }

        private void IG070213_Enter(object sender, EventArgs e)
        {
            IG070213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070213);
            IG070213.SelectAll();
        }

        private void IG070313_Enter(object sender, EventArgs e)
        {
            IG070313.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070313);
            IG070313.SelectAll();
        }

        private void IG070413_Enter(object sender, EventArgs e)
        {
            IG070413.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070413);
            IG070413.SelectAll();
        }

        private void IG070513_Enter(object sender, EventArgs e)
        {
            IG070513.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070513);
            IG070513.SelectAll();
        }

        private void IG070613_Enter(object sender, EventArgs e)
        {
            IG070613.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070613);
            IG070613.SelectAll();
        }

        private void IG070713_Enter(object sender, EventArgs e)
        {
            IG070713.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070713);
            IG070713.SelectAll();
        }

        private void IG070813_Enter(object sender, EventArgs e)
        {
            IG070813.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070813);
            IG070813.SelectAll();
        }

        private void IG070913_Enter(object sender, EventArgs e)
        {
            IG070913.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070913);
            IG070913.SelectAll();
        }

        private void IG0701013_Enter(object sender, EventArgs e)
        {
            IG0701013.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701013);
            IG0701013.SelectAll();
        }

        private void IG0701113_Enter(object sender, EventArgs e)
        {
            IG0701113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701113);
            IG0701113.SelectAll();
        }

        private void IG0701213_Enter(object sender, EventArgs e)
        {
            IG0701213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701213);
            IG0701213.SelectAll();
        }

        private void IG0701313_Enter(object sender, EventArgs e)
        {
            IG0701313.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701313);
            IG0701313.SelectAll();
        }

        private void IG0813_Enter(object sender, EventArgs e)
        {
            IG0813.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0813);
            IG0813.SelectAll();
        }

        private void IG0913_Enter(object sender, EventArgs e)
        {
            IG0913.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0913);
            IG0913.SelectAll();
        }

        private void IG01013_Enter(object sender, EventArgs e)
        {
            IG01013.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01013);
            IG01013.SelectAll();
        }

        private void IG01113_Enter(object sender, EventArgs e)
        {
            IG01113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01113);
            IG01113.SelectAll();
        }

        private void IG01213_Enter(object sender, EventArgs e)
        {
            IG01213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01213);
            IG01213.SelectAll();
        }

        private void IG01313_Enter(object sender, EventArgs e)
        {
            IG01313.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01313);
            IG01313.SelectAll();
        }

        private void IG01413_Enter(object sender, EventArgs e)
        {
            IG01413.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01413);
            IG01413.SelectAll();
        }

        private void IG01513_Enter(object sender, EventArgs e)
        {
            IG01513.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01513);
            IG01513.SelectAll();
        }

        private void IG070114_Enter(object sender, EventArgs e)
        {
            IG070114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070114);
            IG070114.SelectAll();
        }

        private void IG070214_Enter(object sender, EventArgs e)
        {
            IG070214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070214);
            IG070214.SelectAll();
        }

        private void IG070314_Enter(object sender, EventArgs e)
        {
            IG070314.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070314);
            IG070314.SelectAll();
        }

        private void IG070414_Enter(object sender, EventArgs e)
        {
            IG070414.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070414);
            IG070414.SelectAll();
        }

        private void IG070514_Enter(object sender, EventArgs e)
        {
            IG070514.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070514);
            IG070514.SelectAll();
        }

        private void IG070614_Enter(object sender, EventArgs e)
        {
            IG070614.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070614);
            IG070614.SelectAll();
        }

        private void IG070714_Enter(object sender, EventArgs e)
        {
            IG070714.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070714);
            IG070714.SelectAll();
        }

        private void IG070814_Enter(object sender, EventArgs e)
        {
            IG070814.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070814);
            IG070814.SelectAll();
        }

        private void IG070914_Enter(object sender, EventArgs e)
        {
            IG070914.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070914);
            IG070914.SelectAll();
        }

        private void IG0701014_Enter(object sender, EventArgs e)
        {
            IG0701014.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701014);
            IG0701014.SelectAll();
        }

        private void IG0701114_Enter(object sender, EventArgs e)
        {
            IG0701114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701114);
            IG0701114.SelectAll();
        }

        private void IG0701214_Enter(object sender, EventArgs e)
        {
            IG0701214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701214);
            IG0701214.SelectAll();
        }

        private void IG0701314_Enter(object sender, EventArgs e)
        {
            IG0701314.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701314);
            IG0701314.SelectAll();
        }

        private void IG0814_Enter(object sender, EventArgs e)
        {
            IG0814.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0814);
            IG0814.SelectAll();
        }

        private void IG0914_Enter(object sender, EventArgs e)
        {
            IG0914.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0914);
            IG0914.SelectAll();
        }

        private void IG01014_Enter(object sender, EventArgs e)
        {
            IG01014.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01014);
            IG01014.SelectAll();
        }

        private void IG01114_Enter(object sender, EventArgs e)
        {
            IG01114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01114);
            IG01114.SelectAll();
        }

        private void IG01214_Enter(object sender, EventArgs e)
        {
            IG01214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01214);
            IG01214.SelectAll();
        }

        private void IG01314_Enter(object sender, EventArgs e)
        {
            IG01314.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01314);
            IG01314.SelectAll();
        }

        private void IG01414_Enter(object sender, EventArgs e)
        {
            IG01414.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01414);
            IG01414.SelectAll();
        }

        private void IG01514_Enter(object sender, EventArgs e)
        {
            IG01514.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01514);
            IG01514.SelectAll();
        }

        private void IG070115_Enter(object sender, EventArgs e)
        {
            IG070115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070115);
            IG070115.SelectAll();
        }

        private void IG070215_Enter(object sender, EventArgs e)
        {
            IG070215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070215);
            IG070215.SelectAll();
        }

        private void IG070315_Enter(object sender, EventArgs e)
        {
            IG070315.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070315);
            IG070315.SelectAll();
        }

        private void IG070415_Enter(object sender, EventArgs e)
        {
            IG070415.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070415);
            IG070415.SelectAll();
        }

        private void IG070515_Enter(object sender, EventArgs e)
        {
            IG070515.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070515);
            IG070515.SelectAll();
        }

        private void IG070615_Enter(object sender, EventArgs e)
        {
            IG070615.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070615);
            IG070615.SelectAll();
        }

        private void IG070715_Enter(object sender, EventArgs e)
        {
            IG070715.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070715);
            IG070715.SelectAll();
        }

        private void IG070815_Enter(object sender, EventArgs e)
        {
            IG070815.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070815);
            IG070815.SelectAll();
        }

        private void IG070915_Enter(object sender, EventArgs e)
        {
            IG070915.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG070915);
            IG070915.SelectAll();
        }

        private void IG0701015_Enter(object sender, EventArgs e)
        {
            IG0701015.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701015);
            IG0701015.SelectAll();
        }

        private void IG0701115_Enter(object sender, EventArgs e)
        {
            IG0701115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701115);
            IG0701115.SelectAll();
        }

        private void IG0701215_Enter(object sender, EventArgs e)
        {
            IG0701215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701215);
            IG0701215.SelectAll();
        }

        private void IG0701315_Enter(object sender, EventArgs e)
        {
            IG0701315.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0701315);
            IG0701315.SelectAll();
        }

        private void IG0815_Enter(object sender, EventArgs e)
        {
            IG0815.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0815);
            IG0815.SelectAll();
        }

        private void IG0915_Enter(object sender, EventArgs e)
        {
            IG0915.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG0915);
            IG0915.SelectAll();
        }

        private void IG01015_Enter(object sender, EventArgs e)
        {
            IG01015.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01015);
            IG01015.SelectAll();
        }

        private void IG01115_Enter(object sender, EventArgs e)
        {
            IG01115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01115);
            IG01115.SelectAll();
        }

        private void IG01215_Enter(object sender, EventArgs e)
        {
            IG01215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01215);
            IG01215.SelectAll();
        }

        private void IG01315_Enter(object sender, EventArgs e)
        {
            IG01315.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01315);
            IG01315.SelectAll();
        }

        private void IG01415_Enter(object sender, EventArgs e)
        {
            IG01415.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01415);
            IG01415.SelectAll();
        }

        private void IG01515_Enter(object sender, EventArgs e)
        {
            IG01515.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG01515);
            IG01515.SelectAll();
        }

        private void IG160111_Enter(object sender, EventArgs e)
        {
            IG160111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160111);
            IG160111.SelectAll();
        }

        private void IG160211_Enter(object sender, EventArgs e)
        {
            IG160211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160211);
            IG160211.SelectAll();
        }

        private void IG160311_Enter(object sender, EventArgs e)
        {
            IG160311.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160311);
            IG160311.SelectAll();
        }

        private void IG160411_Enter(object sender, EventArgs e)
        {
            IG160411.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160411);
            IG160411.SelectAll();
        }

        private void IG160511_Enter(object sender, EventArgs e)
        {
            IG160511.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160511);
            IG160511.SelectAll();
        }

        private void IG160611_Enter(object sender, EventArgs e)
        {
            IG160611.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160611);
            IG160611.SelectAll();
        }

        private void IG160711_Enter(object sender, EventArgs e)
        {
            IG160711.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160711);
            IG160711.SelectAll();
        }

        private void IG160811_Enter(object sender, EventArgs e)
        {
            IG160811.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160811);
            IG160811.SelectAll();
        }

        private void IG160911_Enter(object sender, EventArgs e)
        {
            IG160911.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160911);
            IG160911.SelectAll();
        }

        private void IG1601011_Enter(object sender, EventArgs e)
        {
            IG1601011.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601011);
            IG1601011.SelectAll();
        }

        private void IG1601111_Enter(object sender, EventArgs e)
        {
            IG1601111.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601111);
            IG1601111.SelectAll();
        }

        private void IG1601211_Enter(object sender, EventArgs e)
        {
            IG1601211.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601211);
            IG1601211.SelectAll();
        }

        private void IG160112_Enter(object sender, EventArgs e)
        {
            IG160112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160112);
            IG160112.SelectAll();
        }

        private void IG160212_Enter(object sender, EventArgs e)
        {
            IG160212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160212);
            IG160212.SelectAll();
        }

        private void IG160312_Enter(object sender, EventArgs e)
        {
            IG160312.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160312);
            IG160312.SelectAll();
        }

        private void IG160412_Enter(object sender, EventArgs e)
        {
            IG160412.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160412);
            IG160412.SelectAll();
        }

        private void IG160512_Enter(object sender, EventArgs e)
        {
            IG160512.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160512);
            IG160512.SelectAll();
        }

        private void IG160612_Enter(object sender, EventArgs e)
        {
            IG160612.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160612);
            IG160612.SelectAll();
        }

        private void IG160712_Enter(object sender, EventArgs e)
        {
            IG160712.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160712);
            IG160712.SelectAll();
        }

        private void IG160812_Enter(object sender, EventArgs e)
        {
            IG160812.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160812);
            IG160812.SelectAll();
        }

        private void IG160912_Enter(object sender, EventArgs e)
        {
            IG160912.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160912);
            IG160912.SelectAll();
        }

        private void IG1601012_Enter(object sender, EventArgs e)
        {
            IG1601012.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601012);
            IG1601012.SelectAll();
        }

        private void IG1601112_Enter(object sender, EventArgs e)
        {
            IG1601112.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601112);
            IG1601112.SelectAll();
        }

        private void IG1601212_Enter(object sender, EventArgs e)
        {
            IG1601212.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601212);
            IG1601212.SelectAll();
        }

        private void IG160113_Enter(object sender, EventArgs e)
        {
            IG160113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160113);
            IG160113.SelectAll();
        }

        private void IG160213_Enter(object sender, EventArgs e)
        {
            IG160213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160213);
            IG160213.SelectAll();
        }

        private void IG160313_Enter(object sender, EventArgs e)
        {
            IG160313.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160313);
            IG160313.SelectAll();
        }

        private void IG160413_Enter(object sender, EventArgs e)
        {
            IG160413.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160413);
            IG160413.SelectAll();
        }

        private void IG160513_Enter(object sender, EventArgs e)
        {
            IG160513.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160513);
            IG160513.SelectAll();
        }

        private void IG160613_Enter(object sender, EventArgs e)
        {
            IG160613.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160613);
            IG160613.SelectAll();
        }

        private void IG160713_Enter(object sender, EventArgs e)
        {
            IG160713.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160713);
            IG160713.SelectAll();
        }

        private void IG160813_Enter(object sender, EventArgs e)
        {
            IG160813.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160813);
            IG160813.SelectAll();
        }

        private void IG160913_Enter(object sender, EventArgs e)
        {
            IG160913.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160913);
            IG160913.SelectAll();
        }

        private void IG1601013_Enter(object sender, EventArgs e)
        {
            IG1601013.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601013);
            IG1601013.SelectAll();
        }

        private void IG1601113_Enter(object sender, EventArgs e)
        {
            IG1601113.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601113);
            IG1601113.SelectAll();
        }

        private void IG1601213_Enter(object sender, EventArgs e)
        {
            IG1601213.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601213);
            IG1601213.SelectAll();
        }

        private void IG160114_Enter(object sender, EventArgs e)
        {
            IG160114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160114);
            IG160114.SelectAll();
        }

        private void IG160214_Enter(object sender, EventArgs e)
        {
            IG160214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160214);
            IG160214.SelectAll();
        }

        private void IG160314_Enter(object sender, EventArgs e)
        {
            IG160314.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160314);
            IG160314.SelectAll();
        }

        private void IG160414_Enter(object sender, EventArgs e)
        {
            IG160414.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160414);
            IG160414.SelectAll();
        }

        private void IG160514_Enter(object sender, EventArgs e)
        {
            IG160514.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160514);
            IG160514.SelectAll();
        }

        private void IG160614_Enter(object sender, EventArgs e)
        {
            IG160614.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160614);
            IG160614.SelectAll();
        }

        private void IG160714_Enter(object sender, EventArgs e)
        {
            IG160714.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160714);
            IG160714.SelectAll();
        }

        private void IG160814_Enter(object sender, EventArgs e)
        {
            IG160814.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160814);
            IG160814.SelectAll();
        }

        private void IG160914_Enter(object sender, EventArgs e)
        {
            IG160914.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160914);
            IG160914.SelectAll();
        }

        private void IG1601014_Enter(object sender, EventArgs e)
        {
            IG1601014.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601014);
            IG1601014.SelectAll();
        }

        private void IG1601114_Enter(object sender, EventArgs e)
        {
            IG1601114.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601114);
            IG1601114.SelectAll();
        }

        private void IG1601214_Enter(object sender, EventArgs e)
        {
            IG1601214.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601214);
            IG1601214.SelectAll();
        }

        private void IG160115_Enter(object sender, EventArgs e)
        {
            IG160115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160115);
            IG160115.SelectAll();
        }

        private void IG160215_Enter(object sender, EventArgs e)
        {
            IG160215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160215);
            IG160215.SelectAll();
        }

        private void IG160315_Enter(object sender, EventArgs e)
        {
            IG160315.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160315);
            IG160315.SelectAll();
        }

        private void IG160415_Enter(object sender, EventArgs e)
        {
            IG160415.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160415);
            IG160415.SelectAll();
        }

        private void IG160515_Enter(object sender, EventArgs e)
        {
            IG160515.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160515);
            IG160515.SelectAll();
        }

        private void IG160615_Enter(object sender, EventArgs e)
        {
            IG160615.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160615);
            IG160615.SelectAll();
        }

        private void IG160715_Enter(object sender, EventArgs e)
        {
            IG160715.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160715);
            IG160715.SelectAll();
        }

        private void IG160815_Enter(object sender, EventArgs e)
        {
            IG160815.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160815);
            IG160815.SelectAll();
        }

        private void IG160915_Enter(object sender, EventArgs e)
        {
            IG160915.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG160915);
            IG160915.SelectAll();
        }

        private void IG1601015_Enter(object sender, EventArgs e)
        {
            IG1601015.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601015);
            IG1601015.SelectAll();
        }

        private void IG1601115_Enter(object sender, EventArgs e)
        {
            IG1601115.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601115);
            IG1601115.SelectAll();
        }

        private void IG1601215_Enter(object sender, EventArgs e)
        {
            IG1601215.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IG1601215);
            IG1601215.SelectAll();
        }

        private void SearchRecord()
        {
            DataSet ds = null;
            CDBOperations obj_op = null;

            try
            {
                ds = new DataSet();

                if (CVariables.IsUserFirstOrSecond == "User1")
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1bl where form_id='" + FORM_ID.Text + "'", "0", FORM_ID.Text);
                }
                else if (CVariables.IsUserFirstOrSecond == "User2")
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1bl where form_id='" + FORM_ID.Text + "'", "1", FORM_ID.Text);
                }


                maskedTextBox1.Text = "";
                cmdDelete.Visible = false;


                if (ds != null)
                {
                    if (ds.Tables.Count > 0)
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            IsSearch = true;
                            IsUpdate = true;


                            if (CVariables.IsAdmin == false)
                            {
                                cmdDelete.Visible = false;
                            }
                            else
                            {
                                cmdDelete.Visible = true;
                            }


                            if (ds.Tables[0].Rows[0]["IA01"].ToString() == null)
                            {
                                IA01.Text = "";
                            }
                            else
                            {
                                IA01.Text = ds.Tables[0].Rows[0]["IA01"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IA02"].ToString() == null)
                            {
                                IA02.Text = "";
                            }
                            else
                            {
                                IA02.Text = ds.Tables[0].Rows[0]["IA02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IA03"].ToString() == null)
                            {
                                IA03.Text = "";
                            }
                            else
                            {
                                IA03.Text = ds.Tables[0].Rows[0]["IA03"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IA04"].ToString() == null)
                            {
                                IA04.Text = "";
                            }
                            else
                            {
                                IA04.Text = ds.Tables[0].Rows[0]["IA04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IA05"].ToString() == null)
                            {
                                IA05.Text = "";
                            }
                            else
                            {
                                IA05.Text = ds.Tables[0].Rows[0]["IA05"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB01"].ToString() == null)
                            {
                                IB01.Text = "";
                            }
                            else
                            {
                                IB01.Text = ds.Tables[0].Rows[0]["IB01"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB02"].ToString() == null)
                            {
                                IB02.Text = "";
                            }
                            else
                            {
                                IB02.Text = ds.Tables[0].Rows[0]["IB02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB03"].ToString() == null)
                            {
                                IB03.Text = "";
                            }
                            else
                            {
                                IB03.Text = ds.Tables[0].Rows[0]["IB03"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB04"].ToString() == null)
                            {
                                IB04.Text = "";
                            }
                            else
                            {
                                IB04.Text = ds.Tables[0].Rows[0]["IB04"].ToString();
                            }



                            if (ds.Tables[0].Rows[0]["IB04a"].ToString() == null)
                            {
                                IB04a.Text = "";
                            }
                            else
                            {
                                IB04a.Text = ds.Tables[0].Rows[0]["IB04a"].ToString();
                            }




                            if (ds.Tables[0].Rows[0]["IB05"].ToString() == null)
                            {
                                IB05.Text = "";
                            }
                            else
                            {
                                IB05.Text = ds.Tables[0].Rows[0]["IB05"].ToString();

                                if (IB05.Text == "1")
                                {
                                    Consent_Yes();
                                }
                                else
                                {
                                    Consent_No();
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IB06"].ToString() == null)
                            {
                                IB06.Text = "";
                            }
                            else
                            {
                                IB06.Text = ds.Tables[0].Rows[0]["IB06"].ToString();
                            }



                            if (ds.Tables[0].Rows[0]["IB010"].ToString() == null)
                            {
                                IB010.Text = "";
                            }
                            else
                            {
                                IB010.Text = ds.Tables[0].Rows[0]["IB010"].ToString();
                            }


                            if (ds.Tables[0].Rows[0]["IB07"].ToString() == null)
                            {
                                IB07.Text = "";
                            }
                            else
                            {
                                IB07.Text = ds.Tables[0].Rows[0]["IB07"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB08"].ToString() == null)
                            {
                                IB08.Text = "";
                            }
                            else
                            {
                                IB08.Text = ds.Tables[0].Rows[0]["IB08"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IB08.Text == "1")
                                    {
                                        obj_op.DisableControls(IB0901);
                                        obj_op.DisableControls(IB0902);
                                        obj_op.DisableControls(IB0903);
                                        obj_op.DisableControls(IB0996);
                                    }
                                    else if (IB08.Text == "4")
                                    {
                                        obj_op.DisableControls(IB0901);
                                        obj_op.DisableControls(IB0902);
                                        obj_op.DisableControls(IB0903);
                                        obj_op.DisableControls(IB0996);
                                    }
                                    else
                                    {
                                        obj_op.EnableControls(IB0901);
                                        obj_op.EnableControls(IB0902);
                                        obj_op.EnableControls(IB0903);
                                        obj_op.EnableControls(IB0996);
                                    }
                                }


                            }


                            if (ds.Tables[0].Rows[0]["IB0901"].ToString() == null)
                            {
                                IB0901.Text = "";
                            }
                            else
                            {
                                IB0901.Text = ds.Tables[0].Rows[0]["IB0901"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB0902"].ToString() == null)
                            {
                                IB0902.Text = "";
                            }
                            else
                            {
                                IB0902.Text = ds.Tables[0].Rows[0]["IB0902"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB0903"].ToString() == null)
                            {
                                IB0903.Text = "";
                            }
                            else
                            {
                                IB0903.Text = ds.Tables[0].Rows[0]["IB0903"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IB0996"].ToString() == null)
                            {
                                IB0996.Text = "";
                            }
                            else
                            {
                                IB0996.Text = ds.Tables[0].Rows[0]["IB0996"].ToString();
                            }




                            if (ds.Tables[0].Rows[0]["IB011"].ToString() == null)
                            {
                                IB011.Text = "";
                            }
                            else
                            {
                                IB011.Text = ds.Tables[0].Rows[0]["IB011"].ToString();
                            }




                            if (ds.Tables[0].Rows[0]["IC01"].ToString() == null)
                            {
                                IC01.Text = "";
                            }
                            else
                            {
                                IC01.Text = ds.Tables[0].Rows[0]["IC01"].ToString();


                                if (IB05.Text == "1")
                                {

                                    if (IC01.Text == "0")
                                    {
                                        obj_op.DisableControls(IC02);
                                        obj_op.DisableControls(IC03);
                                        obj_op.DisableControls(IC04);
                                        obj_op.DisableControls(IC05);


                                        obj_op.DisableControls(chkBaby1);
                                        obj_op.DisableControls(IC0601);
                                        obj_op.DisableControls(IC0701);
                                        obj_op.DisableControls(IC0801);
                                        obj_op.DisableControls(IC0901);
                                        obj_op.DisableControls(IC01001);
                                        obj_op.DisableControls(IC01101);


                                        obj_op.DisableControls(chkBaby2);
                                        obj_op.DisableControls(IC0602);
                                        obj_op.DisableControls(IC0702);
                                        obj_op.DisableControls(IC0802);
                                        obj_op.DisableControls(IC0902);
                                        obj_op.DisableControls(IC01002);
                                        obj_op.DisableControls(IC01102);


                                        obj_op.DisableControls(chkBaby3);
                                        obj_op.DisableControls(IC0603);
                                        obj_op.DisableControls(IC0703);
                                        obj_op.DisableControls(IC0803);
                                        obj_op.DisableControls(IC0903);
                                        obj_op.DisableControls(IC01003);
                                        obj_op.DisableControls(IC01103);


                                        obj_op.DisableControls(chkBaby4);
                                        obj_op.DisableControls(IC0604);
                                        obj_op.DisableControls(IC0704);
                                        obj_op.DisableControls(IC0804);
                                        obj_op.DisableControls(IC0904);
                                        obj_op.DisableControls(IC01004);
                                        obj_op.DisableControls(IC01104);

                                        obj_op.DisableControls(ID01);


                                    }
                                    else if (IC01.Text == "99")
                                    {

                                        obj_op.DisableControls(IC02);
                                        obj_op.DisableControls(IC03);
                                        obj_op.DisableControls(IC04);
                                        obj_op.DisableControls(IC05);


                                        obj_op.DisableControls(chkBaby1);
                                        obj_op.DisableControls(IC0601);
                                        obj_op.DisableControls(IC0701);
                                        obj_op.DisableControls(IC0801);
                                        obj_op.DisableControls(IC0901);
                                        obj_op.DisableControls(IC01001);
                                        obj_op.DisableControls(IC01101);


                                        obj_op.DisableControls(chkBaby2);
                                        obj_op.DisableControls(IC0602);
                                        obj_op.DisableControls(IC0702);
                                        obj_op.DisableControls(IC0802);
                                        obj_op.DisableControls(IC0902);
                                        obj_op.DisableControls(IC01002);
                                        obj_op.DisableControls(IC01102);


                                        obj_op.DisableControls(chkBaby3);
                                        obj_op.DisableControls(IC0603);
                                        obj_op.DisableControls(IC0703);
                                        obj_op.DisableControls(IC0803);
                                        obj_op.DisableControls(IC0903);
                                        obj_op.DisableControls(IC01003);
                                        obj_op.DisableControls(IC01103);


                                        obj_op.DisableControls(chkBaby4);
                                        obj_op.DisableControls(IC0604);
                                        obj_op.DisableControls(IC0704);
                                        obj_op.DisableControls(IC0804);
                                        obj_op.DisableControls(IC0904);
                                        obj_op.DisableControls(IC01004);
                                        obj_op.DisableControls(IC01104);

                                        obj_op.EnableControls(ID01);

                                    }
                                    else
                                    {
                                        obj_op.EnableControls(IC02);
                                        obj_op.EnableControls(IC03);
                                        obj_op.EnableControls(IC04);
                                        obj_op.EnableControls(IC05);


                                        obj_op.EnableControls(chkBaby1);
                                        obj_op.EnableControls(IC0601);
                                        obj_op.EnableControls(IC0701);
                                        obj_op.EnableControls(IC0801);
                                        obj_op.EnableControls(IC0901);
                                        obj_op.EnableControls(IC01001);
                                        obj_op.EnableControls(IC01101);


                                        obj_op.EnableControls(chkBaby2);
                                        obj_op.EnableControls(IC0602);
                                        obj_op.EnableControls(IC0702);
                                        obj_op.EnableControls(IC0802);
                                        obj_op.EnableControls(IC0902);
                                        obj_op.EnableControls(IC01002);
                                        obj_op.EnableControls(IC01102);


                                        obj_op.EnableControls(chkBaby3);
                                        obj_op.EnableControls(IC0603);
                                        obj_op.EnableControls(IC0703);
                                        obj_op.EnableControls(IC0803);
                                        obj_op.EnableControls(IC0903);
                                        obj_op.EnableControls(IC01003);
                                        obj_op.EnableControls(IC01103);



                                        obj_op.EnableControls(chkBaby4);
                                        obj_op.EnableControls(IC0604);
                                        obj_op.EnableControls(IC0704);
                                        obj_op.EnableControls(IC0804);
                                        obj_op.EnableControls(IC0904);
                                        obj_op.EnableControls(IC01004);
                                        obj_op.EnableControls(IC01104);

                                        obj_op.EnableControls(ID01);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC02"].ToString() == null)
                            {
                                IC02.Text = "";
                            }
                            else
                            {
                                IC02.Text = ds.Tables[0].Rows[0]["IC02"].ToString();


                                if (IB05.Text == "1")
                                {

                                    if (IC02.Text == "0")
                                    {
                                        obj_op.DisableControls(IC03);
                                        obj_op.DisableControls(IC04);
                                        obj_op.DisableControls(IC05);

                                        obj_op.DisableControls(chkBaby1);
                                        obj_op.DisableControls(IC0601);
                                        obj_op.DisableControls(IC0701);
                                        obj_op.DisableControls(IC0801);
                                        obj_op.DisableControls(IC0901);
                                        obj_op.DisableControls(IC01001);
                                        obj_op.DisableControls(IC01101);


                                        obj_op.DisableControls(chkBaby2);
                                        obj_op.DisableControls(IC0602);
                                        obj_op.DisableControls(IC0702);
                                        obj_op.DisableControls(IC0802);
                                        obj_op.DisableControls(IC0902);
                                        obj_op.DisableControls(IC01002);
                                        obj_op.DisableControls(IC01102);


                                        obj_op.DisableControls(chkBaby3);
                                        obj_op.DisableControls(IC0603);
                                        obj_op.DisableControls(IC0703);
                                        obj_op.DisableControls(IC0803);
                                        obj_op.DisableControls(IC0903);
                                        obj_op.DisableControls(IC01003);
                                        obj_op.DisableControls(IC01103);


                                        obj_op.DisableControls(chkBaby4);
                                        obj_op.DisableControls(IC0604);
                                        obj_op.DisableControls(IC0704);
                                        obj_op.DisableControls(IC0804);
                                        obj_op.DisableControls(IC0904);
                                        obj_op.DisableControls(IC01004);
                                        obj_op.DisableControls(IC01104);

                                        obj_op.DisableControls(ID01);

                                    }
                                    else if (IC02.Text == "99")
                                    {

                                        obj_op.DisableControls(IC03);
                                        obj_op.DisableControls(IC04);
                                        obj_op.DisableControls(IC05);


                                        obj_op.DisableControls(chkBaby1);
                                        obj_op.DisableControls(IC0601);
                                        obj_op.DisableControls(IC0701);
                                        obj_op.DisableControls(IC0801);
                                        obj_op.DisableControls(IC0901);
                                        obj_op.DisableControls(IC01001);
                                        obj_op.DisableControls(IC01101);


                                        obj_op.DisableControls(chkBaby2);
                                        obj_op.DisableControls(IC0602);
                                        obj_op.DisableControls(IC0702);
                                        obj_op.DisableControls(IC0802);
                                        obj_op.DisableControls(IC0902);
                                        obj_op.DisableControls(IC01002);
                                        obj_op.DisableControls(IC01102);


                                        obj_op.DisableControls(chkBaby3);
                                        obj_op.DisableControls(IC0603);
                                        obj_op.DisableControls(IC0703);
                                        obj_op.DisableControls(IC0803);
                                        obj_op.DisableControls(IC0903);
                                        obj_op.DisableControls(IC01003);
                                        obj_op.DisableControls(IC01103);


                                        obj_op.DisableControls(chkBaby4);
                                        obj_op.DisableControls(IC0604);
                                        obj_op.DisableControls(IC0704);
                                        obj_op.DisableControls(IC0804);
                                        obj_op.DisableControls(IC0904);
                                        obj_op.DisableControls(IC01004);
                                        obj_op.DisableControls(IC01104);

                                        obj_op.EnableControls(ID01);

                                    }
                                    else
                                    {

                                        obj_op.EnableControls(IC03);
                                        obj_op.EnableControls(IC04);
                                        obj_op.EnableControls(IC05);

                                        obj_op.EnableControls(chkBaby1);
                                        obj_op.EnableControls(IC0601);
                                        obj_op.EnableControls(IC0701);
                                        obj_op.EnableControls(IC0801);
                                        obj_op.EnableControls(IC0901);
                                        obj_op.EnableControls(IC01001);
                                        obj_op.EnableControls(IC01101);


                                        obj_op.EnableControls(chkBaby2);
                                        obj_op.EnableControls(IC0602);
                                        obj_op.EnableControls(IC0702);
                                        obj_op.EnableControls(IC0802);
                                        obj_op.EnableControls(IC0902);
                                        obj_op.EnableControls(IC01002);
                                        obj_op.EnableControls(IC01102);


                                        obj_op.EnableControls(chkBaby3);
                                        obj_op.EnableControls(IC0603);
                                        obj_op.EnableControls(IC0703);
                                        obj_op.EnableControls(IC0803);
                                        obj_op.EnableControls(IC0903);
                                        obj_op.EnableControls(IC01003);
                                        obj_op.EnableControls(IC01103);


                                        obj_op.EnableControls(chkBaby4);
                                        obj_op.EnableControls(IC0604);
                                        obj_op.EnableControls(IC0704);
                                        obj_op.EnableControls(IC0804);
                                        obj_op.EnableControls(IC0904);
                                        obj_op.EnableControls(IC01004);
                                        obj_op.EnableControls(IC01104);

                                        obj_op.EnableControls(ID01);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC03"].ToString() == null)
                            {
                                IC03.Text = "";
                            }
                            else
                            {
                                IC03.Text = ds.Tables[0].Rows[0]["IC03"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC04"].ToString() == null)
                            {
                                IC04.Text = "";
                            }
                            else
                            {
                                IC04.Text = ds.Tables[0].Rows[0]["IC04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC05"].ToString() == null)
                            {
                                IC05.Text = "";
                            }
                            else
                            {
                                IC05.Text = ds.Tables[0].Rows[0]["IC05"].ToString();

                                if (IB05.Text == "1")
                                {

                                    if (IC05.Text == "0")
                                    {

                                        obj_op.DisableControls(chkBaby1);
                                        obj_op.DisableControls(IC0601);
                                        obj_op.DisableControls(IC0701);
                                        obj_op.DisableControls(IC0801);
                                        obj_op.DisableControls(IC0901);
                                        obj_op.DisableControls(IC01001);
                                        obj_op.DisableControls(IC01101);


                                        obj_op.DisableControls(chkBaby2);
                                        obj_op.DisableControls(IC0602);
                                        obj_op.DisableControls(IC0702);
                                        obj_op.DisableControls(IC0802);
                                        obj_op.DisableControls(IC0902);
                                        obj_op.DisableControls(IC01002);
                                        obj_op.DisableControls(IC01102);


                                        obj_op.DisableControls(chkBaby3);
                                        obj_op.DisableControls(IC0603);
                                        obj_op.DisableControls(IC0703);
                                        obj_op.DisableControls(IC0803);
                                        obj_op.DisableControls(IC0903);
                                        obj_op.DisableControls(IC01003);
                                        obj_op.DisableControls(IC01103);


                                        obj_op.DisableControls(chkBaby4);
                                        obj_op.DisableControls(IC0604);
                                        obj_op.DisableControls(IC0704);
                                        obj_op.DisableControls(IC0804);
                                        obj_op.DisableControls(IC0904);
                                        obj_op.DisableControls(IC01004);
                                        obj_op.DisableControls(IC01104);

                                    }
                                    else if (!string.IsNullOrEmpty(IC05.Text))
                                    {

                                        if (Convert.ToInt32(IC05.Text) > 1 && Convert.ToInt32(IC05.Text) < 4)
                                        {

                                            obj_op.EnableControls(chkBaby1);
                                            obj_op.EnableControls(IC0601);
                                            obj_op.EnableControls(IC0701);
                                            obj_op.EnableControls(IC0801);
                                            obj_op.EnableControls(IC0901);
                                            obj_op.EnableControls(IC01001);
                                            obj_op.EnableControls(IC01101);

                                            obj_op.EnableControls(chkBaby2);
                                            obj_op.EnableControls(IC0602);
                                            obj_op.EnableControls(IC0702);
                                            obj_op.EnableControls(IC0802);
                                            obj_op.EnableControls(IC0902);
                                            obj_op.EnableControls(IC01002);
                                            obj_op.EnableControls(IC01102);

                                            obj_op.EnableControls(chkBaby3);
                                            obj_op.EnableControls(IC0603);
                                            obj_op.EnableControls(IC0703);
                                            obj_op.EnableControls(IC0803);
                                            obj_op.EnableControls(IC0903);
                                            obj_op.EnableControls(IC01003);
                                            obj_op.EnableControls(IC01103);

                                            obj_op.EnableControls(chkBaby4);
                                            obj_op.EnableControls(IC0604);
                                            obj_op.EnableControls(IC0704);
                                            obj_op.EnableControls(IC0804);
                                            obj_op.EnableControls(IC0904);
                                            obj_op.EnableControls(IC01004);
                                            obj_op.EnableControls(IC01104);



                                            obj_op.DisableControls(IC0605);
                                            obj_op.DisableControls(IC0705);
                                            obj_op.DisableControls(IC0805);
                                            obj_op.DisableControls(IC0905);
                                            obj_op.DisableControls(IC01005);
                                            obj_op.DisableControls(IC01105);

                                            obj_op.DisableControls(IC0606);
                                            obj_op.DisableControls(IC0706);
                                            obj_op.DisableControls(IC0806);
                                            obj_op.DisableControls(IC0906);
                                            obj_op.DisableControls(IC01006);
                                            obj_op.DisableControls(IC01106);

                                            obj_op.DisableControls(IC0607);
                                            obj_op.DisableControls(IC0707);
                                            obj_op.DisableControls(IC0807);
                                            obj_op.DisableControls(IC0907);
                                            obj_op.DisableControls(IC01007);
                                            obj_op.DisableControls(IC01107);

                                            obj_op.DisableControls(IC0608);
                                            obj_op.DisableControls(IC0708);
                                            obj_op.DisableControls(IC0808);
                                            obj_op.DisableControls(IC0908);
                                            obj_op.DisableControls(IC01008);
                                            obj_op.DisableControls(IC01108);

                                            obj_op.DisableControls(IC0609);
                                            obj_op.DisableControls(IC0709);
                                            obj_op.DisableControls(IC0809);
                                            obj_op.DisableControls(IC0909);
                                            obj_op.DisableControls(IC01009);
                                            obj_op.DisableControls(IC01109);

                                            obj_op.DisableControls(IC06010);
                                            obj_op.DisableControls(IC07010);
                                            obj_op.DisableControls(IC08010);
                                            obj_op.DisableControls(IC09010);
                                            obj_op.DisableControls(IC01010);
                                            obj_op.DisableControls(IC01110);

                                            obj_op.DisableControls(IC06011);
                                            obj_op.DisableControls(IC07011);
                                            obj_op.DisableControls(IC08011);
                                            obj_op.DisableControls(IC09011);
                                            obj_op.DisableControls(IC01011);
                                            obj_op.DisableControls(IC01111);

                                        }
                                        else if (Convert.ToInt32(IC05.Text) > 5)
                                        {

                                            obj_op.EnableControls(chkBaby1);
                                            obj_op.EnableControls(IC0601);
                                            obj_op.EnableControls(IC0701);
                                            obj_op.EnableControls(IC0801);
                                            obj_op.EnableControls(IC0901);
                                            obj_op.EnableControls(IC01001);
                                            obj_op.EnableControls(IC01101);


                                            obj_op.EnableControls(chkBaby2);
                                            obj_op.EnableControls(IC0602);
                                            obj_op.EnableControls(IC0702);
                                            obj_op.EnableControls(IC0802);
                                            obj_op.EnableControls(IC0902);
                                            obj_op.EnableControls(IC01002);
                                            obj_op.EnableControls(IC01102);


                                            obj_op.EnableControls(chkBaby3);
                                            obj_op.EnableControls(IC0603);
                                            obj_op.EnableControls(IC0703);
                                            obj_op.EnableControls(IC0803);
                                            obj_op.EnableControls(IC0903);
                                            obj_op.EnableControls(IC01003);
                                            obj_op.EnableControls(IC01103);


                                            obj_op.EnableControls(chkBaby4);
                                            obj_op.EnableControls(IC0604);
                                            obj_op.EnableControls(IC0704);
                                            obj_op.EnableControls(IC0804);
                                            obj_op.EnableControls(IC0904);
                                            obj_op.EnableControls(IC01004);
                                            obj_op.EnableControls(IC01104);



                                            obj_op.EnableControls(IC0605);
                                            obj_op.EnableControls(IC0705);
                                            obj_op.EnableControls(IC0805);
                                            obj_op.EnableControls(IC0905);
                                            obj_op.EnableControls(IC01005);
                                            obj_op.EnableControls(IC01105);

                                            obj_op.EnableControls(IC0606);
                                            obj_op.EnableControls(IC0706);
                                            obj_op.EnableControls(IC0806);
                                            obj_op.EnableControls(IC0906);
                                            obj_op.EnableControls(IC01006);
                                            obj_op.EnableControls(IC01106);

                                            obj_op.EnableControls(IC0607);
                                            obj_op.EnableControls(IC0707);
                                            obj_op.EnableControls(IC0807);
                                            obj_op.EnableControls(IC0907);
                                            obj_op.EnableControls(IC01007);
                                            obj_op.EnableControls(IC01107);

                                            obj_op.EnableControls(IC0608);
                                            obj_op.EnableControls(IC0708);
                                            obj_op.EnableControls(IC0808);
                                            obj_op.EnableControls(IC0908);
                                            obj_op.EnableControls(IC01008);
                                            obj_op.EnableControls(IC01108);

                                            obj_op.EnableControls(IC0609);
                                            obj_op.EnableControls(IC0709);
                                            obj_op.EnableControls(IC0809);
                                            obj_op.EnableControls(IC0909);
                                            obj_op.EnableControls(IC01009);
                                            obj_op.EnableControls(IC01109);

                                            obj_op.EnableControls(IC06010);
                                            obj_op.EnableControls(IC07010);
                                            obj_op.EnableControls(IC08010);
                                            obj_op.EnableControls(IC09010);
                                            obj_op.EnableControls(IC01010);
                                            obj_op.EnableControls(IC01110);

                                            obj_op.EnableControls(IC06011);
                                            obj_op.EnableControls(IC07011);
                                            obj_op.EnableControls(IC08011);
                                            obj_op.EnableControls(IC09011);
                                            obj_op.EnableControls(IC01011);
                                            obj_op.EnableControls(IC01111);


                                        }

                                    }
                                    else
                                    {
                                        if (IC01.Text != "0")
                                        {
                                            if (IC02.Text != "0")
                                            {

                                                obj_op.EnableControls(chkBaby1);
                                                obj_op.EnableControls(IC0601);
                                                obj_op.EnableControls(IC0701);
                                                obj_op.EnableControls(IC0801);
                                                obj_op.EnableControls(IC0901);
                                                obj_op.EnableControls(IC01001);
                                                obj_op.EnableControls(IC01101);

                                                obj_op.EnableControls(chkBaby2);
                                                obj_op.EnableControls(IC0602);
                                                obj_op.EnableControls(IC0702);
                                                obj_op.EnableControls(IC0802);
                                                obj_op.EnableControls(IC0902);
                                                obj_op.EnableControls(IC01002);
                                                obj_op.EnableControls(IC01102);

                                                obj_op.EnableControls(chkBaby3);
                                                obj_op.EnableControls(IC0603);
                                                obj_op.EnableControls(IC0703);
                                                obj_op.EnableControls(IC0803);
                                                obj_op.EnableControls(IC0903);
                                                obj_op.EnableControls(IC01003);
                                                obj_op.EnableControls(IC01103);

                                                obj_op.EnableControls(chkBaby4);
                                                obj_op.EnableControls(IC0604);
                                                obj_op.EnableControls(IC0704);
                                                obj_op.EnableControls(IC0804);
                                                obj_op.EnableControls(IC0904);
                                                obj_op.EnableControls(IC01004);
                                                obj_op.EnableControls(IC01104);

                                            }


                                        }


                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby1"].ToString() == null)
                            {
                                chkBaby1.Text = "";
                            }
                            else
                            {
                                chkBaby1.Text = ds.Tables[0].Rows[0]["chkBaby1"].ToString();


                                if (IB05.Text == "1")
                                {

                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {

                                            if (chkBaby1.Text == "1")
                                            {
                                                obj_op.EnableControls(IC0601);
                                                obj_op.EnableControls(IC0701);
                                                obj_op.EnableControls(IC0801);
                                                obj_op.EnableControls(IC0901);
                                                obj_op.EnableControls(IC01001);
                                                obj_op.EnableControls(IC01101);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IC0601);
                                                obj_op.DisableControls(IC0701);
                                                obj_op.DisableControls(IC0801);
                                                obj_op.DisableControls(IC0901);
                                                obj_op.DisableControls(IC01001);
                                                obj_op.DisableControls(IC01101);


                                                obj_op.DisableControls(IC0602);
                                                obj_op.DisableControls(IC0702);
                                                obj_op.DisableControls(IC0802);
                                                obj_op.DisableControls(IC0902);
                                                obj_op.DisableControls(IC01002);
                                                obj_op.DisableControls(IC01102);


                                                obj_op.DisableControls(IC0603);
                                                obj_op.DisableControls(IC0703);
                                                obj_op.DisableControls(IC0803);
                                                obj_op.DisableControls(IC0903);
                                                obj_op.DisableControls(IC01003);
                                                obj_op.DisableControls(IC01103);


                                                obj_op.DisableControls(IC0604);
                                                obj_op.DisableControls(IC0704);
                                                obj_op.DisableControls(IC0804);
                                                obj_op.DisableControls(IC0904);
                                                obj_op.DisableControls(IC01004);
                                                obj_op.DisableControls(IC01104);

                                            }


                                        }
                                    }

                                }

                            }

                            if (ds.Tables[0].Rows[0]["IC0601"].ToString() == null)
                            {
                                IC0601.Text = "";
                            }
                            else
                            {
                                IC0601.Text = ds.Tables[0].Rows[0]["IC0601"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0701"].ToString() == null)
                            {
                                IC0701.Text = "";
                            }
                            else
                            {
                                IC0701.Text = ds.Tables[0].Rows[0]["IC0701"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0801"].ToString() == null)
                            {
                                IC0801.Text = "";
                            }
                            else
                            {
                                IC0801.Text = ds.Tables[0].Rows[0]["IC0801"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0901"].ToString() == null)
                            {
                                IC0901.Text = "";
                            }
                            else
                            {
                                IC0901.Text = ds.Tables[0].Rows[0]["IC0901"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {
                                            if (chkBaby1.Text == "1")
                                            {
                                                if (IC0901.Text == "1")
                                                {
                                                    obj_op.DisableControls(IC01001);
                                                }
                                                else
                                                {
                                                    obj_op.EnableControls(IC01001);
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01001"].ToString() == null)
                            {
                                IC01001.Text = "";
                            }
                            else
                            {
                                IC01001.Text = ds.Tables[0].Rows[0]["IC01001"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01101"].ToString() == null)
                            {
                                IC01101.Text = "";
                            }
                            else
                            {
                                IC01101.Text = ds.Tables[0].Rows[0]["IC01101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby2"].ToString() == null)
                            {
                                chkBaby2.Text = "";
                            }
                            else
                            {
                                chkBaby2.Text = ds.Tables[0].Rows[0]["chkBaby2"].ToString();

                                if (IB05.Text == "1")
                                {

                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {


                                            if (chkBaby2.Text == "1")
                                            {
                                                obj_op.EnableControls(IC0602);
                                                obj_op.EnableControls(IC0702);
                                                obj_op.EnableControls(IC0802);
                                                obj_op.EnableControls(IC0902);
                                                obj_op.EnableControls(IC01002);
                                                obj_op.EnableControls(IC01102);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IC0602);
                                                obj_op.DisableControls(IC0702);
                                                obj_op.DisableControls(IC0802);
                                                obj_op.DisableControls(IC0902);
                                                obj_op.DisableControls(IC01002);
                                                obj_op.DisableControls(IC01102);


                                                obj_op.DisableControls(IC0603);
                                                obj_op.DisableControls(IC0703);
                                                obj_op.DisableControls(IC0803);
                                                obj_op.DisableControls(IC0903);
                                                obj_op.DisableControls(IC01003);
                                                obj_op.DisableControls(IC01103);


                                                obj_op.DisableControls(IC0604);
                                                obj_op.DisableControls(IC0704);
                                                obj_op.DisableControls(IC0804);
                                                obj_op.DisableControls(IC0904);
                                                obj_op.DisableControls(IC01004);
                                                obj_op.DisableControls(IC01104);

                                            }

                                        }

                                    }

                                }

                            }

                            if (ds.Tables[0].Rows[0]["IC0602"].ToString() == null)
                            {
                                IC0602.Text = "";
                            }
                            else
                            {
                                IC0602.Text = ds.Tables[0].Rows[0]["IC0602"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0702"].ToString() == null)
                            {
                                IC0702.Text = "";
                            }
                            else
                            {
                                IC0702.Text = ds.Tables[0].Rows[0]["IC0702"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0802"].ToString() == null)
                            {
                                IC0802.Text = "";
                            }
                            else
                            {
                                IC0802.Text = ds.Tables[0].Rows[0]["IC0802"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0902"].ToString() == null)
                            {
                                IC0902.Text = "";
                            }
                            else
                            {
                                IC0902.Text = ds.Tables[0].Rows[0]["IC0902"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {
                                            if (chkBaby2.Text == "1")
                                            {
                                                if (IC0902.Text == "1")
                                                {
                                                    obj_op.DisableControls(IC01002);
                                                }
                                                else
                                                {
                                                    obj_op.EnableControls(IC01002);
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01002"].ToString() == null)
                            {
                                IC01002.Text = "";
                            }
                            else
                            {
                                IC01002.Text = ds.Tables[0].Rows[0]["IC01002"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01102"].ToString() == null)
                            {
                                IC01102.Text = "";
                            }
                            else
                            {
                                IC01102.Text = ds.Tables[0].Rows[0]["IC01102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby3"].ToString() == null)
                            {
                                chkBaby3.Text = "";
                            }
                            else
                            {
                                chkBaby3.Text = ds.Tables[0].Rows[0]["chkBaby3"].ToString();

                                if (IB05.Text == "1")
                                {

                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {

                                            if (chkBaby3.Text == "1")
                                            {
                                                obj_op.EnableControls(IC0603);
                                                obj_op.EnableControls(IC0703);
                                                obj_op.EnableControls(IC0803);
                                                obj_op.EnableControls(IC0903);
                                                obj_op.EnableControls(IC01003);
                                                obj_op.EnableControls(IC01103);
                                            }
                                            else
                                            {

                                                obj_op.DisableControls(IC0603);
                                                obj_op.DisableControls(IC0703);
                                                obj_op.DisableControls(IC0803);
                                                obj_op.DisableControls(IC0903);
                                                obj_op.DisableControls(IC01003);
                                                obj_op.DisableControls(IC01103);


                                                obj_op.DisableControls(IC0604);
                                                obj_op.DisableControls(IC0704);
                                                obj_op.DisableControls(IC0804);
                                                obj_op.DisableControls(IC0904);
                                                obj_op.DisableControls(IC01004);
                                                obj_op.DisableControls(IC01104);

                                            }


                                        }

                                    }



                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC0603"].ToString() == null)
                            {
                                IC0603.Text = "";
                            }
                            else
                            {
                                IC0603.Text = ds.Tables[0].Rows[0]["IC0603"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0703"].ToString() == null)
                            {
                                IC0703.Text = "";
                            }
                            else
                            {
                                IC0703.Text = ds.Tables[0].Rows[0]["IC0703"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0803"].ToString() == null)
                            {
                                IC0803.Text = "";
                            }
                            else
                            {
                                IC0803.Text = ds.Tables[0].Rows[0]["IC0803"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0903"].ToString() == null)
                            {
                                IC0903.Text = "";
                            }
                            else
                            {
                                IC0903.Text = ds.Tables[0].Rows[0]["IC0903"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {
                                            if (chkBaby3.Text == "1")
                                            {
                                                if (IC0903.Text == "1")
                                                {
                                                    obj_op.DisableControls(IC01003);
                                                }
                                                else
                                                {
                                                    obj_op.EnableControls(IC01003);
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01003"].ToString() == null)
                            {
                                IC01003.Text = "";
                            }
                            else
                            {
                                IC01003.Text = ds.Tables[0].Rows[0]["IC01003"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01103"].ToString() == null)
                            {
                                IC01103.Text = "";
                            }
                            else
                            {
                                IC01103.Text = ds.Tables[0].Rows[0]["IC01103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby4"].ToString() == null)
                            {
                                chkBaby4.Text = "";
                            }
                            else
                            {
                                chkBaby4.Text = ds.Tables[0].Rows[0]["chkBaby4"].ToString();

                                if (IB05.Text == "1")
                                {

                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {

                                            if (chkBaby4.Text == "1")
                                            {
                                                obj_op.EnableControls(IC0604);
                                                obj_op.EnableControls(IC0704);
                                                obj_op.EnableControls(IC0804);
                                                obj_op.EnableControls(IC0904);
                                                obj_op.EnableControls(IC01004);
                                                obj_op.EnableControls(IC01104);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IC0604);
                                                obj_op.DisableControls(IC0704);
                                                obj_op.DisableControls(IC0804);
                                                obj_op.DisableControls(IC0904);
                                                obj_op.DisableControls(IC01004);
                                                obj_op.DisableControls(IC01104);
                                            }

                                        }
                                    }


                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC0604"].ToString() == null)
                            {
                                IC0604.Text = "";
                            }
                            else
                            {
                                IC0604.Text = ds.Tables[0].Rows[0]["IC0604"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0704"].ToString() == null)
                            {
                                IC0704.Text = "";
                            }
                            else
                            {
                                IC0704.Text = ds.Tables[0].Rows[0]["IC0704"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0804"].ToString() == null)
                            {
                                IC0804.Text = "";
                            }
                            else
                            {
                                IC0804.Text = ds.Tables[0].Rows[0]["IC0804"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0904"].ToString() == null)
                            {
                                IC0904.Text = "";
                            }
                            else
                            {
                                IC0904.Text = ds.Tables[0].Rows[0]["IC0904"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IC01.Text != "0")
                                    {
                                        if (IC02.Text != "0")
                                        {
                                            if (chkBaby4.Text == "1")
                                            {
                                                if (IC0904.Text == "1")
                                                {
                                                    obj_op.DisableControls(IC01004);
                                                }
                                                else
                                                {
                                                    obj_op.EnableControls(IC01004);
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01004"].ToString() == null)
                            {
                                IC01004.Text = "";
                            }
                            else
                            {
                                IC01004.Text = ds.Tables[0].Rows[0]["IC01004"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01104"].ToString() == null)
                            {
                                IC01104.Text = "";
                            }
                            else
                            {
                                IC01104.Text = ds.Tables[0].Rows[0]["IC01104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["ID01"].ToString() == null)
                            {
                                ID01.Text = "";
                            }
                            else
                            {
                                ID01.Text = ds.Tables[0].Rows[0]["ID01"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["ID02"].ToString() == null)
                            {
                                ID02.Text = "";
                            }
                            else
                            {
                                ID02.Text = ds.Tables[0].Rows[0]["ID02"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (ID02.Text == "0")
                                    {
                                        obj_op.DisableControls(ID03);
                                        obj_op.DisableControls(ID04);
                                    }
                                    else
                                    {
                                        obj_op.EnableControls(ID03);
                                        obj_op.EnableControls(ID04);
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["ID03"].ToString() == null)
                            {
                                ID03.Text = "";
                            }
                            else
                            {
                                ID03.Text = ds.Tables[0].Rows[0]["ID03"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["ID04"].ToString() == null)
                            {
                                ID04.Text = "";
                            }
                            else
                            {
                                ID04.Text = ds.Tables[0].Rows[0]["ID04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE01"].ToString() == null)
                            {
                                IE01.Text = "";
                            }
                            else
                            {
                                IE01.Text = ds.Tables[0].Rows[0]["IE01"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IE01.Text == "0")
                                    {
                                        obj_op.DisableControls(IE02);
                                        obj_op.DisableControls(IE03);
                                        obj_op.DisableControls(IE04);
                                        obj_op.DisableControls(chkHHMem1);
                                        obj_op.DisableControls(chkHHMem2);
                                        obj_op.DisableControls(chkHHMem3);
                                        obj_op.DisableControls(chkHHMem4);
                                        obj_op.DisableControls(IE0701);
                                        obj_op.DisableControls(IE0702);
                                        obj_op.DisableControls(IE0703);
                                        obj_op.DisableControls(IE0704);

                                        obj_op.DisableControls(IE0801);
                                        obj_op.DisableControls(IE0802);
                                        obj_op.DisableControls(IE0803);
                                        obj_op.DisableControls(IE0804);

                                        obj_op.DisableControls(IE0901);
                                        obj_op.DisableControls(IE0902);
                                        obj_op.DisableControls(IE0903);
                                        obj_op.DisableControls(IE0904);

                                    }
                                    else
                                    {

                                        obj_op.EnableControls(IE02);
                                        obj_op.EnableControls(IE03);
                                        obj_op.EnableControls(IE04);
                                        obj_op.EnableControls(chkHHMem1);
                                        obj_op.EnableControls(chkHHMem2);
                                        obj_op.EnableControls(chkHHMem3);
                                        obj_op.EnableControls(chkHHMem4);
                                        obj_op.EnableControls(IE0701);
                                        obj_op.EnableControls(IE0702);
                                        obj_op.EnableControls(IE0703);
                                        obj_op.EnableControls(IE0704);

                                        obj_op.EnableControls(IE0801);
                                        obj_op.EnableControls(IE0802);
                                        obj_op.EnableControls(IE0803);
                                        obj_op.EnableControls(IE0804);

                                        obj_op.EnableControls(IE0901);
                                        obj_op.EnableControls(IE0902);
                                        obj_op.EnableControls(IE0903);
                                        obj_op.EnableControls(IE0904);

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE02"].ToString() == null)
                            {
                                IE02.Text = "";
                            }
                            else
                            {
                                IE02.Text = ds.Tables[0].Rows[0]["IE02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE03"].ToString() == null)
                            {
                                IE03.Text = "";
                            }
                            else
                            {
                                IE03.Text = ds.Tables[0].Rows[0]["IE03"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IE01.Text != "0")
                                    {

                                        if (IE03.Text == "0")
                                        {
                                            obj_op.DisableControls(IE04);
                                            obj_op.EnableControls(chkHHMem1);
                                            obj_op.EnableControls(chkHHMem2);
                                            obj_op.EnableControls(chkHHMem3);
                                            obj_op.EnableControls(chkHHMem4);
                                            obj_op.EnableControls(IE0701);
                                            obj_op.EnableControls(IE0702);
                                            obj_op.EnableControls(IE0703);
                                            obj_op.EnableControls(IE0704);

                                            obj_op.EnableControls(IE0801);
                                            obj_op.EnableControls(IE0802);
                                            obj_op.EnableControls(IE0803);
                                            obj_op.EnableControls(IE0804);

                                            obj_op.EnableControls(IE0901);
                                            obj_op.EnableControls(IE0902);
                                            obj_op.EnableControls(IE0903);
                                            obj_op.EnableControls(IE0904);


                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IE04);
                                            obj_op.EnableControls(chkHHMem1);
                                            obj_op.EnableControls(chkHHMem2);
                                            obj_op.EnableControls(chkHHMem3);
                                            obj_op.EnableControls(chkHHMem4);
                                            obj_op.EnableControls(IE0701);
                                            obj_op.EnableControls(IE0702);
                                            obj_op.EnableControls(IE0703);
                                            obj_op.EnableControls(IE0704);

                                            obj_op.EnableControls(IE0801);
                                            obj_op.EnableControls(IE0802);
                                            obj_op.EnableControls(IE0803);
                                            obj_op.EnableControls(IE0804);

                                            obj_op.EnableControls(IE0901);
                                            obj_op.EnableControls(IE0902);
                                            obj_op.EnableControls(IE0903);
                                            obj_op.EnableControls(IE0904);

                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE04"].ToString() == null)
                            {
                                IE04.Text = "";
                            }
                            else
                            {
                                IE04.Text = ds.Tables[0].Rows[0]["IE04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkHHMem1"].ToString() == null)
                            {
                                chkHHMem1.Text = "";
                            }
                            else
                            {
                                chkHHMem1.Text = ds.Tables[0].Rows[0]["chkHHMem1"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IE01.Text != "0")
                                    {

                                        if (IE03.Text != "0")
                                        {
                                            if (chkHHMem1.Text == "1")
                                            {
                                                obj_op.EnableControls(IE0701);
                                                obj_op.EnableControls(IE0801);
                                                obj_op.EnableControls(IE0901);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IE0701);
                                                obj_op.DisableControls(IE0801);
                                                obj_op.DisableControls(IE0901);

                                                obj_op.DisableControls(IE0702);
                                                obj_op.DisableControls(IE0802);
                                                obj_op.DisableControls(IE0902);

                                                obj_op.DisableControls(IE0703);
                                                obj_op.DisableControls(IE0803);
                                                obj_op.DisableControls(IE0903);

                                                obj_op.DisableControls(IE0704);
                                                obj_op.DisableControls(IE0804);
                                                obj_op.DisableControls(IE0904);
                                            }
                                        }
                                    }

                                }

                            }

                            if (ds.Tables[0].Rows[0]["IE0701"].ToString() == null)
                            {
                                IE0701.Text = "";
                            }
                            else
                            {
                                IE0701.Text = ds.Tables[0].Rows[0]["IE0701"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkHHMem2"].ToString() == null)
                            {
                                chkHHMem2.Text = "";
                            }
                            else
                            {
                                chkHHMem2.Text = ds.Tables[0].Rows[0]["chkHHMem2"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IE01.Text != "0")
                                    {

                                        if (IE03.Text != "0")
                                        {

                                            if (chkHHMem2.Text == "1")
                                            {
                                                obj_op.EnableControls(IE0702);
                                                obj_op.EnableControls(IE0802);
                                                obj_op.EnableControls(IE0902);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IE0702);
                                                obj_op.DisableControls(IE0802);
                                                obj_op.DisableControls(IE0902);

                                                obj_op.DisableControls(IE0703);
                                                obj_op.DisableControls(IE0803);
                                                obj_op.DisableControls(IE0903);

                                                obj_op.DisableControls(IE0704);
                                                obj_op.DisableControls(IE0804);
                                                obj_op.DisableControls(IE0904);
                                            }

                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0702"].ToString() == null)
                            {
                                IE0702.Text = "";
                            }
                            else
                            {
                                IE0702.Text = ds.Tables[0].Rows[0]["IE0702"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkHHMem3"].ToString() == null)
                            {
                                chkHHMem3.Text = "";
                            }
                            else
                            {
                                chkHHMem3.Text = ds.Tables[0].Rows[0]["chkHHMem3"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IE01.Text != "0")
                                    {

                                        if (IE03.Text != "0")
                                        {

                                            if (chkHHMem3.Text == "1")
                                            {
                                                obj_op.EnableControls(IE0703);
                                                obj_op.EnableControls(IE0803);
                                                obj_op.EnableControls(IE0903);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IE0703);
                                                obj_op.DisableControls(IE0803);
                                                obj_op.DisableControls(IE0903);

                                                obj_op.DisableControls(IE0704);
                                                obj_op.DisableControls(IE0804);
                                                obj_op.DisableControls(IE0904);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0703"].ToString() == null)
                            {
                                IE0703.Text = "";
                            }
                            else
                            {
                                IE0703.Text = ds.Tables[0].Rows[0]["IE0703"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkHHMem4"].ToString() == null)
                            {
                                chkHHMem4.Text = "";
                            }
                            else
                            {
                                chkHHMem4.Text = ds.Tables[0].Rows[0]["chkHHMem4"].ToString();

                                if (IB05.Text == "1")
                                {

                                    if (IE01.Text != "0")
                                    {
                                        if (IE02.Text != "0")
                                        {
                                            if (chkHHMem4.Text == "1")
                                            {
                                                obj_op.EnableControls(IE0704);
                                                obj_op.EnableControls(IE0804);
                                                obj_op.EnableControls(IE0904);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IE0704);
                                                obj_op.DisableControls(IE0804);
                                                obj_op.DisableControls(IE0904);
                                            }
                                        }
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0704"].ToString() == null)
                            {
                                IE0704.Text = "";
                            }
                            else
                            {
                                IE0704.Text = ds.Tables[0].Rows[0]["IE0704"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE0801"].ToString() == null)
                            {
                                IE0801.Text = "";
                            }
                            else
                            {
                                IE0801.Text = ds.Tables[0].Rows[0]["IE0801"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkHHMem1.Text == "1")
                                    {
                                        if (IE0801.Text == "0")
                                        {
                                            obj_op.DisableControls(IE0901);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IE0901);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0901"].ToString() == null)
                            {
                                IE0901.Text = "";
                            }
                            else
                            {
                                IE0901.Text = ds.Tables[0].Rows[0]["IE0901"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE0802"].ToString() == null)
                            {
                                IE0802.Text = "";
                            }
                            else
                            {
                                IE0802.Text = ds.Tables[0].Rows[0]["IE0802"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkHHMem2.Text == "1")
                                    {
                                        if (IE0802.Text == "0")
                                        {
                                            obj_op.DisableControls(IE0902);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IE0902);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0902"].ToString() == null)
                            {
                                IE0902.Text = "";
                            }
                            else
                            {
                                IE0902.Text = ds.Tables[0].Rows[0]["IE0902"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE0803"].ToString() == null)
                            {
                                IE0803.Text = "";
                            }
                            else
                            {
                                IE0803.Text = ds.Tables[0].Rows[0]["IE0803"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkHHMem3.Text == "1")
                                    {
                                        if (IE0803.Text == "0")
                                        {
                                            obj_op.DisableControls(IE0903);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IE0903);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0903"].ToString() == null)
                            {
                                IE0903.Text = "";
                            }
                            else
                            {
                                IE0903.Text = ds.Tables[0].Rows[0]["IE0903"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IE0804"].ToString() == null)
                            {
                                IE0804.Text = "";
                            }
                            else
                            {
                                IE0804.Text = ds.Tables[0].Rows[0]["IE0804"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkHHMem4.Text == "1")
                                    {
                                        if (IE0804.Text == "0")
                                        {
                                            obj_op.DisableControls(IE0904);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IE0904);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IE0904"].ToString() == null)
                            {
                                IE0904.Text = "";
                            }
                            else
                            {
                                IE0904.Text = ds.Tables[0].Rows[0]["IE0904"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IF01"].ToString() == null)
                            {
                                IF01.Text = "";
                            }
                            else
                            {
                                IF01.Text = ds.Tables[0].Rows[0]["IF01"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text == "0")
                                    {
                                        obj_op.DisableControls(IF02);
                                        obj_op.DisableControls(IF03);
                                        obj_op.DisableControls(IF04);
                                        obj_op.DisableControls(chkPW1);
                                        obj_op.DisableControls(chkPW2);
                                        obj_op.DisableControls(chkPW3);
                                        obj_op.DisableControls(chkPW4);
                                        obj_op.DisableControls(IF0601);
                                        obj_op.DisableControls(IF0602);
                                        obj_op.DisableControls(IF0603);
                                        obj_op.DisableControls(IF0604);
                                    }
                                    else
                                    {
                                        obj_op.EnableControls(IF02);
                                        obj_op.EnableControls(IF03);
                                        obj_op.EnableControls(IF04);
                                        obj_op.EnableControls(chkPW1);
                                        obj_op.EnableControls(chkPW2);
                                        obj_op.EnableControls(chkPW3);
                                        obj_op.EnableControls(chkPW4);
                                        obj_op.EnableControls(IF0601);
                                        obj_op.EnableControls(IF0602);
                                        obj_op.EnableControls(IF0603);
                                        obj_op.EnableControls(IF0604);
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IF02"].ToString() == null)
                            {
                                IF02.Text = "";
                            }
                            else
                            {
                                IF02.Text = ds.Tables[0].Rows[0]["IF02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IF03"].ToString() == null)
                            {
                                IF03.Text = "";
                            }
                            else
                            {
                                IF03.Text = ds.Tables[0].Rows[0]["IF03"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text != "0")
                                    {

                                        if (IF03.Text == "0")
                                        {
                                            obj_op.DisableControls(IF04);
                                            obj_op.DisableControls(chkPW1);
                                            obj_op.DisableControls(chkPW2);
                                            obj_op.DisableControls(chkPW3);
                                            obj_op.DisableControls(chkPW4);
                                            obj_op.DisableControls(IF0601);
                                            obj_op.DisableControls(IF0602);
                                            obj_op.DisableControls(IF0603);
                                            obj_op.DisableControls(IF0604);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IF04);
                                            obj_op.EnableControls(chkPW1);
                                            obj_op.EnableControls(chkPW2);
                                            obj_op.EnableControls(chkPW3);
                                            obj_op.EnableControls(chkPW4);
                                            obj_op.EnableControls(IF0601);
                                            obj_op.EnableControls(IF0602);
                                            obj_op.EnableControls(IF0603);
                                            obj_op.EnableControls(IF0604);

                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IF04"].ToString() == null)
                            {
                                IF04.Text = "";
                            }
                            else
                            {
                                IF04.Text = ds.Tables[0].Rows[0]["IF04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkPW1"].ToString() == null)
                            {
                                chkPW1.Text = "";
                            }
                            else
                            {
                                chkPW1.Text = ds.Tables[0].Rows[0]["chkPW1"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text != "0")
                                    {
                                        if (IF03.Text != "0")
                                        {
                                            if (chkPW1.Text == "1")
                                            {
                                                obj_op.EnableControls(IF0601);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IF0601);
                                                obj_op.DisableControls(IF0602);
                                                obj_op.DisableControls(IF0603);
                                                obj_op.DisableControls(IF0604);
                                            }
                                        }
                                    }
                                }


                            }

                            if (ds.Tables[0].Rows[0]["IF0601"].ToString() == null)
                            {
                                IF0601.Text = "";
                            }
                            else
                            {
                                IF0601.Text = ds.Tables[0].Rows[0]["IF0601"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkPW2"].ToString() == null)
                            {
                                chkPW2.Text = "";
                            }
                            else
                            {
                                chkPW2.Text = ds.Tables[0].Rows[0]["chkPW2"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text != "0")
                                    {
                                        if (IF03.Text != "0")
                                        {

                                            if (chkPW2.Text == "1")
                                            {
                                                obj_op.EnableControls(IF0602);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IF0602);
                                                obj_op.DisableControls(IF0603);
                                                obj_op.DisableControls(IF0604);
                                            }

                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IF0602"].ToString() == null)
                            {
                                IF0602.Text = "";
                            }
                            else
                            {
                                IF0602.Text = ds.Tables[0].Rows[0]["IF0602"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkPW3"].ToString() == null)
                            {
                                chkPW3.Text = "";
                            }
                            else
                            {
                                chkPW3.Text = ds.Tables[0].Rows[0]["chkPW3"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text != "0")
                                    {
                                        if (IF03.Text != "0")
                                        {

                                            if (chkPW3.Text == "1")
                                            {
                                                obj_op.EnableControls(IF0603);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IF0603);
                                                obj_op.DisableControls(IF0604);
                                            }

                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IF0603"].ToString() == null)
                            {
                                IF0603.Text = "";
                            }
                            else
                            {
                                IF0603.Text = ds.Tables[0].Rows[0]["IF0603"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkPW4"].ToString() == null)
                            {
                                chkPW4.Text = "";
                            }
                            else
                            {
                                chkPW4.Text = ds.Tables[0].Rows[0]["chkPW4"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IF01.Text != "0")
                                    {
                                        if (IF03.Text != "0")
                                        {

                                            if (chkPW4.Text == "1")
                                            {
                                                obj_op.EnableControls(IF0604);
                                            }
                                            else
                                            {
                                                obj_op.DisableControls(IF0604);
                                            }

                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IF0604"].ToString() == null)
                            {
                                IF0604.Text = "";
                            }
                            else
                            {
                                IF0604.Text = ds.Tables[0].Rows[0]["IF0604"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01"].ToString() == null)
                            {
                                IG01.Text = "";
                            }
                            else
                            {
                                IG01.Text = ds.Tables[0].Rows[0]["IG01"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "0")
                                    {
                                        obj_op.DisableControls(IG02);
                                        obj_op.DisableControls(IG0301);
                                        obj_op.DisableControls(IG0302);
                                        obj_op.DisableControls(IG0303);
                                        obj_op.DisableControls(IG0304);
                                        obj_op.DisableControls(IG0305);
                                        obj_op.DisableControls(IG0306);
                                        obj_op.DisableControls(IG0307);
                                        obj_op.DisableControls(IG0308);
                                        obj_op.DisableControls(IG0309);
                                        obj_op.DisableControls(IG03010);

                                        obj_op.DisableControls(chkMember1);
                                        obj_op.DisableControls(chkMember2);
                                        obj_op.DisableControls(chkMember3);
                                        obj_op.DisableControls(chkMember4);
                                        obj_op.DisableControls(chkMember5);

                                        obj_op.DisableControls(IG0401);
                                        obj_op.DisableControls(IG0501);
                                        obj_op.DisableControls(IG060101);
                                        obj_op.DisableControls(IG060201);
                                        obj_op.DisableControls(IG060301);
                                        obj_op.DisableControls(IG060401);
                                        obj_op.DisableControls(IG060501);

                                        obj_op.DisableControls(IG070101);
                                        obj_op.DisableControls(IG070201);
                                        obj_op.DisableControls(IG070301);
                                        obj_op.DisableControls(IG070401);
                                        obj_op.DisableControls(IG070501);
                                        obj_op.DisableControls(IG070601);
                                        obj_op.DisableControls(IG070701);
                                        obj_op.DisableControls(IG070801);
                                        obj_op.DisableControls(IG070901);
                                        obj_op.DisableControls(IG0701001);
                                        obj_op.DisableControls(IG0701101);
                                        obj_op.DisableControls(IG0701201);
                                        obj_op.DisableControls(IG0701301);
                                        obj_op.DisableControls(IG0801);
                                        obj_op.DisableControls(IG0901);
                                        obj_op.DisableControls(IG01001);
                                        obj_op.DisableControls(IG01101);
                                        obj_op.DisableControls(IG01201);
                                        obj_op.DisableControls(IG01301);
                                        obj_op.DisableControls(IG01401);
                                        obj_op.DisableControls(IG01501);
                                        obj_op.DisableControls(IG160101);
                                        obj_op.DisableControls(IG160201);
                                        obj_op.DisableControls(IG160301);
                                        obj_op.DisableControls(IG160401);
                                        obj_op.DisableControls(IG160501);
                                        obj_op.DisableControls(IG160601);
                                        obj_op.DisableControls(IG160701);
                                        obj_op.DisableControls(IG160801);
                                        obj_op.DisableControls(IG160901);
                                        obj_op.DisableControls(IG1601001);
                                        obj_op.DisableControls(IG1601101);
                                        obj_op.DisableControls(IG1601201);



                                        obj_op.DisableControls(IG0402);
                                        obj_op.DisableControls(IG0502);
                                        obj_op.DisableControls(IG060102);
                                        obj_op.DisableControls(IG060202);
                                        obj_op.DisableControls(IG060302);
                                        obj_op.DisableControls(IG060402);
                                        obj_op.DisableControls(IG060502);

                                        obj_op.DisableControls(IG070102);
                                        obj_op.DisableControls(IG070202);
                                        obj_op.DisableControls(IG070302);
                                        obj_op.DisableControls(IG070402);
                                        obj_op.DisableControls(IG070502);
                                        obj_op.DisableControls(IG070602);
                                        obj_op.DisableControls(IG070702);
                                        obj_op.DisableControls(IG070802);
                                        obj_op.DisableControls(IG070902);
                                        obj_op.DisableControls(IG0701002);
                                        obj_op.DisableControls(IG0701102);
                                        obj_op.DisableControls(IG0701202);
                                        obj_op.DisableControls(IG0701302);
                                        obj_op.DisableControls(IG0802);
                                        obj_op.DisableControls(IG0902);
                                        obj_op.DisableControls(IG01002);
                                        obj_op.DisableControls(IG01102);
                                        obj_op.DisableControls(IG01202);
                                        obj_op.DisableControls(IG01302);
                                        obj_op.DisableControls(IG01402);
                                        obj_op.DisableControls(IG01502);
                                        obj_op.DisableControls(IG160102);
                                        obj_op.DisableControls(IG160202);
                                        obj_op.DisableControls(IG160302);
                                        obj_op.DisableControls(IG160402);
                                        obj_op.DisableControls(IG160502);
                                        obj_op.DisableControls(IG160602);
                                        obj_op.DisableControls(IG160702);
                                        obj_op.DisableControls(IG160802);
                                        obj_op.DisableControls(IG160902);
                                        obj_op.DisableControls(IG1601002);
                                        obj_op.DisableControls(IG1601102);
                                        obj_op.DisableControls(IG1601202);


                                        obj_op.DisableControls(IG0403);
                                        obj_op.DisableControls(IG0503);
                                        obj_op.DisableControls(IG060103);
                                        obj_op.DisableControls(IG060203);
                                        obj_op.DisableControls(IG060303);
                                        obj_op.DisableControls(IG060403);
                                        obj_op.DisableControls(IG060503);

                                        obj_op.DisableControls(IG070103);
                                        obj_op.DisableControls(IG070203);
                                        obj_op.DisableControls(IG070303);
                                        obj_op.DisableControls(IG070403);
                                        obj_op.DisableControls(IG070503);
                                        obj_op.DisableControls(IG070603);
                                        obj_op.DisableControls(IG070703);
                                        obj_op.DisableControls(IG070803);
                                        obj_op.DisableControls(IG070903);
                                        obj_op.DisableControls(IG0701003);
                                        obj_op.DisableControls(IG0701103);
                                        obj_op.DisableControls(IG0701203);
                                        obj_op.DisableControls(IG0701303);
                                        obj_op.DisableControls(IG0803);
                                        obj_op.DisableControls(IG0903);
                                        obj_op.DisableControls(IG01003);
                                        obj_op.DisableControls(IG01103);
                                        obj_op.DisableControls(IG01203);
                                        obj_op.DisableControls(IG01303);
                                        obj_op.DisableControls(IG01403);
                                        obj_op.DisableControls(IG01503);
                                        obj_op.DisableControls(IG160103);
                                        obj_op.DisableControls(IG160203);
                                        obj_op.DisableControls(IG160303);
                                        obj_op.DisableControls(IG160403);
                                        obj_op.DisableControls(IG160503);
                                        obj_op.DisableControls(IG160603);
                                        obj_op.DisableControls(IG160703);
                                        obj_op.DisableControls(IG160803);
                                        obj_op.DisableControls(IG160903);
                                        obj_op.DisableControls(IG1601003);
                                        obj_op.DisableControls(IG1601103);
                                        obj_op.DisableControls(IG1601203);



                                        obj_op.DisableControls(IG0404);
                                        obj_op.DisableControls(IG0504);
                                        obj_op.DisableControls(IG060104);
                                        obj_op.DisableControls(IG060204);
                                        obj_op.DisableControls(IG060304);
                                        obj_op.DisableControls(IG060404);
                                        obj_op.DisableControls(IG060504);

                                        obj_op.DisableControls(IG070104);
                                        obj_op.DisableControls(IG070204);
                                        obj_op.DisableControls(IG070304);
                                        obj_op.DisableControls(IG070404);
                                        obj_op.DisableControls(IG070504);
                                        obj_op.DisableControls(IG070604);
                                        obj_op.DisableControls(IG070704);
                                        obj_op.DisableControls(IG070804);
                                        obj_op.DisableControls(IG070904);
                                        obj_op.DisableControls(IG0701004);
                                        obj_op.DisableControls(IG0701104);
                                        obj_op.DisableControls(IG0701204);
                                        obj_op.DisableControls(IG0701304);
                                        obj_op.DisableControls(IG0804);
                                        obj_op.DisableControls(IG0904);
                                        obj_op.DisableControls(IG01004);
                                        obj_op.DisableControls(IG01104);
                                        obj_op.DisableControls(IG01204);
                                        obj_op.DisableControls(IG01304);
                                        obj_op.DisableControls(IG01404);
                                        obj_op.DisableControls(IG01504);
                                        obj_op.DisableControls(IG160104);
                                        obj_op.DisableControls(IG160204);
                                        obj_op.DisableControls(IG160304);
                                        obj_op.DisableControls(IG160404);
                                        obj_op.DisableControls(IG160504);
                                        obj_op.DisableControls(IG160604);
                                        obj_op.DisableControls(IG160704);
                                        obj_op.DisableControls(IG160804);
                                        obj_op.DisableControls(IG160904);
                                        obj_op.DisableControls(IG1601004);
                                        obj_op.DisableControls(IG1601104);
                                        obj_op.DisableControls(IG1601204);



                                        obj_op.DisableControls(IG0405);
                                        obj_op.DisableControls(IG0505);
                                        obj_op.DisableControls(IG060105);
                                        obj_op.DisableControls(IG060205);
                                        obj_op.DisableControls(IG060305);
                                        obj_op.DisableControls(IG060405);
                                        obj_op.DisableControls(IG060505);

                                        obj_op.DisableControls(IG070105);
                                        obj_op.DisableControls(IG070205);
                                        obj_op.DisableControls(IG070305);
                                        obj_op.DisableControls(IG070405);
                                        obj_op.DisableControls(IG070505);
                                        obj_op.DisableControls(IG070605);
                                        obj_op.DisableControls(IG070705);
                                        obj_op.DisableControls(IG070805);
                                        obj_op.DisableControls(IG070905);
                                        obj_op.DisableControls(IG0701005);
                                        obj_op.DisableControls(IG0701105);
                                        obj_op.DisableControls(IG0701205);
                                        obj_op.DisableControls(IG0701305);
                                        obj_op.DisableControls(IG0805);
                                        obj_op.DisableControls(IG0905);
                                        obj_op.DisableControls(IG01005);
                                        obj_op.DisableControls(IG01105);
                                        obj_op.DisableControls(IG01205);
                                        obj_op.DisableControls(IG01305);
                                        obj_op.DisableControls(IG01405);
                                        obj_op.DisableControls(IG01505);
                                        obj_op.DisableControls(IG160105);
                                        obj_op.DisableControls(IG160205);
                                        obj_op.DisableControls(IG160305);
                                        obj_op.DisableControls(IG160405);
                                        obj_op.DisableControls(IG160505);
                                        obj_op.DisableControls(IG160605);
                                        obj_op.DisableControls(IG160705);
                                        obj_op.DisableControls(IG160805);
                                        obj_op.DisableControls(IG160905);
                                        obj_op.DisableControls(IG1601005);
                                        obj_op.DisableControls(IG1601105);
                                        obj_op.DisableControls(IG1601205);


                                    }
                                    else
                                    {

                                        obj_op.EnableControls(IG02);
                                        obj_op.EnableControls(IG0301);
                                        obj_op.EnableControls(IG0302);
                                        obj_op.EnableControls(IG0303);
                                        obj_op.EnableControls(IG0304);
                                        obj_op.EnableControls(IG0305);
                                        obj_op.EnableControls(IG0306);
                                        obj_op.EnableControls(IG0307);
                                        obj_op.EnableControls(IG0308);
                                        obj_op.EnableControls(IG0309);
                                        obj_op.EnableControls(IG03010);

                                        obj_op.EnableControls(chkMember1);
                                        obj_op.EnableControls(chkMember2);
                                        obj_op.EnableControls(chkMember3);
                                        obj_op.EnableControls(chkMember4);
                                        obj_op.EnableControls(chkMember5);

                                        obj_op.EnableControls(IG0401);
                                        obj_op.EnableControls(IG0501);
                                        obj_op.EnableControls(IG060101);
                                        obj_op.EnableControls(IG060201);
                                        obj_op.EnableControls(IG060301);
                                        obj_op.EnableControls(IG060401);
                                        obj_op.EnableControls(IG060501);

                                        obj_op.EnableControls(IG070101);
                                        obj_op.EnableControls(IG070201);
                                        obj_op.EnableControls(IG070301);
                                        obj_op.EnableControls(IG070401);
                                        obj_op.EnableControls(IG070501);
                                        obj_op.EnableControls(IG070601);
                                        obj_op.EnableControls(IG070701);
                                        obj_op.EnableControls(IG070801);
                                        obj_op.EnableControls(IG070901);
                                        obj_op.EnableControls(IG0701001);
                                        obj_op.EnableControls(IG0701101);
                                        obj_op.EnableControls(IG0701201);
                                        obj_op.EnableControls(IG0701301);
                                        obj_op.EnableControls(IG0801);
                                        obj_op.EnableControls(IG0901);
                                        obj_op.EnableControls(IG01001);
                                        obj_op.EnableControls(IG01101);
                                        obj_op.EnableControls(IG01201);
                                        obj_op.EnableControls(IG01301);
                                        obj_op.EnableControls(IG01401);
                                        obj_op.EnableControls(IG01501);
                                        obj_op.EnableControls(IG160101);
                                        obj_op.EnableControls(IG160201);
                                        obj_op.EnableControls(IG160301);
                                        obj_op.EnableControls(IG160401);
                                        obj_op.EnableControls(IG160501);
                                        obj_op.EnableControls(IG160601);
                                        obj_op.EnableControls(IG160701);
                                        obj_op.EnableControls(IG160801);
                                        obj_op.EnableControls(IG160901);
                                        obj_op.EnableControls(IG1601001);
                                        obj_op.EnableControls(IG1601101);
                                        obj_op.EnableControls(IG1601201);



                                        obj_op.EnableControls(IG0402);
                                        obj_op.EnableControls(IG0502);
                                        obj_op.EnableControls(IG060102);
                                        obj_op.EnableControls(IG060202);
                                        obj_op.EnableControls(IG060302);
                                        obj_op.EnableControls(IG060402);
                                        obj_op.EnableControls(IG060502);

                                        obj_op.EnableControls(IG070102);
                                        obj_op.EnableControls(IG070202);
                                        obj_op.EnableControls(IG070302);
                                        obj_op.EnableControls(IG070402);
                                        obj_op.EnableControls(IG070502);
                                        obj_op.EnableControls(IG070602);
                                        obj_op.EnableControls(IG070702);
                                        obj_op.EnableControls(IG070802);
                                        obj_op.EnableControls(IG070902);
                                        obj_op.EnableControls(IG0701002);
                                        obj_op.EnableControls(IG0701102);
                                        obj_op.EnableControls(IG0701202);
                                        obj_op.EnableControls(IG0701302);
                                        obj_op.EnableControls(IG0802);
                                        obj_op.EnableControls(IG0902);
                                        obj_op.EnableControls(IG01002);
                                        obj_op.EnableControls(IG01102);
                                        obj_op.EnableControls(IG01202);
                                        obj_op.EnableControls(IG01302);
                                        obj_op.EnableControls(IG01402);
                                        obj_op.EnableControls(IG01502);
                                        obj_op.EnableControls(IG160102);
                                        obj_op.EnableControls(IG160202);
                                        obj_op.EnableControls(IG160302);
                                        obj_op.EnableControls(IG160402);
                                        obj_op.EnableControls(IG160502);
                                        obj_op.EnableControls(IG160602);
                                        obj_op.EnableControls(IG160702);
                                        obj_op.EnableControls(IG160802);
                                        obj_op.EnableControls(IG160902);
                                        obj_op.EnableControls(IG1601002);
                                        obj_op.EnableControls(IG1601102);
                                        obj_op.EnableControls(IG1601202);


                                        obj_op.EnableControls(IG0403);
                                        obj_op.EnableControls(IG0503);
                                        obj_op.EnableControls(IG060103);
                                        obj_op.EnableControls(IG060203);
                                        obj_op.EnableControls(IG060303);
                                        obj_op.EnableControls(IG060403);
                                        obj_op.EnableControls(IG060503);

                                        obj_op.EnableControls(IG070103);
                                        obj_op.EnableControls(IG070203);
                                        obj_op.EnableControls(IG070303);
                                        obj_op.EnableControls(IG070403);
                                        obj_op.EnableControls(IG070503);
                                        obj_op.EnableControls(IG070603);
                                        obj_op.EnableControls(IG070703);
                                        obj_op.EnableControls(IG070803);
                                        obj_op.EnableControls(IG070903);
                                        obj_op.EnableControls(IG0701003);
                                        obj_op.EnableControls(IG0701103);
                                        obj_op.EnableControls(IG0701203);
                                        obj_op.EnableControls(IG0701303);
                                        obj_op.EnableControls(IG0803);
                                        obj_op.EnableControls(IG0903);
                                        obj_op.EnableControls(IG01003);
                                        obj_op.EnableControls(IG01103);
                                        obj_op.EnableControls(IG01203);
                                        obj_op.EnableControls(IG01303);
                                        obj_op.EnableControls(IG01403);
                                        obj_op.EnableControls(IG01503);
                                        obj_op.EnableControls(IG160103);
                                        obj_op.EnableControls(IG160203);
                                        obj_op.EnableControls(IG160303);
                                        obj_op.EnableControls(IG160403);
                                        obj_op.EnableControls(IG160503);
                                        obj_op.EnableControls(IG160603);
                                        obj_op.EnableControls(IG160703);
                                        obj_op.EnableControls(IG160803);
                                        obj_op.EnableControls(IG160903);
                                        obj_op.EnableControls(IG1601003);
                                        obj_op.EnableControls(IG1601103);
                                        obj_op.EnableControls(IG1601203);



                                        obj_op.EnableControls(IG0404);
                                        obj_op.EnableControls(IG0504);
                                        obj_op.EnableControls(IG060104);
                                        obj_op.EnableControls(IG060204);
                                        obj_op.EnableControls(IG060304);
                                        obj_op.EnableControls(IG060404);
                                        obj_op.EnableControls(IG060504);

                                        obj_op.EnableControls(IG070104);
                                        obj_op.EnableControls(IG070204);
                                        obj_op.EnableControls(IG070304);
                                        obj_op.EnableControls(IG070404);
                                        obj_op.EnableControls(IG070504);
                                        obj_op.EnableControls(IG070604);
                                        obj_op.EnableControls(IG070704);
                                        obj_op.EnableControls(IG070804);
                                        obj_op.EnableControls(IG070904);
                                        obj_op.EnableControls(IG0701004);
                                        obj_op.EnableControls(IG0701104);
                                        obj_op.EnableControls(IG0701204);
                                        obj_op.EnableControls(IG0701304);
                                        obj_op.EnableControls(IG0804);
                                        obj_op.EnableControls(IG0904);
                                        obj_op.EnableControls(IG01004);
                                        obj_op.EnableControls(IG01104);
                                        obj_op.EnableControls(IG01204);
                                        obj_op.EnableControls(IG01304);
                                        obj_op.EnableControls(IG01404);
                                        obj_op.EnableControls(IG01504);
                                        obj_op.EnableControls(IG160104);
                                        obj_op.EnableControls(IG160204);
                                        obj_op.EnableControls(IG160304);
                                        obj_op.EnableControls(IG160404);
                                        obj_op.EnableControls(IG160504);
                                        obj_op.EnableControls(IG160604);
                                        obj_op.EnableControls(IG160704);
                                        obj_op.EnableControls(IG160804);
                                        obj_op.EnableControls(IG160904);
                                        obj_op.EnableControls(IG1601004);
                                        obj_op.EnableControls(IG1601104);
                                        obj_op.EnableControls(IG1601204);



                                        obj_op.EnableControls(IG0405);
                                        obj_op.EnableControls(IG0505);
                                        obj_op.EnableControls(IG060105);
                                        obj_op.EnableControls(IG060205);
                                        obj_op.EnableControls(IG060305);
                                        obj_op.EnableControls(IG060405);
                                        obj_op.EnableControls(IG060505);

                                        obj_op.EnableControls(IG070105);
                                        obj_op.EnableControls(IG070205);
                                        obj_op.EnableControls(IG070305);
                                        obj_op.EnableControls(IG070405);
                                        obj_op.EnableControls(IG070505);
                                        obj_op.EnableControls(IG070605);
                                        obj_op.EnableControls(IG070705);
                                        obj_op.EnableControls(IG070805);
                                        obj_op.EnableControls(IG070905);
                                        obj_op.EnableControls(IG0701005);
                                        obj_op.EnableControls(IG0701105);
                                        obj_op.EnableControls(IG0701205);
                                        obj_op.EnableControls(IG0701305);
                                        obj_op.EnableControls(IG0805);
                                        obj_op.EnableControls(IG0905);
                                        obj_op.EnableControls(IG01005);
                                        obj_op.EnableControls(IG01105);
                                        obj_op.EnableControls(IG01205);
                                        obj_op.EnableControls(IG01305);
                                        obj_op.EnableControls(IG01405);
                                        obj_op.EnableControls(IG01505);
                                        obj_op.EnableControls(IG160105);
                                        obj_op.EnableControls(IG160205);
                                        obj_op.EnableControls(IG160305);
                                        obj_op.EnableControls(IG160405);
                                        obj_op.EnableControls(IG160505);
                                        obj_op.EnableControls(IG160605);
                                        obj_op.EnableControls(IG160705);
                                        obj_op.EnableControls(IG160805);
                                        obj_op.EnableControls(IG160905);
                                        obj_op.EnableControls(IG1601005);
                                        obj_op.EnableControls(IG1601105);
                                        obj_op.EnableControls(IG1601205);

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG02"].ToString() == null)
                            {
                                IG02.Text = "";
                            }
                            else
                            {
                                IG02.Text = ds.Tables[0].Rows[0]["IG02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0301"].ToString() == null)
                            {
                                IG0301.Text = "";
                            }
                            else
                            {
                                IG0301.Text = ds.Tables[0].Rows[0]["IG0301"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0302"].ToString() == null)
                            {
                                IG0302.Text = "";
                            }
                            else
                            {
                                IG0302.Text = ds.Tables[0].Rows[0]["IG0302"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0303"].ToString() == null)
                            {
                                IG0303.Text = "";
                            }
                            else
                            {
                                IG0303.Text = ds.Tables[0].Rows[0]["IG0303"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0304"].ToString() == null)
                            {
                                IG0304.Text = "";
                            }
                            else
                            {
                                IG0304.Text = ds.Tables[0].Rows[0]["IG0304"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0305"].ToString() == null)
                            {
                                IG0305.Text = "";
                            }
                            else
                            {
                                IG0305.Text = ds.Tables[0].Rows[0]["IG0305"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0306"].ToString() == null)
                            {
                                IG0306.Text = "";
                            }
                            else
                            {
                                IG0306.Text = ds.Tables[0].Rows[0]["IG0306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0307"].ToString() == null)
                            {
                                IG0307.Text = "";
                            }
                            else
                            {
                                IG0307.Text = ds.Tables[0].Rows[0]["IG0307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0308"].ToString() == null)
                            {
                                IG0308.Text = "";
                            }
                            else
                            {
                                IG0308.Text = ds.Tables[0].Rows[0]["IG0308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0309"].ToString() == null)
                            {
                                IG0309.Text = "";
                            }
                            else
                            {
                                IG0309.Text = ds.Tables[0].Rows[0]["IG0309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG03010"].ToString() == null)
                            {
                                IG03010.Text = "";
                            }
                            else
                            {
                                IG03010.Text = ds.Tables[0].Rows[0]["IG03010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember1"].ToString() == null)
                            {
                                chkMember1.Text = "";
                            }
                            else
                            {
                                chkMember1.Text = ds.Tables[0].Rows[0]["chkMember1"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "1")
                                    {

                                        if (chkMember1.Text == "1")
                                        {
                                            obj_op.EnableControls(IG0401);
                                            obj_op.EnableControls(IG0501);
                                            obj_op.EnableControls(IG060101);
                                            obj_op.EnableControls(IG060201);
                                            obj_op.EnableControls(IG060301);
                                            obj_op.EnableControls(IG060401);
                                            obj_op.EnableControls(IG060501);
                                            obj_op.EnableControls(IG070101);
                                            obj_op.EnableControls(IG070201);
                                            obj_op.EnableControls(IG070301);
                                            obj_op.EnableControls(IG070401);

                                            obj_op.EnableControls(IG070501);
                                            obj_op.EnableControls(IG070601);
                                            obj_op.EnableControls(IG070701);
                                            obj_op.EnableControls(IG070801);
                                            obj_op.EnableControls(IG070901);
                                            obj_op.EnableControls(IG0701001);
                                            obj_op.EnableControls(IG0701101);
                                            obj_op.EnableControls(IG0701201);
                                            obj_op.EnableControls(IG0701301);
                                            obj_op.EnableControls(IG0801);
                                            obj_op.EnableControls(IG0901);
                                            obj_op.EnableControls(IG01001);
                                            obj_op.EnableControls(IG01101);
                                            obj_op.EnableControls(IG01201);
                                            obj_op.EnableControls(IG01301);
                                            obj_op.EnableControls(IG01401);
                                            obj_op.EnableControls(IG01501);
                                            obj_op.EnableControls(IG160101);
                                            obj_op.EnableControls(IG160201);
                                            obj_op.EnableControls(IG160301);
                                            obj_op.EnableControls(IG160401);
                                            obj_op.EnableControls(IG160501);
                                            obj_op.EnableControls(IG160601);
                                            obj_op.EnableControls(IG160701);
                                            obj_op.EnableControls(IG160801);
                                            obj_op.EnableControls(IG160901);
                                            obj_op.EnableControls(IG1601001);
                                            obj_op.EnableControls(IG1601101);
                                            obj_op.EnableControls(IG1601201);


                                        }
                                        else
                                        {
                                            obj_op.DisableControls(IG0401);
                                            obj_op.DisableControls(IG0501);
                                            obj_op.DisableControls(IG060101);
                                            obj_op.DisableControls(IG060201);
                                            obj_op.DisableControls(IG060301);
                                            obj_op.DisableControls(IG060401);
                                            obj_op.DisableControls(IG060501);
                                            obj_op.DisableControls(IG070101);
                                            obj_op.DisableControls(IG070201);
                                            obj_op.DisableControls(IG070301);
                                            obj_op.DisableControls(IG070401);

                                            obj_op.DisableControls(IG070501);
                                            obj_op.DisableControls(IG070601);
                                            obj_op.DisableControls(IG070701);
                                            obj_op.DisableControls(IG070801);
                                            obj_op.DisableControls(IG070901);
                                            obj_op.DisableControls(IG0701001);
                                            obj_op.DisableControls(IG0701101);
                                            obj_op.DisableControls(IG0701201);
                                            obj_op.DisableControls(IG0701301);
                                            obj_op.DisableControls(IG0801);
                                            obj_op.DisableControls(IG0901);
                                            obj_op.DisableControls(IG01001);
                                            obj_op.DisableControls(IG01101);
                                            obj_op.DisableControls(IG01201);
                                            obj_op.DisableControls(IG01301);
                                            obj_op.DisableControls(IG01401);
                                            obj_op.DisableControls(IG01501);
                                            obj_op.DisableControls(IG160101);
                                            obj_op.DisableControls(IG160201);
                                            obj_op.DisableControls(IG160301);
                                            obj_op.DisableControls(IG160401);
                                            obj_op.DisableControls(IG160501);
                                            obj_op.DisableControls(IG160601);
                                            obj_op.DisableControls(IG160701);
                                            obj_op.DisableControls(IG160801);
                                            obj_op.DisableControls(IG160901);
                                            obj_op.DisableControls(IG1601001);
                                            obj_op.DisableControls(IG1601101);
                                            obj_op.DisableControls(IG1601201);

                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0401"].ToString() == null)
                            {
                                IG0401.Text = "";
                            }
                            else
                            {
                                IG0401.Text = ds.Tables[0].Rows[0]["IG0401"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0501"].ToString() == null)
                            {
                                IG0501.Text = "";
                            }
                            else
                            {
                                IG0501.Text = ds.Tables[0].Rows[0]["IG0501"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060101"].ToString() == null)
                            {
                                IG060101.Text = "";
                            }
                            else
                            {
                                IG060101.Text = ds.Tables[0].Rows[0]["IG060101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060201"].ToString() == null)
                            {
                                IG060201.Text = "";
                            }
                            else
                            {
                                IG060201.Text = ds.Tables[0].Rows[0]["IG060201"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060301"].ToString() == null)
                            {
                                IG060301.Text = "";
                            }
                            else
                            {
                                IG060301.Text = ds.Tables[0].Rows[0]["IG060301"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060401"].ToString() == null)
                            {
                                IG060401.Text = "";
                            }
                            else
                            {
                                IG060401.Text = ds.Tables[0].Rows[0]["IG060401"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060501"].ToString() == null)
                            {
                                IG060501.Text = "";
                            }
                            else
                            {
                                IG060501.Text = ds.Tables[0].Rows[0]["IG060501"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1" && chkMember2.Text == "1" && chkMember3.Text == "1" && chkMember4.Text == "1")
                                    {
                                        //if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                                        //{
                                        //    Disabled_IG060101_Q47();
                                        //}
                                        //else
                                        //{
                                        //    Enabled_IG060101_Q47();
                                        //}
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG070101"].ToString() == null)
                            {
                                IG070101.Text = "";
                            }
                            else
                            {
                                IG070101.Text = ds.Tables[0].Rows[0]["IG070101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070201"].ToString() == null)
                            {
                                IG070201.Text = "";
                            }
                            else
                            {
                                IG070201.Text = ds.Tables[0].Rows[0]["IG070201"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070301"].ToString() == null)
                            {
                                IG070301.Text = "";
                            }
                            else
                            {
                                IG070301.Text = ds.Tables[0].Rows[0]["IG070301"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070401"].ToString() == null)
                            {
                                IG070401.Text = "";
                            }
                            else
                            {
                                IG070401.Text = ds.Tables[0].Rows[0]["IG070401"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember2"].ToString() == null)
                            {
                                chkMember2.Text = "";
                            }
                            else
                            {
                                chkMember2.Text = ds.Tables[0].Rows[0]["chkMember2"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "1")
                                    {

                                        if (chkMember2.Text == "1")
                                        {
                                            obj_op.EnableControls(IG0402);
                                            obj_op.EnableControls(IG0502);
                                            obj_op.EnableControls(IG060102);
                                            obj_op.EnableControls(IG060202);
                                            obj_op.EnableControls(IG060302);
                                            obj_op.EnableControls(IG060402);
                                            obj_op.EnableControls(IG060502);
                                            obj_op.EnableControls(IG070102);
                                            obj_op.EnableControls(IG070202);
                                            obj_op.EnableControls(IG070302);
                                            obj_op.EnableControls(IG070402);

                                            obj_op.EnableControls(IG070502);
                                            obj_op.EnableControls(IG070602);
                                            obj_op.EnableControls(IG070702);
                                            obj_op.EnableControls(IG070802);
                                            obj_op.EnableControls(IG070902);
                                            obj_op.EnableControls(IG0701002);
                                            obj_op.EnableControls(IG0701102);
                                            obj_op.EnableControls(IG0701202);
                                            obj_op.EnableControls(IG0701302);
                                            obj_op.EnableControls(IG0802);
                                            obj_op.EnableControls(IG0902);
                                            obj_op.EnableControls(IG01002);
                                            obj_op.EnableControls(IG01102);
                                            obj_op.EnableControls(IG01202);
                                            obj_op.EnableControls(IG01302);
                                            obj_op.EnableControls(IG01402);
                                            obj_op.EnableControls(IG01502);
                                            obj_op.EnableControls(IG160102);
                                            obj_op.EnableControls(IG160202);
                                            obj_op.EnableControls(IG160302);
                                            obj_op.EnableControls(IG160402);
                                            obj_op.EnableControls(IG160502);
                                            obj_op.EnableControls(IG160602);
                                            obj_op.EnableControls(IG160702);
                                            obj_op.EnableControls(IG160802);
                                            obj_op.EnableControls(IG160902);
                                            obj_op.EnableControls(IG1601002);
                                            obj_op.EnableControls(IG1601102);
                                            obj_op.EnableControls(IG1601202);
                                        }
                                        else
                                        {
                                            obj_op.DisableControls(IG0402);
                                            obj_op.DisableControls(IG0502);
                                            obj_op.DisableControls(IG060102);
                                            obj_op.DisableControls(IG060202);
                                            obj_op.DisableControls(IG060302);
                                            obj_op.DisableControls(IG060402);
                                            obj_op.DisableControls(IG060502);
                                            obj_op.DisableControls(IG070102);
                                            obj_op.DisableControls(IG070202);
                                            obj_op.DisableControls(IG070302);
                                            obj_op.DisableControls(IG070402);

                                            obj_op.DisableControls(IG070502);
                                            obj_op.DisableControls(IG070602);
                                            obj_op.DisableControls(IG070702);
                                            obj_op.DisableControls(IG070802);
                                            obj_op.DisableControls(IG070902);
                                            obj_op.DisableControls(IG0701002);
                                            obj_op.DisableControls(IG0701102);
                                            obj_op.DisableControls(IG0701202);
                                            obj_op.DisableControls(IG0701302);
                                            obj_op.DisableControls(IG0802);
                                            obj_op.DisableControls(IG0902);
                                            obj_op.DisableControls(IG01002);
                                            obj_op.DisableControls(IG01102);
                                            obj_op.DisableControls(IG01202);
                                            obj_op.DisableControls(IG01302);
                                            obj_op.DisableControls(IG01402);
                                            obj_op.DisableControls(IG01502);
                                            obj_op.DisableControls(IG160102);
                                            obj_op.DisableControls(IG160202);
                                            obj_op.DisableControls(IG160302);
                                            obj_op.DisableControls(IG160402);
                                            obj_op.DisableControls(IG160502);
                                            obj_op.DisableControls(IG160602);
                                            obj_op.DisableControls(IG160702);
                                            obj_op.DisableControls(IG160802);
                                            obj_op.DisableControls(IG160902);
                                            obj_op.DisableControls(IG1601002);
                                            obj_op.DisableControls(IG1601102);
                                            obj_op.DisableControls(IG1601202);
                                        }

                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0402"].ToString() == null)
                            {
                                IG0402.Text = "";
                            }
                            else
                            {
                                IG0402.Text = ds.Tables[0].Rows[0]["IG0402"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0502"].ToString() == null)
                            {
                                IG0502.Text = "";
                            }
                            else
                            {
                                IG0502.Text = ds.Tables[0].Rows[0]["IG0502"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060102"].ToString() == null)
                            {
                                IG060102.Text = "";
                            }
                            else
                            {
                                IG060102.Text = ds.Tables[0].Rows[0]["IG060102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060202"].ToString() == null)
                            {
                                IG060202.Text = "";
                            }
                            else
                            {
                                IG060202.Text = ds.Tables[0].Rows[0]["IG060202"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060302"].ToString() == null)
                            {
                                IG060302.Text = "";
                            }
                            else
                            {
                                IG060302.Text = ds.Tables[0].Rows[0]["IG060302"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060402"].ToString() == null)
                            {
                                IG060402.Text = "";
                            }
                            else
                            {
                                IG060402.Text = ds.Tables[0].Rows[0]["IG060402"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060502"].ToString() == null)
                            {
                                IG060502.Text = "";
                            }
                            else
                            {
                                IG060502.Text = ds.Tables[0].Rows[0]["IG060502"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070102"].ToString() == null)
                            {
                                IG070102.Text = "";
                            }
                            else
                            {
                                IG070102.Text = ds.Tables[0].Rows[0]["IG070102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070202"].ToString() == null)
                            {
                                IG070202.Text = "";
                            }
                            else
                            {
                                IG070202.Text = ds.Tables[0].Rows[0]["IG070202"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070302"].ToString() == null)
                            {
                                IG070302.Text = "";
                            }
                            else
                            {
                                IG070302.Text = ds.Tables[0].Rows[0]["IG070302"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070402"].ToString() == null)
                            {
                                IG070402.Text = "";
                            }
                            else
                            {
                                IG070402.Text = ds.Tables[0].Rows[0]["IG070402"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember3"].ToString() == null)
                            {
                                chkMember3.Text = "";
                            }
                            else
                            {
                                chkMember3.Text = ds.Tables[0].Rows[0]["chkMember3"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "1")
                                    {
                                        if (chkMember3.Text == "1")
                                        {
                                            obj_op.EnableControls(IG0403);
                                            obj_op.EnableControls(IG0503);
                                            obj_op.EnableControls(IG060103);
                                            obj_op.EnableControls(IG060203);
                                            obj_op.EnableControls(IG060303);
                                            obj_op.EnableControls(IG060403);
                                            obj_op.EnableControls(IG060503);
                                            obj_op.EnableControls(IG070103);
                                            obj_op.EnableControls(IG070203);
                                            obj_op.EnableControls(IG070303);
                                            obj_op.EnableControls(IG070403);


                                            obj_op.EnableControls(IG070503);
                                            obj_op.EnableControls(IG070603);
                                            obj_op.EnableControls(IG070703);
                                            obj_op.EnableControls(IG070803);
                                            obj_op.EnableControls(IG070903);
                                            obj_op.EnableControls(IG0701003);
                                            obj_op.EnableControls(IG0701103);
                                            obj_op.EnableControls(IG0701203);
                                            obj_op.EnableControls(IG0701303);
                                            obj_op.EnableControls(IG0803);
                                            obj_op.EnableControls(IG0903);
                                            obj_op.EnableControls(IG01003);
                                            obj_op.EnableControls(IG01103);
                                            obj_op.EnableControls(IG01203);
                                            obj_op.EnableControls(IG01303);
                                            obj_op.EnableControls(IG01403);
                                            obj_op.EnableControls(IG01503);
                                            obj_op.EnableControls(IG160103);
                                            obj_op.EnableControls(IG160203);
                                            obj_op.EnableControls(IG160303);
                                            obj_op.EnableControls(IG160403);
                                            obj_op.EnableControls(IG160503);
                                            obj_op.EnableControls(IG160603);
                                            obj_op.EnableControls(IG160703);
                                            obj_op.EnableControls(IG160803);
                                            obj_op.EnableControls(IG160903);
                                            obj_op.EnableControls(IG1601003);
                                            obj_op.EnableControls(IG1601103);
                                            obj_op.EnableControls(IG1601203);

                                        }
                                        else
                                        {
                                            obj_op.DisableControls(IG0403);
                                            obj_op.DisableControls(IG0503);
                                            obj_op.DisableControls(IG060103);
                                            obj_op.DisableControls(IG060203);
                                            obj_op.DisableControls(IG060303);
                                            obj_op.DisableControls(IG060403);
                                            obj_op.DisableControls(IG060503);
                                            obj_op.DisableControls(IG070103);
                                            obj_op.DisableControls(IG070203);
                                            obj_op.DisableControls(IG070303);
                                            obj_op.DisableControls(IG070403);


                                            obj_op.DisableControls(IG070503);
                                            obj_op.DisableControls(IG070603);
                                            obj_op.DisableControls(IG070703);
                                            obj_op.DisableControls(IG070803);
                                            obj_op.DisableControls(IG070903);
                                            obj_op.DisableControls(IG0701003);
                                            obj_op.DisableControls(IG0701103);
                                            obj_op.DisableControls(IG0701203);
                                            obj_op.DisableControls(IG0701303);
                                            obj_op.DisableControls(IG0803);
                                            obj_op.DisableControls(IG0903);
                                            obj_op.DisableControls(IG01003);
                                            obj_op.DisableControls(IG01103);
                                            obj_op.DisableControls(IG01203);
                                            obj_op.DisableControls(IG01303);
                                            obj_op.DisableControls(IG01403);
                                            obj_op.DisableControls(IG01503);
                                            obj_op.DisableControls(IG160103);
                                            obj_op.DisableControls(IG160203);
                                            obj_op.DisableControls(IG160303);
                                            obj_op.DisableControls(IG160403);
                                            obj_op.DisableControls(IG160503);
                                            obj_op.DisableControls(IG160603);
                                            obj_op.DisableControls(IG160703);
                                            obj_op.DisableControls(IG160803);
                                            obj_op.DisableControls(IG160903);
                                            obj_op.DisableControls(IG1601003);
                                            obj_op.DisableControls(IG1601103);
                                            obj_op.DisableControls(IG1601203);

                                        }
                                    }
                                }


                            }

                            if (ds.Tables[0].Rows[0]["IG0403"].ToString() == null)
                            {
                                IG0403.Text = "";
                            }
                            else
                            {
                                IG0403.Text = ds.Tables[0].Rows[0]["IG0403"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0503"].ToString() == null)
                            {
                                IG0503.Text = "";
                            }
                            else
                            {
                                IG0503.Text = ds.Tables[0].Rows[0]["IG0503"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060103"].ToString() == null)
                            {
                                IG060103.Text = "";
                            }
                            else
                            {
                                IG060103.Text = ds.Tables[0].Rows[0]["IG060103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060203"].ToString() == null)
                            {
                                IG060203.Text = "";
                            }
                            else
                            {
                                IG060203.Text = ds.Tables[0].Rows[0]["IG060203"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060303"].ToString() == null)
                            {
                                IG060303.Text = "";
                            }
                            else
                            {
                                IG060303.Text = ds.Tables[0].Rows[0]["IG060303"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060403"].ToString() == null)
                            {
                                IG060403.Text = "";
                            }
                            else
                            {
                                IG060403.Text = ds.Tables[0].Rows[0]["IG060403"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060503"].ToString() == null)
                            {
                                IG060503.Text = "";
                            }
                            else
                            {
                                IG060503.Text = ds.Tables[0].Rows[0]["IG060503"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070103"].ToString() == null)
                            {
                                IG070103.Text = "";
                            }
                            else
                            {
                                IG070103.Text = ds.Tables[0].Rows[0]["IG070103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070203"].ToString() == null)
                            {
                                IG070203.Text = "";
                            }
                            else
                            {
                                IG070203.Text = ds.Tables[0].Rows[0]["IG070203"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070303"].ToString() == null)
                            {
                                IG070303.Text = "";
                            }
                            else
                            {
                                IG070303.Text = ds.Tables[0].Rows[0]["IG070303"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070403"].ToString() == null)
                            {
                                IG070403.Text = "";
                            }
                            else
                            {
                                IG070403.Text = ds.Tables[0].Rows[0]["IG070403"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember4"].ToString() == null)
                            {
                                chkMember4.Text = "";
                            }
                            else
                            {
                                chkMember4.Text = ds.Tables[0].Rows[0]["chkMember4"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "1")
                                    {

                                        if (chkMember4.Text == "1")
                                        {
                                            obj_op.EnableControls(IG0404);
                                            obj_op.EnableControls(IG0504);
                                            obj_op.EnableControls(IG060104);
                                            obj_op.EnableControls(IG060204);
                                            obj_op.EnableControls(IG060304);
                                            obj_op.EnableControls(IG060404);
                                            obj_op.EnableControls(IG060504);
                                            obj_op.EnableControls(IG070104);
                                            obj_op.EnableControls(IG070204);
                                            obj_op.EnableControls(IG070304);
                                            obj_op.EnableControls(IG070404);

                                            obj_op.EnableControls(IG070504);
                                            obj_op.EnableControls(IG070604);
                                            obj_op.EnableControls(IG070704);
                                            obj_op.EnableControls(IG070804);
                                            obj_op.EnableControls(IG070904);
                                            obj_op.EnableControls(IG0701004);
                                            obj_op.EnableControls(IG0701104);
                                            obj_op.EnableControls(IG0701204);
                                            obj_op.EnableControls(IG0701304);
                                            obj_op.EnableControls(IG0804);
                                            obj_op.EnableControls(IG0904);
                                            obj_op.EnableControls(IG01004);
                                            obj_op.EnableControls(IG01104);
                                            obj_op.EnableControls(IG01204);
                                            obj_op.EnableControls(IG01304);
                                            obj_op.EnableControls(IG01404);
                                            obj_op.EnableControls(IG01504);
                                            obj_op.EnableControls(IG160104);
                                            obj_op.EnableControls(IG160204);
                                            obj_op.EnableControls(IG160304);
                                            obj_op.EnableControls(IG160404);
                                            obj_op.EnableControls(IG160504);
                                            obj_op.EnableControls(IG160604);
                                            obj_op.EnableControls(IG160704);
                                            obj_op.EnableControls(IG160804);
                                            obj_op.EnableControls(IG160904);
                                            obj_op.EnableControls(IG1601004);
                                            obj_op.EnableControls(IG1601104);
                                            obj_op.EnableControls(IG1601204);

                                        }
                                        else
                                        {
                                            obj_op.DisableControls(IG0404);
                                            obj_op.DisableControls(IG0504);
                                            obj_op.DisableControls(IG060104);
                                            obj_op.DisableControls(IG060204);
                                            obj_op.DisableControls(IG060304);
                                            obj_op.DisableControls(IG060404);
                                            obj_op.DisableControls(IG060504);
                                            obj_op.DisableControls(IG070104);
                                            obj_op.DisableControls(IG070204);
                                            obj_op.DisableControls(IG070304);
                                            obj_op.DisableControls(IG070404);

                                            obj_op.DisableControls(IG070504);
                                            obj_op.DisableControls(IG070604);
                                            obj_op.DisableControls(IG070704);
                                            obj_op.DisableControls(IG070804);
                                            obj_op.DisableControls(IG070904);
                                            obj_op.DisableControls(IG0701004);
                                            obj_op.DisableControls(IG0701104);
                                            obj_op.DisableControls(IG0701204);
                                            obj_op.DisableControls(IG0701304);
                                            obj_op.DisableControls(IG0804);
                                            obj_op.DisableControls(IG0904);
                                            obj_op.DisableControls(IG01004);
                                            obj_op.DisableControls(IG01104);
                                            obj_op.DisableControls(IG01204);
                                            obj_op.DisableControls(IG01304);
                                            obj_op.DisableControls(IG01404);
                                            obj_op.DisableControls(IG01504);
                                            obj_op.DisableControls(IG160104);
                                            obj_op.DisableControls(IG160204);
                                            obj_op.DisableControls(IG160304);
                                            obj_op.DisableControls(IG160404);
                                            obj_op.DisableControls(IG160504);
                                            obj_op.DisableControls(IG160604);
                                            obj_op.DisableControls(IG160704);
                                            obj_op.DisableControls(IG160804);
                                            obj_op.DisableControls(IG160904);
                                            obj_op.DisableControls(IG1601004);
                                            obj_op.DisableControls(IG1601104);
                                            obj_op.DisableControls(IG1601204);

                                        }

                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0404"].ToString() == null)
                            {
                                IG0404.Text = "";
                            }
                            else
                            {
                                IG0404.Text = ds.Tables[0].Rows[0]["IG0404"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0504"].ToString() == null)
                            {
                                IG0504.Text = "";
                            }
                            else
                            {
                                IG0504.Text = ds.Tables[0].Rows[0]["IG0504"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060104"].ToString() == null)
                            {
                                IG060104.Text = "";
                            }
                            else
                            {
                                IG060104.Text = ds.Tables[0].Rows[0]["IG060104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060204"].ToString() == null)
                            {
                                IG060204.Text = "";
                            }
                            else
                            {
                                IG060204.Text = ds.Tables[0].Rows[0]["IG060204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060304"].ToString() == null)
                            {
                                IG060304.Text = "";
                            }
                            else
                            {
                                IG060304.Text = ds.Tables[0].Rows[0]["IG060304"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060404"].ToString() == null)
                            {
                                IG060404.Text = "";
                            }
                            else
                            {
                                IG060404.Text = ds.Tables[0].Rows[0]["IG060404"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060504"].ToString() == null)
                            {
                                IG060504.Text = "";
                            }
                            else
                            {
                                IG060504.Text = ds.Tables[0].Rows[0]["IG060504"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070104"].ToString() == null)
                            {
                                IG070104.Text = "";
                            }
                            else
                            {
                                IG070104.Text = ds.Tables[0].Rows[0]["IG070104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070204"].ToString() == null)
                            {
                                IG070204.Text = "";
                            }
                            else
                            {
                                IG070204.Text = ds.Tables[0].Rows[0]["IG070204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070304"].ToString() == null)
                            {
                                IG070304.Text = "";
                            }
                            else
                            {
                                IG070304.Text = ds.Tables[0].Rows[0]["IG070304"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070404"].ToString() == null)
                            {
                                IG070404.Text = "";
                            }
                            else
                            {
                                IG070404.Text = ds.Tables[0].Rows[0]["IG070404"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember5"].ToString() == null)
                            {
                                chkMember5.Text = "";
                            }
                            else
                            {
                                chkMember5.Text = ds.Tables[0].Rows[0]["chkMember5"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (IG01.Text == "1")
                                    {

                                        if (chkMember5.Text == "1")
                                        {
                                            obj_op.EnableControls(IG0405);
                                            obj_op.EnableControls(IG0505);
                                            obj_op.EnableControls(IG060105);
                                            obj_op.EnableControls(IG060205);
                                            obj_op.EnableControls(IG060305);
                                            obj_op.EnableControls(IG060405);
                                            obj_op.EnableControls(IG060505);
                                            obj_op.EnableControls(IG070105);
                                            obj_op.EnableControls(IG070205);
                                            obj_op.EnableControls(IG070305);
                                            obj_op.EnableControls(IG070405);

                                            obj_op.EnableControls(IG070505);
                                            obj_op.EnableControls(IG070605);
                                            obj_op.EnableControls(IG070705);
                                            obj_op.EnableControls(IG070805);
                                            obj_op.EnableControls(IG070905);
                                            obj_op.EnableControls(IG0701005);
                                            obj_op.EnableControls(IG0701105);
                                            obj_op.EnableControls(IG0701205);
                                            obj_op.EnableControls(IG0701305);
                                            obj_op.EnableControls(IG0805);
                                            obj_op.EnableControls(IG0905);
                                            obj_op.EnableControls(IG01005);
                                            obj_op.EnableControls(IG01105);
                                            obj_op.EnableControls(IG01205);
                                            obj_op.EnableControls(IG01305);
                                            obj_op.EnableControls(IG01405);
                                            obj_op.EnableControls(IG01505);
                                            obj_op.EnableControls(IG160105);
                                            obj_op.EnableControls(IG160205);
                                            obj_op.EnableControls(IG160305);
                                            obj_op.EnableControls(IG160405);
                                            obj_op.EnableControls(IG160505);
                                            obj_op.EnableControls(IG160605);
                                            obj_op.EnableControls(IG160705);
                                            obj_op.EnableControls(IG160805);
                                            obj_op.EnableControls(IG160905);
                                            obj_op.EnableControls(IG1601005);
                                            obj_op.EnableControls(IG1601105);
                                            obj_op.EnableControls(IG1601205);

                                        }
                                        else
                                        {
                                            obj_op.DisableControls(IG0405);
                                            obj_op.DisableControls(IG0505);
                                            obj_op.DisableControls(IG060105);
                                            obj_op.DisableControls(IG060205);
                                            obj_op.DisableControls(IG060305);
                                            obj_op.DisableControls(IG060405);
                                            obj_op.DisableControls(IG060505);
                                            obj_op.DisableControls(IG070105);
                                            obj_op.DisableControls(IG070205);
                                            obj_op.DisableControls(IG070305);
                                            obj_op.DisableControls(IG070405);

                                            obj_op.DisableControls(IG070505);
                                            obj_op.DisableControls(IG070605);
                                            obj_op.DisableControls(IG070705);
                                            obj_op.DisableControls(IG070805);
                                            obj_op.DisableControls(IG070905);
                                            obj_op.DisableControls(IG0701005);
                                            obj_op.DisableControls(IG0701105);
                                            obj_op.DisableControls(IG0701205);
                                            obj_op.DisableControls(IG0701305);
                                            obj_op.DisableControls(IG0805);
                                            obj_op.DisableControls(IG0905);
                                            obj_op.DisableControls(IG01005);
                                            obj_op.DisableControls(IG01105);
                                            obj_op.DisableControls(IG01205);
                                            obj_op.DisableControls(IG01305);
                                            obj_op.DisableControls(IG01405);
                                            obj_op.DisableControls(IG01505);
                                            obj_op.DisableControls(IG160105);
                                            obj_op.DisableControls(IG160205);
                                            obj_op.DisableControls(IG160305);
                                            obj_op.DisableControls(IG160405);
                                            obj_op.DisableControls(IG160505);
                                            obj_op.DisableControls(IG160605);
                                            obj_op.DisableControls(IG160705);
                                            obj_op.DisableControls(IG160805);
                                            obj_op.DisableControls(IG160905);
                                            obj_op.DisableControls(IG1601005);
                                            obj_op.DisableControls(IG1601105);
                                            obj_op.DisableControls(IG1601205);


                                        }

                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0405"].ToString() == null)
                            {
                                IG0405.Text = "";
                            }
                            else
                            {
                                IG0405.Text = ds.Tables[0].Rows[0]["IG0405"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0505"].ToString() == null)
                            {
                                IG0505.Text = "";
                            }
                            else
                            {
                                IG0505.Text = ds.Tables[0].Rows[0]["IG0505"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060105"].ToString() == null)
                            {
                                IG060105.Text = "";
                            }
                            else
                            {
                                IG060105.Text = ds.Tables[0].Rows[0]["IG060105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060205"].ToString() == null)
                            {
                                IG060205.Text = "";
                            }
                            else
                            {
                                IG060205.Text = ds.Tables[0].Rows[0]["IG060205"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060305"].ToString() == null)
                            {
                                IG060305.Text = "";
                            }
                            else
                            {
                                IG060305.Text = ds.Tables[0].Rows[0]["IG060305"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060405"].ToString() == null)
                            {
                                IG060405.Text = "";
                            }
                            else
                            {
                                IG060405.Text = ds.Tables[0].Rows[0]["IG060405"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060505"].ToString() == null)
                            {
                                IG060505.Text = "";
                            }
                            else
                            {
                                IG060505.Text = ds.Tables[0].Rows[0]["IG060505"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070105"].ToString() == null)
                            {
                                IG070105.Text = "";
                            }
                            else
                            {
                                IG070105.Text = ds.Tables[0].Rows[0]["IG070105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070205"].ToString() == null)
                            {
                                IG070205.Text = "";
                            }
                            else
                            {
                                IG070205.Text = ds.Tables[0].Rows[0]["IG070205"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070305"].ToString() == null)
                            {
                                IG070305.Text = "";
                            }
                            else
                            {
                                IG070305.Text = ds.Tables[0].Rows[0]["IG070305"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070405"].ToString() == null)
                            {
                                IG070405.Text = "";
                            }
                            else
                            {
                                IG070405.Text = ds.Tables[0].Rows[0]["IG070405"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070501"].ToString() == null)
                            {
                                IG070501.Text = "";
                            }
                            else
                            {
                                IG070501.Text = ds.Tables[0].Rows[0]["IG070501"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070601"].ToString() == null)
                            {
                                IG070601.Text = "";
                            }
                            else
                            {
                                IG070601.Text = ds.Tables[0].Rows[0]["IG070601"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070701"].ToString() == null)
                            {
                                IG070701.Text = "";
                            }
                            else
                            {
                                IG070701.Text = ds.Tables[0].Rows[0]["IG070701"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070801"].ToString() == null)
                            {
                                IG070801.Text = "";
                            }
                            else
                            {
                                IG070801.Text = ds.Tables[0].Rows[0]["IG070801"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070901"].ToString() == null)
                            {
                                IG070901.Text = "";
                            }
                            else
                            {
                                IG070901.Text = ds.Tables[0].Rows[0]["IG070901"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701001"].ToString() == null)
                            {
                                IG0701001.Text = "";
                            }
                            else
                            {
                                IG0701001.Text = ds.Tables[0].Rows[0]["IG0701001"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701101"].ToString() == null)
                            {
                                IG0701101.Text = "";
                            }
                            else
                            {
                                IG0701101.Text = ds.Tables[0].Rows[0]["IG0701101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701201"].ToString() == null)
                            {
                                IG0701201.Text = "";
                            }
                            else
                            {
                                IG0701201.Text = ds.Tables[0].Rows[0]["IG0701201"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1")
                                    {
                                        if (IG0701201.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0701301);
                                            obj_op.DisableControls(IG0801);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0701301);
                                            obj_op.EnableControls(IG0801);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0701301"].ToString() == null)
                            {
                                IG0701301.Text = "";
                            }
                            else
                            {
                                IG0701301.Text = ds.Tables[0].Rows[0]["IG0701301"].ToString();


                                //javed hai

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1")
                                    {
                                        if (IG0701201.Text != "1")
                                        {
                                            if (IG0701301.Text == "1")
                                            {
                                                obj_op.DisableControls(IG0801);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG0801);
                                            }
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0801"].ToString() == null)
                            {
                                IG0801.Text = "";
                            }
                            else
                            {
                                IG0801.Text = ds.Tables[0].Rows[0]["IG0801"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0901"].ToString() == null)
                            {
                                IG0901.Text = "";
                            }
                            else
                            {
                                IG0901.Text = ds.Tables[0].Rows[0]["IG0901"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1")
                                    {
                                        if (IG0901.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01001);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01001);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01001"].ToString() == null)
                            {
                                IG01001.Text = "";
                            }
                            else
                            {
                                IG01001.Text = ds.Tables[0].Rows[0]["IG01001"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1")
                                    {
                                        if (IG01001.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01101);
                                            obj_op.DisableControls(IG01201);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01101);
                                            obj_op.EnableControls(IG01201);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01101"].ToString() == null)
                            {
                                IG01101.Text = "";
                            }
                            else
                            {
                                IG01101.Text = ds.Tables[0].Rows[0]["IG01101"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember1.Text == "1")
                                    {
                                        if (IG01001.Text != "1")
                                        {
                                            if (IG01101.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01201);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01201);
                                            }
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG01201"].ToString() == null)
                            {
                                IG01201.Text = "";
                            }
                            else
                            {
                                IG01201.Text = ds.Tables[0].Rows[0]["IG01201"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01301"].ToString() == null)
                            {
                                IG01301.Text = "";
                            }
                            else
                            {
                                IG01301.Text = ds.Tables[0].Rows[0]["IG01301"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01401"].ToString() == null)
                            {
                                IG01401.Text = "";
                            }
                            else
                            {
                                IG01401.Text = ds.Tables[0].Rows[0]["IG01401"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01501"].ToString() == null)
                            {
                                IG01501.Text = "";
                            }
                            else
                            {
                                IG01501.Text = ds.Tables[0].Rows[0]["IG01501"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160101"].ToString() == null)
                            {
                                IG160101.Text = "";
                            }
                            else
                            {
                                IG160101.Text = ds.Tables[0].Rows[0]["IG160101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160201"].ToString() == null)
                            {
                                IG160201.Text = "";
                            }
                            else
                            {
                                IG160201.Text = ds.Tables[0].Rows[0]["IG160201"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160301"].ToString() == null)
                            {
                                IG160301.Text = "";
                            }
                            else
                            {
                                IG160301.Text = ds.Tables[0].Rows[0]["IG160301"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160401"].ToString() == null)
                            {
                                IG160401.Text = "";
                            }
                            else
                            {
                                IG160401.Text = ds.Tables[0].Rows[0]["IG160401"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160501"].ToString() == null)
                            {
                                IG160501.Text = "";
                            }
                            else
                            {
                                IG160501.Text = ds.Tables[0].Rows[0]["IG160501"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160601"].ToString() == null)
                            {
                                IG160601.Text = "";
                            }
                            else
                            {
                                IG160601.Text = ds.Tables[0].Rows[0]["IG160601"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160701"].ToString() == null)
                            {
                                IG160701.Text = "";
                            }
                            else
                            {
                                IG160701.Text = ds.Tables[0].Rows[0]["IG160701"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160801"].ToString() == null)
                            {
                                IG160801.Text = "";
                            }
                            else
                            {
                                IG160801.Text = ds.Tables[0].Rows[0]["IG160801"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160901"].ToString() == null)
                            {
                                IG160901.Text = "";
                            }
                            else
                            {
                                IG160901.Text = ds.Tables[0].Rows[0]["IG160901"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601001"].ToString() == null)
                            {
                                IG1601001.Text = "";
                            }
                            else
                            {
                                IG1601001.Text = ds.Tables[0].Rows[0]["IG1601001"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601101"].ToString() == null)
                            {
                                IG1601101.Text = "";
                            }
                            else
                            {
                                IG1601101.Text = ds.Tables[0].Rows[0]["IG1601101"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601201"].ToString() == null)
                            {
                                IG1601201.Text = "";
                            }
                            else
                            {
                                IG1601201.Text = ds.Tables[0].Rows[0]["IG1601201"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070502"].ToString() == null)
                            {
                                IG070502.Text = "";
                            }
                            else
                            {
                                IG070502.Text = ds.Tables[0].Rows[0]["IG070502"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070602"].ToString() == null)
                            {
                                IG070602.Text = "";
                            }
                            else
                            {
                                IG070602.Text = ds.Tables[0].Rows[0]["IG070602"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070702"].ToString() == null)
                            {
                                IG070702.Text = "";
                            }
                            else
                            {
                                IG070702.Text = ds.Tables[0].Rows[0]["IG070702"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070802"].ToString() == null)
                            {
                                IG070802.Text = "";
                            }
                            else
                            {
                                IG070802.Text = ds.Tables[0].Rows[0]["IG070802"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070902"].ToString() == null)
                            {
                                IG070902.Text = "";
                            }
                            else
                            {
                                IG070902.Text = ds.Tables[0].Rows[0]["IG070902"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701002"].ToString() == null)
                            {
                                IG0701002.Text = "";
                            }
                            else
                            {
                                IG0701002.Text = ds.Tables[0].Rows[0]["IG0701002"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701102"].ToString() == null)
                            {
                                IG0701102.Text = "";
                            }
                            else
                            {
                                IG0701102.Text = ds.Tables[0].Rows[0]["IG0701102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701202"].ToString() == null)
                            {
                                IG0701202.Text = "";
                            }
                            else
                            {
                                IG0701202.Text = ds.Tables[0].Rows[0]["IG0701202"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember2.Text == "1")
                                    {
                                        if (IG0701202.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0701302);
                                            obj_op.DisableControls(IG0802);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0701302);
                                            obj_op.EnableControls(IG0802);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0701302"].ToString() == null)
                            {
                                IG0701302.Text = "";
                            }
                            else
                            {
                                IG0701302.Text = ds.Tables[0].Rows[0]["IG0701302"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember2.Text == "1")
                                    {
                                        if (IG0701302.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0802);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0802);
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0802"].ToString() == null)
                            {
                                IG0802.Text = "";
                            }
                            else
                            {
                                IG0802.Text = ds.Tables[0].Rows[0]["IG0802"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0902"].ToString() == null)
                            {
                                IG0902.Text = "";
                            }
                            else
                            {
                                IG0902.Text = ds.Tables[0].Rows[0]["IG0902"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember2.Text == "1")
                                    {
                                        if (IG0902.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01002);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01002);
                                        }
                                    }
                                }
                            }


                            if (ds.Tables[0].Rows[0]["IG01002"].ToString() == null)
                            {
                                IG01002.Text = "";
                            }
                            else
                            {
                                IG01002.Text = ds.Tables[0].Rows[0]["IG01002"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember2.Text == "1")
                                    {
                                        if (IG01002.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01102);
                                            obj_op.DisableControls(IG01202);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01102);
                                            obj_op.EnableControls(IG01202);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01102"].ToString() == null)
                            {
                                IG01102.Text = "";
                            }
                            else
                            {
                                IG01102.Text = ds.Tables[0].Rows[0]["IG01102"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember2.Text == "1")
                                    {
                                        if (IG01002.Text != "1")
                                        {
                                            if (IG01102.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01202);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01202);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01202"].ToString() == null)
                            {
                                IG01202.Text = "";
                            }
                            else
                            {
                                IG01202.Text = ds.Tables[0].Rows[0]["IG01202"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01302"].ToString() == null)
                            {
                                IG01302.Text = "";
                            }
                            else
                            {
                                IG01302.Text = ds.Tables[0].Rows[0]["IG01302"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01402"].ToString() == null)
                            {
                                IG01402.Text = "";
                            }
                            else
                            {
                                IG01402.Text = ds.Tables[0].Rows[0]["IG01402"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01502"].ToString() == null)
                            {
                                IG01502.Text = "";
                            }
                            else
                            {
                                IG01502.Text = ds.Tables[0].Rows[0]["IG01502"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160102"].ToString() == null)
                            {
                                IG160102.Text = "";
                            }
                            else
                            {
                                IG160102.Text = ds.Tables[0].Rows[0]["IG160102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160202"].ToString() == null)
                            {
                                IG160202.Text = "";
                            }
                            else
                            {
                                IG160202.Text = ds.Tables[0].Rows[0]["IG160202"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160302"].ToString() == null)
                            {
                                IG160302.Text = "";
                            }
                            else
                            {
                                IG160302.Text = ds.Tables[0].Rows[0]["IG160302"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160402"].ToString() == null)
                            {
                                IG160402.Text = "";
                            }
                            else
                            {
                                IG160402.Text = ds.Tables[0].Rows[0]["IG160402"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160502"].ToString() == null)
                            {
                                IG160502.Text = "";
                            }
                            else
                            {
                                IG160502.Text = ds.Tables[0].Rows[0]["IG160502"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160602"].ToString() == null)
                            {
                                IG160602.Text = "";
                            }
                            else
                            {
                                IG160602.Text = ds.Tables[0].Rows[0]["IG160602"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160702"].ToString() == null)
                            {
                                IG160702.Text = "";
                            }
                            else
                            {
                                IG160702.Text = ds.Tables[0].Rows[0]["IG160702"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160802"].ToString() == null)
                            {
                                IG160802.Text = "";
                            }
                            else
                            {
                                IG160802.Text = ds.Tables[0].Rows[0]["IG160802"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160902"].ToString() == null)
                            {
                                IG160902.Text = "";
                            }
                            else
                            {
                                IG160902.Text = ds.Tables[0].Rows[0]["IG160902"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601002"].ToString() == null)
                            {
                                IG1601002.Text = "";
                            }
                            else
                            {
                                IG1601002.Text = ds.Tables[0].Rows[0]["IG1601002"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601102"].ToString() == null)
                            {
                                IG1601102.Text = "";
                            }
                            else
                            {
                                IG1601102.Text = ds.Tables[0].Rows[0]["IG1601102"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601202"].ToString() == null)
                            {
                                IG1601202.Text = "";
                            }
                            else
                            {
                                IG1601202.Text = ds.Tables[0].Rows[0]["IG1601202"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070503"].ToString() == null)
                            {
                                IG070503.Text = "";
                            }
                            else
                            {
                                IG070503.Text = ds.Tables[0].Rows[0]["IG070503"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070603"].ToString() == null)
                            {
                                IG070603.Text = "";
                            }
                            else
                            {
                                IG070603.Text = ds.Tables[0].Rows[0]["IG070603"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070703"].ToString() == null)
                            {
                                IG070703.Text = "";
                            }
                            else
                            {
                                IG070703.Text = ds.Tables[0].Rows[0]["IG070703"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070803"].ToString() == null)
                            {
                                IG070803.Text = "";
                            }
                            else
                            {
                                IG070803.Text = ds.Tables[0].Rows[0]["IG070803"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070903"].ToString() == null)
                            {
                                IG070903.Text = "";
                            }
                            else
                            {
                                IG070903.Text = ds.Tables[0].Rows[0]["IG070903"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701003"].ToString() == null)
                            {
                                IG0701003.Text = "";
                            }
                            else
                            {
                                IG0701003.Text = ds.Tables[0].Rows[0]["IG0701003"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701103"].ToString() == null)
                            {
                                IG0701103.Text = "";
                            }
                            else
                            {
                                IG0701103.Text = ds.Tables[0].Rows[0]["IG0701103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701203"].ToString() == null)
                            {
                                IG0701203.Text = "";
                            }
                            else
                            {
                                IG0701203.Text = ds.Tables[0].Rows[0]["IG0701203"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember3.Text == "1")
                                    {
                                        if (IG0701203.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0701303);
                                            obj_op.DisableControls(IG0803);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0701303);
                                            obj_op.EnableControls(IG0803);
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0701303"].ToString() == null)
                            {
                                IG0701303.Text = "";
                            }
                            else
                            {
                                IG0701303.Text = ds.Tables[0].Rows[0]["IG0701303"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember3.Text == "1")
                                    {
                                        if (IG0701303.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0803);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0803);
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0803"].ToString() == null)
                            {
                                IG0803.Text = "";
                            }
                            else
                            {
                                IG0803.Text = ds.Tables[0].Rows[0]["IG0803"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0903"].ToString() == null)
                            {
                                IG0903.Text = "";
                            }
                            else
                            {
                                IG0903.Text = ds.Tables[0].Rows[0]["IG0903"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember3.Text == "1")
                                    {
                                        if (IG0903.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01003);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01003);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01003"].ToString() == null)
                            {
                                IG01003.Text = "";
                            }
                            else
                            {
                                IG01003.Text = ds.Tables[0].Rows[0]["IG01003"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember3.Text == "1")
                                    {
                                        if (IG01003.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01103);
                                            obj_op.DisableControls(IG01203);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01103);
                                            obj_op.EnableControls(IG01203);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01103"].ToString() == null)
                            {
                                IG01103.Text = "";
                            }
                            else
                            {
                                IG01103.Text = ds.Tables[0].Rows[0]["IG01103"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember3.Text == "1")
                                    {
                                        if (IG01003.Text != "1")
                                        {
                                            if (IG01103.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01203);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01203);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01203"].ToString() == null)
                            {
                                IG01203.Text = "";
                            }
                            else
                            {
                                IG01203.Text = ds.Tables[0].Rows[0]["IG01203"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01303"].ToString() == null)
                            {
                                IG01303.Text = "";
                            }
                            else
                            {
                                IG01303.Text = ds.Tables[0].Rows[0]["IG01303"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01403"].ToString() == null)
                            {
                                IG01403.Text = "";
                            }
                            else
                            {
                                IG01403.Text = ds.Tables[0].Rows[0]["IG01403"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01503"].ToString() == null)
                            {
                                IG01503.Text = "";
                            }
                            else
                            {
                                IG01503.Text = ds.Tables[0].Rows[0]["IG01503"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160103"].ToString() == null)
                            {
                                IG160103.Text = "";
                            }
                            else
                            {
                                IG160103.Text = ds.Tables[0].Rows[0]["IG160103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160203"].ToString() == null)
                            {
                                IG160203.Text = "";
                            }
                            else
                            {
                                IG160203.Text = ds.Tables[0].Rows[0]["IG160203"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160303"].ToString() == null)
                            {
                                IG160303.Text = "";
                            }
                            else
                            {
                                IG160303.Text = ds.Tables[0].Rows[0]["IG160303"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160403"].ToString() == null)
                            {
                                IG160403.Text = "";
                            }
                            else
                            {
                                IG160403.Text = ds.Tables[0].Rows[0]["IG160403"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160503"].ToString() == null)
                            {
                                IG160503.Text = "";
                            }
                            else
                            {
                                IG160503.Text = ds.Tables[0].Rows[0]["IG160503"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160603"].ToString() == null)
                            {
                                IG160603.Text = "";
                            }
                            else
                            {
                                IG160603.Text = ds.Tables[0].Rows[0]["IG160603"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160703"].ToString() == null)
                            {
                                IG160703.Text = "";
                            }
                            else
                            {
                                IG160703.Text = ds.Tables[0].Rows[0]["IG160703"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160803"].ToString() == null)
                            {
                                IG160803.Text = "";
                            }
                            else
                            {
                                IG160803.Text = ds.Tables[0].Rows[0]["IG160803"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160903"].ToString() == null)
                            {
                                IG160903.Text = "";
                            }
                            else
                            {
                                IG160903.Text = ds.Tables[0].Rows[0]["IG160903"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601003"].ToString() == null)
                            {
                                IG1601003.Text = "";
                            }
                            else
                            {
                                IG1601003.Text = ds.Tables[0].Rows[0]["IG1601003"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601103"].ToString() == null)
                            {
                                IG1601103.Text = "";
                            }
                            else
                            {
                                IG1601103.Text = ds.Tables[0].Rows[0]["IG1601103"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601203"].ToString() == null)
                            {
                                IG1601203.Text = "";
                            }
                            else
                            {
                                IG1601203.Text = ds.Tables[0].Rows[0]["IG1601203"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070504"].ToString() == null)
                            {
                                IG070504.Text = "";
                            }
                            else
                            {
                                IG070504.Text = ds.Tables[0].Rows[0]["IG070504"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070604"].ToString() == null)
                            {
                                IG070604.Text = "";
                            }
                            else
                            {
                                IG070604.Text = ds.Tables[0].Rows[0]["IG070604"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070704"].ToString() == null)
                            {
                                IG070704.Text = "";
                            }
                            else
                            {
                                IG070704.Text = ds.Tables[0].Rows[0]["IG070704"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070804"].ToString() == null)
                            {
                                IG070804.Text = "";
                            }
                            else
                            {
                                IG070804.Text = ds.Tables[0].Rows[0]["IG070804"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070904"].ToString() == null)
                            {
                                IG070904.Text = "";
                            }
                            else
                            {
                                IG070904.Text = ds.Tables[0].Rows[0]["IG070904"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701004"].ToString() == null)
                            {
                                IG0701004.Text = "";
                            }
                            else
                            {
                                IG0701004.Text = ds.Tables[0].Rows[0]["IG0701004"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701104"].ToString() == null)
                            {
                                IG0701104.Text = "";
                            }
                            else
                            {
                                IG0701104.Text = ds.Tables[0].Rows[0]["IG0701104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701204"].ToString() == null)
                            {
                                IG0701204.Text = "";
                            }
                            else
                            {
                                IG0701204.Text = ds.Tables[0].Rows[0]["IG0701204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701304"].ToString() == null)
                            {
                                IG0701304.Text = "";
                            }
                            else
                            {
                                IG0701304.Text = ds.Tables[0].Rows[0]["IG0701304"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember4.Text == "1")
                                    {
                                        if (IG0701304.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0804);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0804);
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0804"].ToString() == null)
                            {
                                IG0804.Text = "";
                            }
                            else
                            {
                                IG0804.Text = ds.Tables[0].Rows[0]["IG0804"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0904"].ToString() == null)
                            {
                                IG0904.Text = "";
                            }
                            else
                            {
                                IG0904.Text = ds.Tables[0].Rows[0]["IG0904"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember4.Text == "1")
                                    {
                                        if (IG0904.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01004);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01004);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01004"].ToString() == null)
                            {
                                IG01004.Text = "";
                            }
                            else
                            {
                                IG01004.Text = ds.Tables[0].Rows[0]["IG01004"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember4.Text == "1")
                                    {
                                        if (IG01004.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01104);
                                            obj_op.DisableControls(IG01204);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01104);
                                            obj_op.EnableControls(IG01204);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01104"].ToString() == null)
                            {
                                IG01104.Text = "";
                            }
                            else
                            {
                                IG01104.Text = ds.Tables[0].Rows[0]["IG01104"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember4.Text == "1")
                                    {
                                        if (IG01004.Text != "1")
                                        {
                                            if (IG01104.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01204);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01204);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01204"].ToString() == null)
                            {
                                IG01204.Text = "";
                            }
                            else
                            {
                                IG01204.Text = ds.Tables[0].Rows[0]["IG01204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01304"].ToString() == null)
                            {
                                IG01304.Text = "";
                            }
                            else
                            {
                                IG01304.Text = ds.Tables[0].Rows[0]["IG01304"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01404"].ToString() == null)
                            {
                                IG01404.Text = "";
                            }
                            else
                            {
                                IG01404.Text = ds.Tables[0].Rows[0]["IG01404"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01504"].ToString() == null)
                            {
                                IG01504.Text = "";
                            }
                            else
                            {
                                IG01504.Text = ds.Tables[0].Rows[0]["IG01504"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160104"].ToString() == null)
                            {
                                IG160104.Text = "";
                            }
                            else
                            {
                                IG160104.Text = ds.Tables[0].Rows[0]["IG160104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160204"].ToString() == null)
                            {
                                IG160204.Text = "";
                            }
                            else
                            {
                                IG160204.Text = ds.Tables[0].Rows[0]["IG160204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160304"].ToString() == null)
                            {
                                IG160304.Text = "";
                            }
                            else
                            {
                                IG160304.Text = ds.Tables[0].Rows[0]["IG160304"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160404"].ToString() == null)
                            {
                                IG160404.Text = "";
                            }
                            else
                            {
                                IG160404.Text = ds.Tables[0].Rows[0]["IG160404"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160504"].ToString() == null)
                            {
                                IG160504.Text = "";
                            }
                            else
                            {
                                IG160504.Text = ds.Tables[0].Rows[0]["IG160504"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160604"].ToString() == null)
                            {
                                IG160604.Text = "";
                            }
                            else
                            {
                                IG160604.Text = ds.Tables[0].Rows[0]["IG160604"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160704"].ToString() == null)
                            {
                                IG160704.Text = "";
                            }
                            else
                            {
                                IG160704.Text = ds.Tables[0].Rows[0]["IG160704"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160804"].ToString() == null)
                            {
                                IG160804.Text = "";
                            }
                            else
                            {
                                IG160804.Text = ds.Tables[0].Rows[0]["IG160804"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160904"].ToString() == null)
                            {
                                IG160904.Text = "";
                            }
                            else
                            {
                                IG160904.Text = ds.Tables[0].Rows[0]["IG160904"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601004"].ToString() == null)
                            {
                                IG1601004.Text = "";
                            }
                            else
                            {
                                IG1601004.Text = ds.Tables[0].Rows[0]["IG1601004"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601104"].ToString() == null)
                            {
                                IG1601104.Text = "";
                            }
                            else
                            {
                                IG1601104.Text = ds.Tables[0].Rows[0]["IG1601104"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601204"].ToString() == null)
                            {
                                IG1601204.Text = "";
                            }
                            else
                            {
                                IG1601204.Text = ds.Tables[0].Rows[0]["IG1601204"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070505"].ToString() == null)
                            {
                                IG070505.Text = "";
                            }
                            else
                            {
                                IG070505.Text = ds.Tables[0].Rows[0]["IG070505"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070605"].ToString() == null)
                            {
                                IG070605.Text = "";
                            }
                            else
                            {
                                IG070605.Text = ds.Tables[0].Rows[0]["IG070605"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070705"].ToString() == null)
                            {
                                IG070705.Text = "";
                            }
                            else
                            {
                                IG070705.Text = ds.Tables[0].Rows[0]["IG070705"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070805"].ToString() == null)
                            {
                                IG070805.Text = "";
                            }
                            else
                            {
                                IG070805.Text = ds.Tables[0].Rows[0]["IG070805"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070905"].ToString() == null)
                            {
                                IG070905.Text = "";
                            }
                            else
                            {
                                IG070905.Text = ds.Tables[0].Rows[0]["IG070905"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701005"].ToString() == null)
                            {
                                IG0701005.Text = "";
                            }
                            else
                            {
                                IG0701005.Text = ds.Tables[0].Rows[0]["IG0701005"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701105"].ToString() == null)
                            {
                                IG0701105.Text = "";
                            }
                            else
                            {
                                IG0701105.Text = ds.Tables[0].Rows[0]["IG0701105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701205"].ToString() == null)
                            {
                                IG0701205.Text = "";
                            }
                            else
                            {
                                IG0701205.Text = ds.Tables[0].Rows[0]["IG0701205"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701305"].ToString() == null)
                            {
                                IG0701305.Text = "";
                            }
                            else
                            {
                                IG0701305.Text = ds.Tables[0].Rows[0]["IG0701305"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember4.Text == "1")
                                    {
                                        if (IG0701305.Text == "1")
                                        {
                                            obj_op.DisableControls(IG0805);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG0805);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0805"].ToString() == null)
                            {
                                IG0805.Text = "";
                            }
                            else
                            {
                                IG0805.Text = ds.Tables[0].Rows[0]["IG0805"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0905"].ToString() == null)
                            {
                                IG0905.Text = "";
                            }
                            else
                            {
                                IG0905.Text = ds.Tables[0].Rows[0]["IG0905"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember5.Text == "1")
                                    {
                                        if (IG0905.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01005);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01005);
                                        }
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01005"].ToString() == null)
                            {
                                IG01005.Text = "";
                            }
                            else
                            {
                                IG01005.Text = ds.Tables[0].Rows[0]["IG01005"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember5.Text == "1")
                                    {
                                        if (IG01005.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01105);
                                            obj_op.DisableControls(IG01205);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01105);
                                            obj_op.EnableControls(IG01205);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01105"].ToString() == null)
                            {
                                IG01105.Text = "";
                            }
                            else
                            {
                                IG01105.Text = ds.Tables[0].Rows[0]["IG01105"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember5.Text == "1")
                                    {
                                        if (IG01005.Text != "1")
                                        {
                                            if (IG01105.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01205);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01205);
                                            }
                                        }                                            
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01205"].ToString() == null)
                            {
                                IG01205.Text = "";
                            }
                            else
                            {
                                IG01205.Text = ds.Tables[0].Rows[0]["IG01205"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01305"].ToString() == null)
                            {
                                IG01305.Text = "";
                            }
                            else
                            {
                                IG01305.Text = ds.Tables[0].Rows[0]["IG01305"].ToString();

                            }

                            if (ds.Tables[0].Rows[0]["IG01405"].ToString() == null)
                            {
                                IG01405.Text = "";
                            }
                            else
                            {
                                IG01405.Text = ds.Tables[0].Rows[0]["IG01405"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01505"].ToString() == null)
                            {
                                IG01505.Text = "";
                            }
                            else
                            {
                                IG01505.Text = ds.Tables[0].Rows[0]["IG01505"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160105"].ToString() == null)
                            {
                                IG160105.Text = "";
                            }
                            else
                            {
                                IG160105.Text = ds.Tables[0].Rows[0]["IG160105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160205"].ToString() == null)
                            {
                                IG160205.Text = "";
                            }
                            else
                            {
                                IG160205.Text = ds.Tables[0].Rows[0]["IG160205"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160305"].ToString() == null)
                            {
                                IG160305.Text = "";
                            }
                            else
                            {
                                IG160305.Text = ds.Tables[0].Rows[0]["IG160305"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160405"].ToString() == null)
                            {
                                IG160405.Text = "";
                            }
                            else
                            {
                                IG160405.Text = ds.Tables[0].Rows[0]["IG160405"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160505"].ToString() == null)
                            {
                                IG160505.Text = "";
                            }
                            else
                            {
                                IG160505.Text = ds.Tables[0].Rows[0]["IG160505"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160605"].ToString() == null)
                            {
                                IG160605.Text = "";
                            }
                            else
                            {
                                IG160605.Text = ds.Tables[0].Rows[0]["IG160605"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160705"].ToString() == null)
                            {
                                IG160705.Text = "";
                            }
                            else
                            {
                                IG160705.Text = ds.Tables[0].Rows[0]["IG160705"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160805"].ToString() == null)
                            {
                                IG160805.Text = "";
                            }
                            else
                            {
                                IG160805.Text = ds.Tables[0].Rows[0]["IG160805"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160905"].ToString() == null)
                            {
                                IG160905.Text = "";
                            }
                            else
                            {
                                IG160905.Text = ds.Tables[0].Rows[0]["IG160905"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601005"].ToString() == null)
                            {
                                IG1601005.Text = "";
                            }
                            else
                            {
                                IG1601005.Text = ds.Tables[0].Rows[0]["IG1601005"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601105"].ToString() == null)
                            {
                                IG1601105.Text = "";
                            }
                            else
                            {
                                IG1601105.Text = ds.Tables[0].Rows[0]["IG1601105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601205"].ToString() == null)
                            {
                                IG1601205.Text = "";
                            }
                            else
                            {
                                IG1601205.Text = ds.Tables[0].Rows[0]["IG1601205"].ToString();
                            }

                            //if (ds.Tables[0].Rows[0]["QCFUP01"].ToString() == null)
                            //{
                            //    QCFUP01.Text = "";
                            //}
                            //else
                            //{
                            //    QCFUP01.Text = ds.Tables[0].Rows[0]["QCFUP01"].ToString();
                            //}

                            if (ds.Tables[0].Rows[0]["QCFUP02"].ToString() == null)
                            {
                                QCFUP02.Text = "";
                            }
                            else
                            {
                                QCFUP02.Text = ds.Tables[0].Rows[0]["QCFUP02"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["QCFUP03"].ToString() == null)
                            {
                                QCFUP03.Text = "";
                            }
                            else
                            {
                                QCFUP03.Text = ds.Tables[0].Rows[0]["QCFUP03"].ToString();

                                if (QCFUP03.Text == "2")
                                {
                                    obj_op.EnableControls(QCFUP04);
                                }
                                else
                                {
                                    obj_op.DisableControls(QCFUP04);
                                }

                            }

                            if (ds.Tables[0].Rows[0]["QCFUP04"].ToString() == null)
                            {
                                QCFUP04.Text = "";
                            }
                            else
                            {
                                QCFUP04.Text = ds.Tables[0].Rows[0]["QCFUP04"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["QCFUP05"].ToString() == null)
                            {
                                QCFUP05.Text = "";
                            }
                            else
                            {
                                QCFUP05.Text = ds.Tables[0].Rows[0]["QCFUP05"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["QCFUP06"].ToString() == null)
                            {
                                QCFUP06.Text = "";
                            }
                            else
                            {
                                QCFUP06.Text = ds.Tables[0].Rows[0]["QCFUP06"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["QCFUP07"].ToString() == null)
                            {
                                QCFUP07.Text = "";
                            }
                            else
                            {
                                QCFUP07.Text = ds.Tables[0].Rows[0]["QCFUP07"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby5"].ToString() == null)
                            {
                                chkBaby5.Text = "";
                            }
                            else
                            {
                                chkBaby5.Text = ds.Tables[0].Rows[0]["chkBaby5"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby5.Text == "1")
                                    {
                                        obj_op.EnableControls(IC0605);
                                        obj_op.EnableControls(IC0705);
                                        obj_op.EnableControls(IC0805);
                                        obj_op.EnableControls(IC0905);
                                        obj_op.EnableControls(IC01005);
                                        obj_op.EnableControls(IC01105);

                                    }
                                    else
                                    {
                                        obj_op.DisableControls(IC0605);
                                        obj_op.DisableControls(IC0705);
                                        obj_op.DisableControls(IC0805);
                                        obj_op.DisableControls(IC0905);
                                        obj_op.DisableControls(IC01005);
                                        obj_op.DisableControls(IC01105);

                                        obj_op.DisableControls(IC0606);
                                        obj_op.DisableControls(IC0706);
                                        obj_op.DisableControls(IC0806);
                                        obj_op.DisableControls(IC0906);
                                        obj_op.DisableControls(IC01006);
                                        obj_op.DisableControls(IC01106);

                                        obj_op.DisableControls(IC0607);
                                        obj_op.DisableControls(IC0707);
                                        obj_op.DisableControls(IC0807);
                                        obj_op.DisableControls(IC0907);
                                        obj_op.DisableControls(IC01007);
                                        obj_op.DisableControls(IC01107);

                                        obj_op.DisableControls(IC0608);
                                        obj_op.DisableControls(IC0708);
                                        obj_op.DisableControls(IC0808);
                                        obj_op.DisableControls(IC0908);
                                        obj_op.DisableControls(IC01008);
                                        obj_op.DisableControls(IC01108);

                                        obj_op.DisableControls(IC0609);
                                        obj_op.DisableControls(IC0709);
                                        obj_op.DisableControls(IC0809);
                                        obj_op.DisableControls(IC0909);
                                        obj_op.DisableControls(IC01009);
                                        obj_op.DisableControls(IC01109);

                                        obj_op.DisableControls(IC06010);
                                        obj_op.DisableControls(IC07010);
                                        obj_op.DisableControls(IC08010);
                                        obj_op.DisableControls(IC09010);
                                        obj_op.DisableControls(IC01010);
                                        obj_op.DisableControls(IC01110);

                                        obj_op.DisableControls(IC06011);
                                        obj_op.DisableControls(IC07011);
                                        obj_op.DisableControls(IC08011);
                                        obj_op.DisableControls(IC09011);
                                        obj_op.DisableControls(IC01011);
                                        obj_op.DisableControls(IC01111);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC0605"].ToString() == null)
                            {
                                IC0605.Text = "";
                            }
                            else
                            {
                                IC0605.Text = ds.Tables[0].Rows[0]["IC0605"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0705"].ToString() == null)
                            {
                                IC0705.Text = "";
                            }
                            else
                            {
                                IC0705.Text = ds.Tables[0].Rows[0]["IC0705"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0805"].ToString() == null)
                            {
                                IC0805.Text = "";
                            }
                            else
                            {
                                IC0805.Text = ds.Tables[0].Rows[0]["IC0805"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0905"].ToString() == null)
                            {
                                IC0905.Text = "";
                            }
                            else
                            {
                                IC0905.Text = ds.Tables[0].Rows[0]["IC0905"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby5.Text == "1")
                                    {
                                        if (IC0905.Text == "1")
                                        {
                                            obj_op.DisableControls(IC01005);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IC01005);
                                        }
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01005"].ToString() == null)
                            {
                                IC01005.Text = "";
                            }
                            else
                            {
                                IC01005.Text = ds.Tables[0].Rows[0]["IC01005"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01105"].ToString() == null)
                            {
                                IC01105.Text = "";
                            }
                            else
                            {
                                IC01105.Text = ds.Tables[0].Rows[0]["IC01105"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby6"].ToString() == null)
                            {
                                chkBaby6.Text = "";
                            }
                            else
                            {
                                chkBaby6.Text = ds.Tables[0].Rows[0]["chkBaby6"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby6.Text == "1")
                                    {
                                        obj_op.EnableControls(IC0606);
                                        obj_op.EnableControls(IC0706);
                                        obj_op.EnableControls(IC0806);
                                        obj_op.EnableControls(IC0906);
                                        obj_op.EnableControls(IC01006);
                                        obj_op.EnableControls(IC01106);

                                    }
                                    else
                                    {

                                        obj_op.DisableControls(IC0606);
                                        obj_op.DisableControls(IC0706);
                                        obj_op.DisableControls(IC0806);
                                        obj_op.DisableControls(IC0906);
                                        obj_op.DisableControls(IC01006);
                                        obj_op.DisableControls(IC01106);


                                        obj_op.DisableControls(IC0607);
                                        obj_op.DisableControls(IC0707);
                                        obj_op.DisableControls(IC0807);
                                        obj_op.DisableControls(IC0907);
                                        obj_op.DisableControls(IC01007);
                                        obj_op.DisableControls(IC01107);

                                        obj_op.DisableControls(IC0608);
                                        obj_op.DisableControls(IC0708);
                                        obj_op.DisableControls(IC0808);
                                        obj_op.DisableControls(IC0908);
                                        obj_op.DisableControls(IC01008);
                                        obj_op.DisableControls(IC01108);

                                        obj_op.DisableControls(IC0609);
                                        obj_op.DisableControls(IC0709);
                                        obj_op.DisableControls(IC0809);
                                        obj_op.DisableControls(IC0909);
                                        obj_op.DisableControls(IC01009);
                                        obj_op.DisableControls(IC01109);

                                        obj_op.DisableControls(IC06010);
                                        obj_op.DisableControls(IC07010);
                                        obj_op.DisableControls(IC08010);
                                        obj_op.DisableControls(IC09010);
                                        obj_op.DisableControls(IC01010);
                                        obj_op.DisableControls(IC01110);

                                        obj_op.DisableControls(IC06011);
                                        obj_op.DisableControls(IC07011);
                                        obj_op.DisableControls(IC08011);
                                        obj_op.DisableControls(IC09011);
                                        obj_op.DisableControls(IC01011);
                                        obj_op.DisableControls(IC01111);

                                    }
                                }

                                if (ds.Tables[0].Rows[0]["IC0606"].ToString() == null)
                                {
                                    IC0606.Text = "";
                                }
                                else
                                {
                                    IC0606.Text = ds.Tables[0].Rows[0]["IC0606"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0706"].ToString() == null)
                                {
                                    IC0706.Text = "";
                                }
                                else
                                {
                                    IC0706.Text = ds.Tables[0].Rows[0]["IC0706"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0806"].ToString() == null)
                                {
                                    IC0806.Text = "";
                                }
                                else
                                {
                                    IC0806.Text = ds.Tables[0].Rows[0]["IC0806"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0906"].ToString() == null)
                                {
                                    IC0906.Text = "";
                                }
                                else
                                {
                                    IC0906.Text = ds.Tables[0].Rows[0]["IC0906"].ToString();

                                    if (IB05.Text == "1")
                                    {
                                        if (chkBaby6.Text == "1")
                                        {
                                            if (IC0906.Text == "1")
                                            {
                                                obj_op.DisableControls(IC01006);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IC01006);
                                            }
                                        }
                                    }
                                }

                                if (ds.Tables[0].Rows[0]["IC01006"].ToString() == null)
                                {
                                    IC01006.Text = "";
                                }
                                else
                                {
                                    IC01006.Text = ds.Tables[0].Rows[0]["IC01006"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC01106"].ToString() == null)
                                {
                                    IC01106.Text = "";
                                }
                                else
                                {
                                    IC01106.Text = ds.Tables[0].Rows[0]["IC01106"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["chkBaby7"].ToString() == null)
                                {
                                    chkBaby7.Text = "";
                                }
                                else
                                {
                                    chkBaby7.Text = ds.Tables[0].Rows[0]["chkBaby7"].ToString();

                                    if (IB05.Text == "1")
                                    {

                                        if (chkBaby7.Text == "1")
                                        {
                                            obj_op.EnableControls(IC0607);
                                            obj_op.EnableControls(IC0707);
                                            obj_op.EnableControls(IC0807);
                                            obj_op.EnableControls(IC0907);
                                            obj_op.EnableControls(IC01007);
                                            obj_op.EnableControls(IC01107);

                                        }
                                        else
                                        {

                                            obj_op.DisableControls(IC0607);
                                            obj_op.DisableControls(IC0707);
                                            obj_op.DisableControls(IC0807);
                                            obj_op.DisableControls(IC0907);
                                            obj_op.DisableControls(IC01007);
                                            obj_op.DisableControls(IC01107);

                                            obj_op.DisableControls(IC0608);
                                            obj_op.DisableControls(IC0708);
                                            obj_op.DisableControls(IC0808);
                                            obj_op.DisableControls(IC0908);
                                            obj_op.DisableControls(IC01008);
                                            obj_op.DisableControls(IC01108);

                                            obj_op.DisableControls(IC0609);
                                            obj_op.DisableControls(IC0709);
                                            obj_op.DisableControls(IC0809);
                                            obj_op.DisableControls(IC0909);
                                            obj_op.DisableControls(IC01009);
                                            obj_op.DisableControls(IC01109);

                                            obj_op.DisableControls(IC06010);
                                            obj_op.DisableControls(IC07010);
                                            obj_op.DisableControls(IC08010);
                                            obj_op.DisableControls(IC09010);
                                            obj_op.DisableControls(IC01010);
                                            obj_op.DisableControls(IC01110);

                                            obj_op.DisableControls(IC06011);
                                            obj_op.DisableControls(IC07011);
                                            obj_op.DisableControls(IC08011);
                                            obj_op.DisableControls(IC09011);
                                            obj_op.DisableControls(IC01011);
                                            obj_op.DisableControls(IC01111);

                                        }


                                    }
                                }

                                if (ds.Tables[0].Rows[0]["IC0607"].ToString() == null)
                                {
                                    IC0607.Text = "";
                                }
                                else
                                {
                                    IC0607.Text = ds.Tables[0].Rows[0]["IC0607"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0707"].ToString() == null)
                                {
                                    IC0707.Text = "";
                                }
                                else
                                {
                                    IC0707.Text = ds.Tables[0].Rows[0]["IC0707"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0807"].ToString() == null)
                                {
                                    IC0807.Text = "";
                                }
                                else
                                {
                                    IC0807.Text = ds.Tables[0].Rows[0]["IC0807"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0907"].ToString() == null)
                                {
                                    IC0907.Text = "";
                                }
                                else
                                {
                                    IC0907.Text = ds.Tables[0].Rows[0]["IC0907"].ToString();


                                    if (IB05.Text == "1")
                                    {
                                        if (chkBaby7.Text == "1")
                                        {
                                            if (IC0907.Text == "1")
                                            {
                                                obj_op.DisableControls(IC01007);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IC01007);
                                            }
                                        }
                                    }
                                }

                                if (ds.Tables[0].Rows[0]["IC01007"].ToString() == null)
                                {
                                    IC01007.Text = "";
                                }
                                else
                                {
                                    IC01007.Text = ds.Tables[0].Rows[0]["IC01007"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC01107"].ToString() == null)
                                {
                                    IC01107.Text = "";
                                }
                                else
                                {
                                    IC01107.Text = ds.Tables[0].Rows[0]["IC01107"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["chkBaby8"].ToString() == null)
                                {
                                    chkBaby8.Text = "";
                                }
                                else
                                {
                                    chkBaby8.Text = ds.Tables[0].Rows[0]["chkBaby8"].ToString();

                                    if (IB05.Text == "1")
                                    {

                                        if (chkBaby8.Text == "1")
                                        {
                                            obj_op.EnableControls(IC0608);
                                            obj_op.EnableControls(IC0708);
                                            obj_op.EnableControls(IC0808);
                                            obj_op.EnableControls(IC0908);
                                            obj_op.EnableControls(IC01008);
                                            obj_op.EnableControls(IC01108);

                                        }
                                        else
                                        {

                                            obj_op.DisableControls(IC0608);
                                            obj_op.DisableControls(IC0708);
                                            obj_op.DisableControls(IC0808);
                                            obj_op.DisableControls(IC0908);
                                            obj_op.DisableControls(IC01008);
                                            obj_op.DisableControls(IC01108);

                                            obj_op.DisableControls(IC0609);
                                            obj_op.DisableControls(IC0709);
                                            obj_op.DisableControls(IC0809);
                                            obj_op.DisableControls(IC0909);
                                            obj_op.DisableControls(IC01009);
                                            obj_op.DisableControls(IC01109);

                                            obj_op.DisableControls(IC06010);
                                            obj_op.DisableControls(IC07010);
                                            obj_op.DisableControls(IC08010);
                                            obj_op.DisableControls(IC09010);
                                            obj_op.DisableControls(IC01010);
                                            obj_op.DisableControls(IC01110);

                                            obj_op.DisableControls(IC06011);
                                            obj_op.DisableControls(IC07011);
                                            obj_op.DisableControls(IC08011);
                                            obj_op.DisableControls(IC09011);
                                            obj_op.DisableControls(IC01011);
                                            obj_op.DisableControls(IC01111);

                                        }

                                    }

                                }

                                if (ds.Tables[0].Rows[0]["IC0608"].ToString() == null)
                                {
                                    IC0608.Text = "";
                                }
                                else
                                {
                                    IC0608.Text = ds.Tables[0].Rows[0]["IC0608"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0708"].ToString() == null)
                                {
                                    IC0708.Text = "";
                                }
                                else
                                {
                                    IC0708.Text = ds.Tables[0].Rows[0]["IC0708"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0808"].ToString() == null)
                                {
                                    IC0808.Text = "";
                                }
                                else
                                {
                                    IC0808.Text = ds.Tables[0].Rows[0]["IC0808"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC0908"].ToString() == null)
                                {
                                    IC0908.Text = "";
                                }
                                else
                                {
                                    IC0908.Text = ds.Tables[0].Rows[0]["IC0908"].ToString();

                                    if (IB05.Text == "1")
                                    {
                                        if (chkBaby8.Text == "1")
                                        {
                                            if (IC0908.Text == "1")
                                            {
                                                obj_op.DisableControls(IC01008);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IC01008);
                                            }
                                        }
                                    }
                                }

                                if (ds.Tables[0].Rows[0]["IC01008"].ToString() == null)
                                {
                                    IC01008.Text = "";
                                }
                                else
                                {
                                    IC01008.Text = ds.Tables[0].Rows[0]["IC01008"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["IC01108"].ToString() == null)
                                {
                                    IC01108.Text = "";
                                }
                                else
                                {
                                    IC01108.Text = ds.Tables[0].Rows[0]["IC01108"].ToString();
                                }

                                if (ds.Tables[0].Rows[0]["chkBaby9"].ToString() == null)
                                {
                                    chkBaby9.Text = "";
                                }
                                else
                                {
                                    chkBaby9.Text = ds.Tables[0].Rows[0]["chkBaby9"].ToString();

                                    if (IB05.Text == "1")
                                    {
                                        if (chkBaby9.Text == "1")
                                        {
                                            obj_op.EnableControls(IC0609);
                                            obj_op.EnableControls(IC0709);
                                            obj_op.EnableControls(IC0809);
                                            obj_op.EnableControls(IC0909);
                                            obj_op.EnableControls(IC01009);
                                            obj_op.EnableControls(IC01109);

                                        }
                                        else
                                        {

                                            obj_op.DisableControls(IC0609);
                                            obj_op.DisableControls(IC0709);
                                            obj_op.DisableControls(IC0809);
                                            obj_op.DisableControls(IC0909);
                                            obj_op.DisableControls(IC01009);
                                            obj_op.DisableControls(IC01109);

                                            obj_op.DisableControls(IC06010);
                                            obj_op.DisableControls(IC07010);
                                            obj_op.DisableControls(IC08010);
                                            obj_op.DisableControls(IC09010);
                                            obj_op.DisableControls(IC01010);
                                            obj_op.DisableControls(IC01110);

                                            obj_op.DisableControls(IC06011);
                                            obj_op.DisableControls(IC07011);
                                            obj_op.DisableControls(IC08011);
                                            obj_op.DisableControls(IC09011);
                                            obj_op.DisableControls(IC01011);
                                            obj_op.DisableControls(IC01111);

                                        }

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC0609"].ToString() == null)
                            {
                                IC0609.Text = "";
                            }
                            else
                            {
                                IC0609.Text = ds.Tables[0].Rows[0]["IC0609"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0709"].ToString() == null)
                            {
                                IC0709.Text = "";
                            }
                            else
                            {
                                IC0709.Text = ds.Tables[0].Rows[0]["IC0709"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0809"].ToString() == null)
                            {
                                IC0809.Text = "";
                            }
                            else
                            {
                                IC0809.Text = ds.Tables[0].Rows[0]["IC0809"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC0909"].ToString() == null)
                            {
                                IC0909.Text = "";
                            }
                            else
                            {
                                IC0909.Text = ds.Tables[0].Rows[0]["IC0909"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby9.Text == "1")
                                    {
                                        if (IC0909.Text == "1")
                                        {
                                            obj_op.DisableControls(IC01009);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IC01009);
                                        }
                                    }
                                }
                            }


                            if (ds.Tables[0].Rows[0]["IC01009"].ToString() == null)
                            {
                                IC01009.Text = "";
                            }
                            else
                            {
                                IC01009.Text = ds.Tables[0].Rows[0]["IC01009"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01109"].ToString() == null)
                            {
                                IC01109.Text = "";
                            }
                            else
                            {
                                IC01109.Text = ds.Tables[0].Rows[0]["IC01109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby10"].ToString() == null)
                            {
                                chkBaby10.Text = "";
                            }
                            else
                            {
                                chkBaby10.Text = ds.Tables[0].Rows[0]["chkBaby10"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby10.Text == "1")
                                    {
                                        obj_op.EnableControls(IC06010);
                                        obj_op.EnableControls(IC07010);
                                        obj_op.EnableControls(IC08010);
                                        obj_op.EnableControls(IC09010);
                                        obj_op.EnableControls(IC01010);
                                        obj_op.EnableControls(IC01110);

                                    }
                                    else
                                    {
                                        obj_op.DisableControls(IC06010);
                                        obj_op.DisableControls(IC07010);
                                        obj_op.DisableControls(IC08010);
                                        obj_op.DisableControls(IC09010);
                                        obj_op.DisableControls(IC01010);
                                        obj_op.DisableControls(IC01110);

                                        obj_op.DisableControls(IC06011);
                                        obj_op.DisableControls(IC07011);
                                        obj_op.DisableControls(IC08011);
                                        obj_op.DisableControls(IC09011);
                                        obj_op.DisableControls(IC01011);
                                        obj_op.DisableControls(IC01111);
                                    }

                                }

                            }

                            if (ds.Tables[0].Rows[0]["IC06010"].ToString() == null)
                            {
                                IC06010.Text = "";
                            }
                            else
                            {
                                IC06010.Text = ds.Tables[0].Rows[0]["IC06010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC07010"].ToString() == null)
                            {
                                IC07010.Text = "";
                            }
                            else
                            {
                                IC07010.Text = ds.Tables[0].Rows[0]["IC07010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC08010"].ToString() == null)
                            {
                                IC08010.Text = "";
                            }
                            else
                            {
                                IC08010.Text = ds.Tables[0].Rows[0]["IC08010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC09010"].ToString() == null)
                            {
                                IC09010.Text = "";
                            }
                            else
                            {
                                IC09010.Text = ds.Tables[0].Rows[0]["IC09010"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby10.Text == "1")
                                    {
                                        if (IC09010.Text == "1")
                                        {
                                            obj_op.DisableControls(IC01010);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IC01010);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01010"].ToString() == null)
                            {
                                IC01010.Text = "";
                            }
                            else
                            {
                                IC01010.Text = ds.Tables[0].Rows[0]["IC01010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01110"].ToString() == null)
                            {
                                IC01110.Text = "";
                            }
                            else
                            {
                                IC01110.Text = ds.Tables[0].Rows[0]["IC01110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkBaby11"].ToString() == null)
                            {
                                chkBaby11.Text = "";
                            }
                            else
                            {
                                chkBaby11.Text = ds.Tables[0].Rows[0]["chkBaby11"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby11.Text == "1")
                                    {
                                        obj_op.EnableControls(IC06011);
                                        obj_op.EnableControls(IC07011);
                                        obj_op.EnableControls(IC08011);
                                        obj_op.EnableControls(IC09011);
                                        obj_op.EnableControls(IC01011);
                                        obj_op.EnableControls(IC01111);

                                    }
                                    else
                                    {
                                        obj_op.DisableControls(IC06011);
                                        obj_op.DisableControls(IC07011);
                                        obj_op.DisableControls(IC08011);
                                        obj_op.DisableControls(IC09011);
                                        obj_op.DisableControls(IC01011);
                                        obj_op.DisableControls(IC01111);
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC06011"].ToString() == null)
                            {
                                IC06011.Text = "";
                            }
                            else
                            {
                                IC06011.Text = ds.Tables[0].Rows[0]["IC06011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC07011"].ToString() == null)
                            {
                                IC07011.Text = "";
                            }
                            else
                            {
                                IC07011.Text = ds.Tables[0].Rows[0]["IC07011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC08011"].ToString() == null)
                            {
                                IC08011.Text = "";
                            }
                            else
                            {
                                IC08011.Text = ds.Tables[0].Rows[0]["IC08011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC09011"].ToString() == null)
                            {
                                IC09011.Text = "";
                            }
                            else
                            {
                                IC09011.Text = ds.Tables[0].Rows[0]["IC09011"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkBaby11.Text == "1")
                                    {
                                        if (IC09011.Text == "1")
                                        {
                                            obj_op.DisableControls(IC01011);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IC01011);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IC01011"].ToString() == null)
                            {
                                IC01011.Text = "";
                            }
                            else
                            {
                                IC01011.Text = ds.Tables[0].Rows[0]["IC01011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IC01111"].ToString() == null)
                            {
                                IC01111.Text = "";
                            }
                            else
                            {
                                IC01111.Text = ds.Tables[0].Rows[0]["IC01111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember6"].ToString() == null)
                            {
                                chkMember6.Text = "";
                            }
                            else
                            {
                                chkMember6.Text = ds.Tables[0].Rows[0]["chkMember6"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember6.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0406);
                                        obj_op.EnableControls(IG0506);
                                        obj_op.EnableControls(IG060106);
                                        obj_op.EnableControls(IG060206);
                                        obj_op.EnableControls(IG060306);
                                        obj_op.EnableControls(IG060406);
                                        obj_op.EnableControls(IG060506);

                                        obj_op.EnableControls(IG070106);
                                        obj_op.EnableControls(IG070206);
                                        obj_op.EnableControls(IG070306);
                                        obj_op.EnableControls(IG070406);
                                        obj_op.EnableControls(IG070506);
                                        obj_op.EnableControls(IG070606);
                                        obj_op.EnableControls(IG070706);
                                        obj_op.EnableControls(IG070806);
                                        obj_op.EnableControls(IG070906);
                                        obj_op.EnableControls(IG0701006);
                                        obj_op.EnableControls(IG0701106);
                                        obj_op.EnableControls(IG0701206);
                                        obj_op.EnableControls(IG0701306);

                                        obj_op.EnableControls(IG0806);
                                        obj_op.EnableControls(IG0906);
                                        obj_op.EnableControls(IG01006);

                                        obj_op.EnableControls(IG01106);
                                        obj_op.EnableControls(IG01206);
                                        obj_op.EnableControls(IG01306);
                                        obj_op.EnableControls(IG01406);
                                        obj_op.EnableControls(IG01506);

                                        obj_op.EnableControls(IG160106);
                                        obj_op.EnableControls(IG160206);
                                        obj_op.EnableControls(IG160306);
                                        obj_op.EnableControls(IG160406);
                                        obj_op.EnableControls(IG160506);
                                        obj_op.EnableControls(IG160606);
                                        obj_op.EnableControls(IG160706);
                                        obj_op.EnableControls(IG160806);
                                        obj_op.EnableControls(IG160906);
                                        obj_op.EnableControls(IG1601006);
                                        obj_op.EnableControls(IG1601106);
                                        obj_op.EnableControls(IG1601206);

                                    }
                                    else
                                    {

                                        obj_op.DisableControls(IG0406);
                                        obj_op.DisableControls(IG0506);
                                        obj_op.DisableControls(IG060106);
                                        obj_op.DisableControls(IG060206);
                                        obj_op.DisableControls(IG060306);
                                        obj_op.DisableControls(IG060406);
                                        obj_op.DisableControls(IG060506);

                                        obj_op.DisableControls(IG070106);
                                        obj_op.DisableControls(IG070206);
                                        obj_op.DisableControls(IG070306);
                                        obj_op.DisableControls(IG070406);
                                        obj_op.DisableControls(IG070506);
                                        obj_op.DisableControls(IG070606);
                                        obj_op.DisableControls(IG070706);
                                        obj_op.DisableControls(IG070806);
                                        obj_op.DisableControls(IG070906);
                                        obj_op.DisableControls(IG0701006);
                                        obj_op.DisableControls(IG0701106);
                                        obj_op.DisableControls(IG0701206);
                                        obj_op.DisableControls(IG0701306);

                                        obj_op.DisableControls(IG0806);
                                        obj_op.DisableControls(IG0906);
                                        obj_op.DisableControls(IG01006);

                                        obj_op.DisableControls(IG01106);
                                        obj_op.DisableControls(IG01206);
                                        obj_op.DisableControls(IG01306);
                                        obj_op.DisableControls(IG01406);
                                        obj_op.DisableControls(IG01506);

                                        obj_op.DisableControls(IG160106);
                                        obj_op.DisableControls(IG160206);
                                        obj_op.DisableControls(IG160306);
                                        obj_op.DisableControls(IG160406);
                                        obj_op.DisableControls(IG160506);
                                        obj_op.DisableControls(IG160606);
                                        obj_op.DisableControls(IG160706);
                                        obj_op.DisableControls(IG160806);
                                        obj_op.DisableControls(IG160906);
                                        obj_op.DisableControls(IG1601006);
                                        obj_op.DisableControls(IG1601106);
                                        obj_op.DisableControls(IG1601206);



                                        obj_op.DisableControls(IG0407);
                                        obj_op.DisableControls(IG0507);
                                        obj_op.DisableControls(IG060107);
                                        obj_op.DisableControls(IG060207);
                                        obj_op.DisableControls(IG060307);
                                        obj_op.DisableControls(IG060407);
                                        obj_op.DisableControls(IG060507);

                                        obj_op.DisableControls(IG070107);
                                        obj_op.DisableControls(IG070207);
                                        obj_op.DisableControls(IG070307);
                                        obj_op.DisableControls(IG070407);
                                        obj_op.DisableControls(IG070507);
                                        obj_op.DisableControls(IG070607);
                                        obj_op.DisableControls(IG070707);
                                        obj_op.DisableControls(IG070807);
                                        obj_op.DisableControls(IG070907);
                                        obj_op.DisableControls(IG0701007);
                                        obj_op.DisableControls(IG0701107);
                                        obj_op.DisableControls(IG0701207);
                                        obj_op.DisableControls(IG0701307);

                                        obj_op.DisableControls(IG0807);
                                        obj_op.DisableControls(IG0907);
                                        obj_op.DisableControls(IG01007);

                                        obj_op.DisableControls(IG01107);
                                        obj_op.DisableControls(IG01207);
                                        obj_op.DisableControls(IG01307);
                                        obj_op.DisableControls(IG01407);
                                        obj_op.DisableControls(IG01507);

                                        obj_op.DisableControls(IG160107);
                                        obj_op.DisableControls(IG160207);
                                        obj_op.DisableControls(IG160307);
                                        obj_op.DisableControls(IG160407);
                                        obj_op.DisableControls(IG160507);
                                        obj_op.DisableControls(IG160607);
                                        obj_op.DisableControls(IG160707);
                                        obj_op.DisableControls(IG160807);
                                        obj_op.DisableControls(IG160907);
                                        obj_op.DisableControls(IG1601007);
                                        obj_op.DisableControls(IG1601107);
                                        obj_op.DisableControls(IG1601207);



                                        obj_op.DisableControls(IG0408);
                                        obj_op.DisableControls(IG0508);
                                        obj_op.DisableControls(IG060108);
                                        obj_op.DisableControls(IG060208);
                                        obj_op.DisableControls(IG060308);
                                        obj_op.DisableControls(IG060408);
                                        obj_op.DisableControls(IG060508);

                                        obj_op.DisableControls(IG070108);
                                        obj_op.DisableControls(IG070208);
                                        obj_op.DisableControls(IG070308);
                                        obj_op.DisableControls(IG070408);
                                        obj_op.DisableControls(IG070508);
                                        obj_op.DisableControls(IG070608);
                                        obj_op.DisableControls(IG070708);
                                        obj_op.DisableControls(IG070808);
                                        obj_op.DisableControls(IG070908);
                                        obj_op.DisableControls(IG0701008);
                                        obj_op.DisableControls(IG0701108);
                                        obj_op.DisableControls(IG0701208);
                                        obj_op.DisableControls(IG0701308);

                                        obj_op.DisableControls(IG0808);
                                        obj_op.DisableControls(IG0908);
                                        obj_op.DisableControls(IG01008);

                                        obj_op.DisableControls(IG01108);
                                        obj_op.DisableControls(IG01208);
                                        obj_op.DisableControls(IG01308);
                                        obj_op.DisableControls(IG01408);
                                        obj_op.DisableControls(IG01508);

                                        obj_op.DisableControls(IG160108);
                                        obj_op.DisableControls(IG160208);
                                        obj_op.DisableControls(IG160308);
                                        obj_op.DisableControls(IG160408);
                                        obj_op.DisableControls(IG160508);
                                        obj_op.DisableControls(IG160608);
                                        obj_op.DisableControls(IG160708);
                                        obj_op.DisableControls(IG160808);
                                        obj_op.DisableControls(IG160908);
                                        obj_op.DisableControls(IG1601008);
                                        obj_op.DisableControls(IG1601108);
                                        obj_op.DisableControls(IG1601208);





                                        obj_op.DisableControls(IG0409);
                                        obj_op.DisableControls(IG0509);
                                        obj_op.DisableControls(IG060109);
                                        obj_op.DisableControls(IG060209);
                                        obj_op.DisableControls(IG060309);
                                        obj_op.DisableControls(IG060409);
                                        obj_op.DisableControls(IG060509);

                                        obj_op.DisableControls(IG070109);
                                        obj_op.DisableControls(IG070209);
                                        obj_op.DisableControls(IG070309);
                                        obj_op.DisableControls(IG070409);
                                        obj_op.DisableControls(IG070509);
                                        obj_op.DisableControls(IG070609);
                                        obj_op.DisableControls(IG070709);
                                        obj_op.DisableControls(IG070809);
                                        obj_op.DisableControls(IG070909);
                                        obj_op.DisableControls(IG0701009);
                                        obj_op.DisableControls(IG0701109);
                                        obj_op.DisableControls(IG0701209);
                                        obj_op.DisableControls(IG0701309);

                                        obj_op.DisableControls(IG0809);
                                        obj_op.DisableControls(IG0909);
                                        obj_op.DisableControls(IG01009);

                                        obj_op.DisableControls(IG01109);
                                        obj_op.DisableControls(IG01209);
                                        obj_op.DisableControls(IG01309);
                                        obj_op.DisableControls(IG01409);
                                        obj_op.DisableControls(IG01509);

                                        obj_op.DisableControls(IG160109);
                                        obj_op.DisableControls(IG160209);
                                        obj_op.DisableControls(IG160309);
                                        obj_op.DisableControls(IG160409);
                                        obj_op.DisableControls(IG160509);
                                        obj_op.DisableControls(IG160609);
                                        obj_op.DisableControls(IG160709);
                                        obj_op.DisableControls(IG160809);
                                        obj_op.DisableControls(IG160909);
                                        obj_op.DisableControls(IG1601009);
                                        obj_op.DisableControls(IG1601109);
                                        obj_op.DisableControls(IG1601209);






                                        obj_op.DisableControls(IG0410);
                                        obj_op.DisableControls(IG0510);
                                        obj_op.DisableControls(IG060110);
                                        obj_op.DisableControls(IG060210);
                                        obj_op.DisableControls(IG060310);
                                        obj_op.DisableControls(IG060410);
                                        obj_op.DisableControls(IG060510);

                                        obj_op.DisableControls(IG070110);
                                        obj_op.DisableControls(IG070210);
                                        obj_op.DisableControls(IG070310);
                                        obj_op.DisableControls(IG070410);
                                        obj_op.DisableControls(IG070510);
                                        obj_op.DisableControls(IG070610);
                                        obj_op.DisableControls(IG070710);
                                        obj_op.DisableControls(IG070810);
                                        obj_op.DisableControls(IG070910);
                                        obj_op.DisableControls(IG0701010);
                                        obj_op.DisableControls(IG0701110);
                                        obj_op.DisableControls(IG0701210);
                                        obj_op.DisableControls(IG0701310);

                                        obj_op.DisableControls(IG0810);
                                        obj_op.DisableControls(IG0910);
                                        obj_op.DisableControls(IG01010);

                                        obj_op.DisableControls(IG01110);
                                        obj_op.DisableControls(IG01210);
                                        obj_op.DisableControls(IG01310);
                                        obj_op.DisableControls(IG01410);
                                        obj_op.DisableControls(IG01510);

                                        obj_op.DisableControls(IG160110);
                                        obj_op.DisableControls(IG160210);
                                        obj_op.DisableControls(IG160310);
                                        obj_op.DisableControls(IG160410);
                                        obj_op.DisableControls(IG160510);
                                        obj_op.DisableControls(IG160610);
                                        obj_op.DisableControls(IG160710);
                                        obj_op.DisableControls(IG160810);
                                        obj_op.DisableControls(IG160910);
                                        obj_op.DisableControls(IG1601010);
                                        obj_op.DisableControls(IG1601110);
                                        obj_op.DisableControls(IG1601210);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0406"].ToString() == null)
                            {
                                IG0406.Text = "";
                            }
                            else
                            {
                                IG0406.Text = ds.Tables[0].Rows[0]["IG0406"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0506"].ToString() == null)
                            {
                                IG0506.Text = "";
                            }
                            else
                            {
                                IG0506.Text = ds.Tables[0].Rows[0]["IG0506"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060106"].ToString() == null)
                            {
                                IG060106.Text = "";
                            }
                            else
                            {
                                IG060106.Text = ds.Tables[0].Rows[0]["IG060106"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060206"].ToString() == null)
                            {
                                IG060206.Text = "";
                            }
                            else
                            {
                                IG060206.Text = ds.Tables[0].Rows[0]["IG060206"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060306"].ToString() == null)
                            {
                                IG060306.Text = "";
                            }
                            else
                            {
                                IG060306.Text = ds.Tables[0].Rows[0]["IG060306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060406"].ToString() == null)
                            {
                                IG060406.Text = "";
                            }
                            else
                            {
                                IG060406.Text = ds.Tables[0].Rows[0]["IG060406"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060506"].ToString() == null)
                            {
                                IG060506.Text = "";
                            }
                            else
                            {
                                IG060506.Text = ds.Tables[0].Rows[0]["IG060506"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070106"].ToString() == null)
                            {
                                IG070106.Text = "";
                            }
                            else
                            {
                                IG070106.Text = ds.Tables[0].Rows[0]["IG070106"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070206"].ToString() == null)
                            {
                                IG070206.Text = "";
                            }
                            else
                            {
                                IG070206.Text = ds.Tables[0].Rows[0]["IG070206"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070306"].ToString() == null)
                            {
                                IG070306.Text = "";
                            }
                            else
                            {
                                IG070306.Text = ds.Tables[0].Rows[0]["IG070306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070406"].ToString() == null)
                            {
                                IG070406.Text = "";
                            }
                            else
                            {
                                IG070406.Text = ds.Tables[0].Rows[0]["IG070406"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070506"].ToString() == null)
                            {
                                IG070506.Text = "";
                            }
                            else
                            {
                                IG070506.Text = ds.Tables[0].Rows[0]["IG070506"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070606"].ToString() == null)
                            {
                                IG070606.Text = "";
                            }
                            else
                            {
                                IG070606.Text = ds.Tables[0].Rows[0]["IG070606"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070706"].ToString() == null)
                            {
                                IG070706.Text = "";
                            }
                            else
                            {
                                IG070706.Text = ds.Tables[0].Rows[0]["IG070706"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070806"].ToString() == null)
                            {
                                IG070806.Text = "";
                            }
                            else
                            {
                                IG070806.Text = ds.Tables[0].Rows[0]["IG070806"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070906"].ToString() == null)
                            {
                                IG070906.Text = "";
                            }
                            else
                            {
                                IG070906.Text = ds.Tables[0].Rows[0]["IG070906"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701006"].ToString() == null)
                            {
                                IG0701006.Text = "";
                            }
                            else
                            {
                                IG0701006.Text = ds.Tables[0].Rows[0]["IG0701006"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701106"].ToString() == null)
                            {
                                IG0701106.Text = "";
                            }
                            else
                            {
                                IG0701106.Text = ds.Tables[0].Rows[0]["IG0701106"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701206"].ToString() == null)
                            {
                                IG0701206.Text = "";
                            }
                            else
                            {
                                IG0701206.Text = ds.Tables[0].Rows[0]["IG0701206"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701306"].ToString() == null)
                            {
                                IG0701306.Text = "";
                            }
                            else
                            {
                                IG0701306.Text = ds.Tables[0].Rows[0]["IG0701306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0806"].ToString() == null)
                            {
                                IG0806.Text = "";
                            }
                            else
                            {
                                IG0806.Text = ds.Tables[0].Rows[0]["IG0806"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0906"].ToString() == null)
                            {
                                IG0906.Text = "";
                            }
                            else
                            {
                                IG0906.Text = ds.Tables[0].Rows[0]["IG0906"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember6.Text == "1")
                                    {
                                        if (IG0906.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01006);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01006);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01006"].ToString() == null)
                            {
                                IG01006.Text = "";
                            }
                            else
                            {
                                IG01006.Text = ds.Tables[0].Rows[0]["IG01006"].ToString();

                                //javed

                                if (IB05.Text == "1")
                                {
                                    if (chkMember6.Text == "1")
                                    {
                                        if (IG01006.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01106);
                                            obj_op.DisableControls(IG01206);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01106);
                                            obj_op.EnableControls(IG01206);
                                        }
                                    }
                                }
                            }


                            if (ds.Tables[0].Rows[0]["chkMember7"].ToString() == null)
                            {
                                chkMember7.Text = "";
                            }
                            else
                            {
                                chkMember7.Text = ds.Tables[0].Rows[0]["chkMember7"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember7.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0407);
                                        obj_op.EnableControls(IG0507);
                                        obj_op.EnableControls(IG060107);
                                        obj_op.EnableControls(IG060207);
                                        obj_op.EnableControls(IG060307);
                                        obj_op.EnableControls(IG060407);
                                        obj_op.EnableControls(IG060507);

                                        obj_op.EnableControls(IG070107);
                                        obj_op.EnableControls(IG070207);
                                        obj_op.EnableControls(IG070307);
                                        obj_op.EnableControls(IG070407);
                                        obj_op.EnableControls(IG070507);
                                        obj_op.EnableControls(IG070607);
                                        obj_op.EnableControls(IG070707);
                                        obj_op.EnableControls(IG070807);
                                        obj_op.EnableControls(IG070907);
                                        obj_op.EnableControls(IG0701007);
                                        obj_op.EnableControls(IG0701107);
                                        obj_op.EnableControls(IG0701207);
                                        obj_op.EnableControls(IG0701307);

                                        obj_op.EnableControls(IG0807);
                                        obj_op.EnableControls(IG0907);
                                        obj_op.EnableControls(IG01007);

                                        obj_op.EnableControls(IG01107);
                                        obj_op.EnableControls(IG01207);
                                        obj_op.EnableControls(IG01307);
                                        obj_op.EnableControls(IG01407);
                                        obj_op.EnableControls(IG01507);

                                        obj_op.EnableControls(IG160107);
                                        obj_op.EnableControls(IG160207);
                                        obj_op.EnableControls(IG160307);
                                        obj_op.EnableControls(IG160407);
                                        obj_op.EnableControls(IG160507);
                                        obj_op.EnableControls(IG160607);
                                        obj_op.EnableControls(IG160707);
                                        obj_op.EnableControls(IG160807);
                                        obj_op.EnableControls(IG160907);
                                        obj_op.EnableControls(IG1601007);
                                        obj_op.EnableControls(IG1601107);
                                        obj_op.EnableControls(IG1601207);

                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0407);
                                        obj_op.DisableControls(IG0507);
                                        obj_op.DisableControls(IG060107);
                                        obj_op.DisableControls(IG060207);
                                        obj_op.DisableControls(IG060307);
                                        obj_op.DisableControls(IG060407);
                                        obj_op.DisableControls(IG060507);

                                        obj_op.DisableControls(IG070107);
                                        obj_op.DisableControls(IG070207);
                                        obj_op.DisableControls(IG070307);
                                        obj_op.DisableControls(IG070407);
                                        obj_op.DisableControls(IG070507);
                                        obj_op.DisableControls(IG070607);
                                        obj_op.DisableControls(IG070707);
                                        obj_op.DisableControls(IG070807);
                                        obj_op.DisableControls(IG070907);
                                        obj_op.DisableControls(IG0701007);
                                        obj_op.DisableControls(IG0701107);
                                        obj_op.DisableControls(IG0701207);
                                        obj_op.DisableControls(IG0701307);

                                        obj_op.DisableControls(IG0807);
                                        obj_op.DisableControls(IG0907);
                                        obj_op.DisableControls(IG01007);

                                        obj_op.DisableControls(IG01107);
                                        obj_op.DisableControls(IG01207);
                                        obj_op.DisableControls(IG01307);
                                        obj_op.DisableControls(IG01407);
                                        obj_op.DisableControls(IG01507);

                                        obj_op.DisableControls(IG160107);
                                        obj_op.DisableControls(IG160207);
                                        obj_op.DisableControls(IG160307);
                                        obj_op.DisableControls(IG160407);
                                        obj_op.DisableControls(IG160507);
                                        obj_op.DisableControls(IG160607);
                                        obj_op.DisableControls(IG160707);
                                        obj_op.DisableControls(IG160807);
                                        obj_op.DisableControls(IG160907);
                                        obj_op.DisableControls(IG1601007);
                                        obj_op.DisableControls(IG1601107);
                                        obj_op.DisableControls(IG1601207);



                                        obj_op.DisableControls(IG0408);
                                        obj_op.DisableControls(IG0508);
                                        obj_op.DisableControls(IG060108);
                                        obj_op.DisableControls(IG060208);
                                        obj_op.DisableControls(IG060308);
                                        obj_op.DisableControls(IG060408);
                                        obj_op.DisableControls(IG060508);

                                        obj_op.DisableControls(IG070108);
                                        obj_op.DisableControls(IG070208);
                                        obj_op.DisableControls(IG070308);
                                        obj_op.DisableControls(IG070408);
                                        obj_op.DisableControls(IG070508);
                                        obj_op.DisableControls(IG070608);
                                        obj_op.DisableControls(IG070708);
                                        obj_op.DisableControls(IG070808);
                                        obj_op.DisableControls(IG070908);
                                        obj_op.DisableControls(IG0701008);
                                        obj_op.DisableControls(IG0701108);
                                        obj_op.DisableControls(IG0701208);
                                        obj_op.DisableControls(IG0701308);

                                        obj_op.DisableControls(IG0808);
                                        obj_op.DisableControls(IG0908);
                                        obj_op.DisableControls(IG01008);

                                        obj_op.DisableControls(IG01108);
                                        obj_op.DisableControls(IG01208);
                                        obj_op.DisableControls(IG01308);
                                        obj_op.DisableControls(IG01408);
                                        obj_op.DisableControls(IG01508);

                                        obj_op.DisableControls(IG160108);
                                        obj_op.DisableControls(IG160208);
                                        obj_op.DisableControls(IG160308);
                                        obj_op.DisableControls(IG160408);
                                        obj_op.DisableControls(IG160508);
                                        obj_op.DisableControls(IG160608);
                                        obj_op.DisableControls(IG160708);
                                        obj_op.DisableControls(IG160808);
                                        obj_op.DisableControls(IG160908);
                                        obj_op.DisableControls(IG1601008);
                                        obj_op.DisableControls(IG1601108);
                                        obj_op.DisableControls(IG1601208);





                                        obj_op.DisableControls(IG0409);
                                        obj_op.DisableControls(IG0509);
                                        obj_op.DisableControls(IG060109);
                                        obj_op.DisableControls(IG060209);
                                        obj_op.DisableControls(IG060309);
                                        obj_op.DisableControls(IG060409);
                                        obj_op.DisableControls(IG060509);

                                        obj_op.DisableControls(IG070109);
                                        obj_op.DisableControls(IG070209);
                                        obj_op.DisableControls(IG070309);
                                        obj_op.DisableControls(IG070409);
                                        obj_op.DisableControls(IG070509);
                                        obj_op.DisableControls(IG070609);
                                        obj_op.DisableControls(IG070709);
                                        obj_op.DisableControls(IG070809);
                                        obj_op.DisableControls(IG070909);
                                        obj_op.DisableControls(IG0701009);
                                        obj_op.DisableControls(IG0701109);
                                        obj_op.DisableControls(IG0701209);
                                        obj_op.DisableControls(IG0701309);

                                        obj_op.DisableControls(IG0809);
                                        obj_op.DisableControls(IG0909);
                                        obj_op.DisableControls(IG01009);

                                        obj_op.DisableControls(IG01109);
                                        obj_op.DisableControls(IG01209);
                                        obj_op.DisableControls(IG01309);
                                        obj_op.DisableControls(IG01409);
                                        obj_op.DisableControls(IG01509);

                                        obj_op.DisableControls(IG160109);
                                        obj_op.DisableControls(IG160209);
                                        obj_op.DisableControls(IG160309);
                                        obj_op.DisableControls(IG160409);
                                        obj_op.DisableControls(IG160509);
                                        obj_op.DisableControls(IG160609);
                                        obj_op.DisableControls(IG160709);
                                        obj_op.DisableControls(IG160809);
                                        obj_op.DisableControls(IG160909);
                                        obj_op.DisableControls(IG1601009);
                                        obj_op.DisableControls(IG1601109);
                                        obj_op.DisableControls(IG1601209);






                                        obj_op.DisableControls(IG0410);
                                        obj_op.DisableControls(IG0510);
                                        obj_op.DisableControls(IG060110);
                                        obj_op.DisableControls(IG060210);
                                        obj_op.DisableControls(IG060310);
                                        obj_op.DisableControls(IG060410);
                                        obj_op.DisableControls(IG060510);

                                        obj_op.DisableControls(IG070110);
                                        obj_op.DisableControls(IG070210);
                                        obj_op.DisableControls(IG070310);
                                        obj_op.DisableControls(IG070410);
                                        obj_op.DisableControls(IG070510);
                                        obj_op.DisableControls(IG070610);
                                        obj_op.DisableControls(IG070710);
                                        obj_op.DisableControls(IG070810);
                                        obj_op.DisableControls(IG070910);
                                        obj_op.DisableControls(IG0701010);
                                        obj_op.DisableControls(IG0701110);
                                        obj_op.DisableControls(IG0701210);
                                        obj_op.DisableControls(IG0701310);

                                        obj_op.DisableControls(IG0810);
                                        obj_op.DisableControls(IG0910);
                                        obj_op.DisableControls(IG01010);

                                        obj_op.DisableControls(IG01110);
                                        obj_op.DisableControls(IG01210);
                                        obj_op.DisableControls(IG01310);
                                        obj_op.DisableControls(IG01410);
                                        obj_op.DisableControls(IG01510);

                                        obj_op.DisableControls(IG160110);
                                        obj_op.DisableControls(IG160210);
                                        obj_op.DisableControls(IG160310);
                                        obj_op.DisableControls(IG160410);
                                        obj_op.DisableControls(IG160510);
                                        obj_op.DisableControls(IG160610);
                                        obj_op.DisableControls(IG160710);
                                        obj_op.DisableControls(IG160810);
                                        obj_op.DisableControls(IG160910);
                                        obj_op.DisableControls(IG1601010);
                                        obj_op.DisableControls(IG1601110);
                                        obj_op.DisableControls(IG1601210);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0407"].ToString() == null)
                            {
                                IG0407.Text = "";
                            }
                            else
                            {
                                IG0407.Text = ds.Tables[0].Rows[0]["IG0407"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0507"].ToString() == null)
                            {
                                IG0507.Text = "";
                            }
                            else
                            {
                                IG0507.Text = ds.Tables[0].Rows[0]["IG0507"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060107"].ToString() == null)
                            {
                                IG060107.Text = "";
                            }
                            else
                            {
                                IG060107.Text = ds.Tables[0].Rows[0]["IG060107"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060207"].ToString() == null)
                            {
                                IG060207.Text = "";
                            }
                            else
                            {
                                IG060207.Text = ds.Tables[0].Rows[0]["IG060207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060307"].ToString() == null)
                            {
                                IG060307.Text = "";
                            }
                            else
                            {
                                IG060307.Text = ds.Tables[0].Rows[0]["IG060307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060407"].ToString() == null)
                            {
                                IG060407.Text = "";
                            }
                            else
                            {
                                IG060407.Text = ds.Tables[0].Rows[0]["IG060407"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060507"].ToString() == null)
                            {
                                IG060507.Text = "";
                            }
                            else
                            {
                                IG060507.Text = ds.Tables[0].Rows[0]["IG060507"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070107"].ToString() == null)
                            {
                                IG070107.Text = "";
                            }
                            else
                            {
                                IG070107.Text = ds.Tables[0].Rows[0]["IG070107"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070207"].ToString() == null)
                            {
                                IG070207.Text = "";
                            }
                            else
                            {
                                IG070207.Text = ds.Tables[0].Rows[0]["IG070207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070307"].ToString() == null)
                            {
                                IG070307.Text = "";
                            }
                            else
                            {
                                IG070307.Text = ds.Tables[0].Rows[0]["IG070307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070407"].ToString() == null)
                            {
                                IG070407.Text = "";
                            }
                            else
                            {
                                IG070407.Text = ds.Tables[0].Rows[0]["IG070407"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070507"].ToString() == null)
                            {
                                IG070507.Text = "";
                            }
                            else
                            {
                                IG070507.Text = ds.Tables[0].Rows[0]["IG070507"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070607"].ToString() == null)
                            {
                                IG070607.Text = "";
                            }
                            else
                            {
                                IG070607.Text = ds.Tables[0].Rows[0]["IG070607"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070707"].ToString() == null)
                            {
                                IG070707.Text = "";
                            }
                            else
                            {
                                IG070707.Text = ds.Tables[0].Rows[0]["IG070707"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070807"].ToString() == null)
                            {
                                IG070807.Text = "";
                            }
                            else
                            {
                                IG070807.Text = ds.Tables[0].Rows[0]["IG070807"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070907"].ToString() == null)
                            {
                                IG070907.Text = "";
                            }
                            else
                            {
                                IG070907.Text = ds.Tables[0].Rows[0]["IG070907"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701007"].ToString() == null)
                            {
                                IG0701007.Text = "";
                            }
                            else
                            {
                                IG0701007.Text = ds.Tables[0].Rows[0]["IG0701007"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701107"].ToString() == null)
                            {
                                IG0701107.Text = "";
                            }
                            else
                            {
                                IG0701107.Text = ds.Tables[0].Rows[0]["IG0701107"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701207"].ToString() == null)
                            {
                                IG0701207.Text = "";
                            }
                            else
                            {
                                IG0701207.Text = ds.Tables[0].Rows[0]["IG0701207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701307"].ToString() == null)
                            {
                                IG0701307.Text = "";
                            }
                            else
                            {
                                IG0701307.Text = ds.Tables[0].Rows[0]["IG0701307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0807"].ToString() == null)
                            {
                                IG0807.Text = "";
                            }
                            else
                            {
                                IG0807.Text = ds.Tables[0].Rows[0]["IG0807"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0907"].ToString() == null)
                            {
                                IG0907.Text = "";
                            }
                            else
                            {
                                IG0907.Text = ds.Tables[0].Rows[0]["IG0907"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember7.Text == "1")
                                    {
                                        if (IG0907.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01007);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01007);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01007"].ToString() == null)
                            {
                                IG01007.Text = "";
                            }
                            else
                            {
                                IG01007.Text = ds.Tables[0].Rows[0]["IG01007"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember7.Text == "1")
                                    {
                                        if (IG0907.Text == "1")
                                        {
                                            if (IG01007.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01107);
                                                obj_op.DisableControls(IG01207);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01107);
                                                obj_op.EnableControls(IG01207);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["chkMember8"].ToString() == null)
                            {
                                chkMember8.Text = "";
                            }
                            else
                            {
                                chkMember8.Text = ds.Tables[0].Rows[0]["chkMember8"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember8.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0408);
                                        obj_op.EnableControls(IG0508);
                                        obj_op.EnableControls(IG060108);
                                        obj_op.EnableControls(IG060208);
                                        obj_op.EnableControls(IG060308);
                                        obj_op.EnableControls(IG060408);
                                        obj_op.EnableControls(IG060508);

                                        obj_op.EnableControls(IG070108);
                                        obj_op.EnableControls(IG070208);
                                        obj_op.EnableControls(IG070308);
                                        obj_op.EnableControls(IG070408);
                                        obj_op.EnableControls(IG070508);
                                        obj_op.EnableControls(IG070608);
                                        obj_op.EnableControls(IG070708);
                                        obj_op.EnableControls(IG070808);
                                        obj_op.EnableControls(IG070908);
                                        obj_op.EnableControls(IG0701008);
                                        obj_op.EnableControls(IG0701108);
                                        obj_op.EnableControls(IG0701208);
                                        obj_op.EnableControls(IG0701308);

                                        obj_op.EnableControls(IG0808);
                                        obj_op.EnableControls(IG0908);
                                        obj_op.EnableControls(IG01008);

                                        obj_op.EnableControls(IG01108);
                                        obj_op.EnableControls(IG01208);
                                        obj_op.EnableControls(IG01308);
                                        obj_op.EnableControls(IG01408);
                                        obj_op.EnableControls(IG01508);

                                        obj_op.EnableControls(IG160108);
                                        obj_op.EnableControls(IG160208);
                                        obj_op.EnableControls(IG160308);
                                        obj_op.EnableControls(IG160408);
                                        obj_op.EnableControls(IG160508);
                                        obj_op.EnableControls(IG160608);
                                        obj_op.EnableControls(IG160708);
                                        obj_op.EnableControls(IG160808);
                                        obj_op.EnableControls(IG160908);
                                        obj_op.EnableControls(IG1601008);
                                        obj_op.EnableControls(IG1601108);
                                        obj_op.EnableControls(IG1601208);

                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0408);
                                        obj_op.DisableControls(IG0508);
                                        obj_op.DisableControls(IG060108);
                                        obj_op.DisableControls(IG060208);
                                        obj_op.DisableControls(IG060308);
                                        obj_op.DisableControls(IG060408);
                                        obj_op.DisableControls(IG060508);

                                        obj_op.DisableControls(IG070108);
                                        obj_op.DisableControls(IG070208);
                                        obj_op.DisableControls(IG070308);
                                        obj_op.DisableControls(IG070408);
                                        obj_op.DisableControls(IG070508);
                                        obj_op.DisableControls(IG070608);
                                        obj_op.DisableControls(IG070708);
                                        obj_op.DisableControls(IG070808);
                                        obj_op.DisableControls(IG070908);
                                        obj_op.DisableControls(IG0701008);
                                        obj_op.DisableControls(IG0701108);
                                        obj_op.DisableControls(IG0701208);
                                        obj_op.DisableControls(IG0701308);

                                        obj_op.DisableControls(IG0808);
                                        obj_op.DisableControls(IG0908);
                                        obj_op.DisableControls(IG01008);

                                        obj_op.DisableControls(IG01108);
                                        obj_op.DisableControls(IG01208);
                                        obj_op.DisableControls(IG01308);
                                        obj_op.DisableControls(IG01408);
                                        obj_op.DisableControls(IG01508);

                                        obj_op.DisableControls(IG160108);
                                        obj_op.DisableControls(IG160208);
                                        obj_op.DisableControls(IG160308);
                                        obj_op.DisableControls(IG160408);
                                        obj_op.DisableControls(IG160508);
                                        obj_op.DisableControls(IG160608);
                                        obj_op.DisableControls(IG160708);
                                        obj_op.DisableControls(IG160808);
                                        obj_op.DisableControls(IG160908);
                                        obj_op.DisableControls(IG1601008);
                                        obj_op.DisableControls(IG1601108);
                                        obj_op.DisableControls(IG1601208);





                                        obj_op.DisableControls(IG0409);
                                        obj_op.DisableControls(IG0509);
                                        obj_op.DisableControls(IG060109);
                                        obj_op.DisableControls(IG060209);
                                        obj_op.DisableControls(IG060309);
                                        obj_op.DisableControls(IG060409);
                                        obj_op.DisableControls(IG060509);

                                        obj_op.DisableControls(IG070109);
                                        obj_op.DisableControls(IG070209);
                                        obj_op.DisableControls(IG070309);
                                        obj_op.DisableControls(IG070409);
                                        obj_op.DisableControls(IG070509);
                                        obj_op.DisableControls(IG070609);
                                        obj_op.DisableControls(IG070709);
                                        obj_op.DisableControls(IG070809);
                                        obj_op.DisableControls(IG070909);
                                        obj_op.DisableControls(IG0701009);
                                        obj_op.DisableControls(IG0701109);
                                        obj_op.DisableControls(IG0701209);
                                        obj_op.DisableControls(IG0701309);

                                        obj_op.DisableControls(IG0809);
                                        obj_op.DisableControls(IG0909);
                                        obj_op.DisableControls(IG01009);

                                        obj_op.DisableControls(IG01109);
                                        obj_op.DisableControls(IG01209);
                                        obj_op.DisableControls(IG01309);
                                        obj_op.DisableControls(IG01409);
                                        obj_op.DisableControls(IG01509);

                                        obj_op.DisableControls(IG160109);
                                        obj_op.DisableControls(IG160209);
                                        obj_op.DisableControls(IG160309);
                                        obj_op.DisableControls(IG160409);
                                        obj_op.DisableControls(IG160509);
                                        obj_op.DisableControls(IG160609);
                                        obj_op.DisableControls(IG160709);
                                        obj_op.DisableControls(IG160809);
                                        obj_op.DisableControls(IG160909);
                                        obj_op.DisableControls(IG1601009);
                                        obj_op.DisableControls(IG1601109);
                                        obj_op.DisableControls(IG1601209);






                                        obj_op.DisableControls(IG0410);
                                        obj_op.DisableControls(IG0510);
                                        obj_op.DisableControls(IG060110);
                                        obj_op.DisableControls(IG060210);
                                        obj_op.DisableControls(IG060310);
                                        obj_op.DisableControls(IG060410);
                                        obj_op.DisableControls(IG060510);

                                        obj_op.DisableControls(IG070110);
                                        obj_op.DisableControls(IG070210);
                                        obj_op.DisableControls(IG070310);
                                        obj_op.DisableControls(IG070410);
                                        obj_op.DisableControls(IG070510);
                                        obj_op.DisableControls(IG070610);
                                        obj_op.DisableControls(IG070710);
                                        obj_op.DisableControls(IG070810);
                                        obj_op.DisableControls(IG070910);
                                        obj_op.DisableControls(IG0701010);
                                        obj_op.DisableControls(IG0701110);
                                        obj_op.DisableControls(IG0701210);
                                        obj_op.DisableControls(IG0701310);

                                        obj_op.DisableControls(IG0810);
                                        obj_op.DisableControls(IG0910);
                                        obj_op.DisableControls(IG01010);

                                        obj_op.DisableControls(IG01110);
                                        obj_op.DisableControls(IG01210);
                                        obj_op.DisableControls(IG01310);
                                        obj_op.DisableControls(IG01410);
                                        obj_op.DisableControls(IG01510);

                                        obj_op.DisableControls(IG160110);
                                        obj_op.DisableControls(IG160210);
                                        obj_op.DisableControls(IG160310);
                                        obj_op.DisableControls(IG160410);
                                        obj_op.DisableControls(IG160510);
                                        obj_op.DisableControls(IG160610);
                                        obj_op.DisableControls(IG160710);
                                        obj_op.DisableControls(IG160810);
                                        obj_op.DisableControls(IG160910);
                                        obj_op.DisableControls(IG1601010);
                                        obj_op.DisableControls(IG1601110);
                                        obj_op.DisableControls(IG1601210);

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0408"].ToString() == null)
                            {
                                IG0408.Text = "";
                            }
                            else
                            {
                                IG0408.Text = ds.Tables[0].Rows[0]["IG0408"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0508"].ToString() == null)
                            {
                                IG0508.Text = "";
                            }
                            else
                            {
                                IG0508.Text = ds.Tables[0].Rows[0]["IG0508"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060108"].ToString() == null)
                            {
                                IG060108.Text = "";
                            }
                            else
                            {
                                IG060108.Text = ds.Tables[0].Rows[0]["IG060108"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060208"].ToString() == null)
                            {
                                IG060208.Text = "";
                            }
                            else
                            {
                                IG060208.Text = ds.Tables[0].Rows[0]["IG060208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060308"].ToString() == null)
                            {
                                IG060308.Text = "";
                            }
                            else
                            {
                                IG060308.Text = ds.Tables[0].Rows[0]["IG060308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060408"].ToString() == null)
                            {
                                IG060408.Text = "";
                            }
                            else
                            {
                                IG060408.Text = ds.Tables[0].Rows[0]["IG060408"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060508"].ToString() == null)
                            {
                                IG060508.Text = "";
                            }
                            else
                            {
                                IG060508.Text = ds.Tables[0].Rows[0]["IG060508"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070108"].ToString() == null)
                            {
                                IG070108.Text = "";
                            }
                            else
                            {
                                IG070108.Text = ds.Tables[0].Rows[0]["IG070108"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070208"].ToString() == null)
                            {
                                IG070208.Text = "";
                            }
                            else
                            {
                                IG070208.Text = ds.Tables[0].Rows[0]["IG070208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070308"].ToString() == null)
                            {
                                IG070308.Text = "";
                            }
                            else
                            {
                                IG070308.Text = ds.Tables[0].Rows[0]["IG070308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070408"].ToString() == null)
                            {
                                IG070408.Text = "";
                            }
                            else
                            {
                                IG070408.Text = ds.Tables[0].Rows[0]["IG070408"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070508"].ToString() == null)
                            {
                                IG070508.Text = "";
                            }
                            else
                            {
                                IG070508.Text = ds.Tables[0].Rows[0]["IG070508"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070608"].ToString() == null)
                            {
                                IG070608.Text = "";
                            }
                            else
                            {
                                IG070608.Text = ds.Tables[0].Rows[0]["IG070608"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070708"].ToString() == null)
                            {
                                IG070708.Text = "";
                            }
                            else
                            {
                                IG070708.Text = ds.Tables[0].Rows[0]["IG070708"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070808"].ToString() == null)
                            {
                                IG070808.Text = "";
                            }
                            else
                            {
                                IG070808.Text = ds.Tables[0].Rows[0]["IG070808"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070908"].ToString() == null)
                            {
                                IG070908.Text = "";
                            }
                            else
                            {
                                IG070908.Text = ds.Tables[0].Rows[0]["IG070908"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701008"].ToString() == null)
                            {
                                IG0701008.Text = "";
                            }
                            else
                            {
                                IG0701008.Text = ds.Tables[0].Rows[0]["IG0701008"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701108"].ToString() == null)
                            {
                                IG0701108.Text = "";
                            }
                            else
                            {
                                IG0701108.Text = ds.Tables[0].Rows[0]["IG0701108"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701208"].ToString() == null)
                            {
                                IG0701208.Text = "";
                            }
                            else
                            {
                                IG0701208.Text = ds.Tables[0].Rows[0]["IG0701208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701308"].ToString() == null)
                            {
                                IG0701308.Text = "";
                            }
                            else
                            {
                                IG0701308.Text = ds.Tables[0].Rows[0]["IG0701308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0808"].ToString() == null)
                            {
                                IG0808.Text = "";
                            }
                            else
                            {
                                IG0808.Text = ds.Tables[0].Rows[0]["IG0808"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0908"].ToString() == null)
                            {
                                IG0908.Text = "";
                            }
                            else
                            {
                                IG0908.Text = ds.Tables[0].Rows[0]["IG0908"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember8.Text == "1")
                                    {
                                        if (IG0908.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01008);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01008);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01008"].ToString() == null)
                            {
                                IG01008.Text = "";
                            }
                            else
                            {
                                IG01008.Text = ds.Tables[0].Rows[0]["IG01008"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (IG0908.Text == "1")
                                    {
                                        if (IG01008.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01108);
                                            obj_op.DisableControls(IG01208);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01108);
                                            obj_op.EnableControls(IG01208);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["chkMember9"].ToString() == null)
                            {
                                chkMember9.Text = "";
                            }
                            else
                            {
                                chkMember9.Text = ds.Tables[0].Rows[0]["chkMember9"].ToString();


                                if (IB05.Text == "1")
                                {

                                    if (chkMember9.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0409);
                                        obj_op.EnableControls(IG0509);
                                        obj_op.EnableControls(IG060109);
                                        obj_op.EnableControls(IG060209);
                                        obj_op.EnableControls(IG060309);
                                        obj_op.EnableControls(IG060409);
                                        obj_op.EnableControls(IG060509);

                                        obj_op.EnableControls(IG070109);
                                        obj_op.EnableControls(IG070209);
                                        obj_op.EnableControls(IG070309);
                                        obj_op.EnableControls(IG070409);
                                        obj_op.EnableControls(IG070509);
                                        obj_op.EnableControls(IG070609);
                                        obj_op.EnableControls(IG070709);
                                        obj_op.EnableControls(IG070809);
                                        obj_op.EnableControls(IG070909);
                                        obj_op.EnableControls(IG0701009);
                                        obj_op.EnableControls(IG0701109);
                                        obj_op.EnableControls(IG0701209);
                                        obj_op.EnableControls(IG0701309);

                                        obj_op.EnableControls(IG0809);
                                        obj_op.EnableControls(IG0909);
                                        obj_op.EnableControls(IG01009);

                                        obj_op.EnableControls(IG01109);
                                        obj_op.EnableControls(IG01209);
                                        obj_op.EnableControls(IG01309);
                                        obj_op.EnableControls(IG01409);
                                        obj_op.EnableControls(IG01509);

                                        obj_op.EnableControls(IG160109);
                                        obj_op.EnableControls(IG160209);
                                        obj_op.EnableControls(IG160309);
                                        obj_op.EnableControls(IG160409);
                                        obj_op.EnableControls(IG160509);
                                        obj_op.EnableControls(IG160609);
                                        obj_op.EnableControls(IG160709);
                                        obj_op.EnableControls(IG160809);
                                        obj_op.EnableControls(IG160909);
                                        obj_op.EnableControls(IG1601009);
                                        obj_op.EnableControls(IG1601109);
                                        obj_op.EnableControls(IG1601209);

                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0409);
                                        obj_op.DisableControls(IG0509);
                                        obj_op.DisableControls(IG060109);
                                        obj_op.DisableControls(IG060209);
                                        obj_op.DisableControls(IG060309);
                                        obj_op.DisableControls(IG060409);
                                        obj_op.DisableControls(IG060509);

                                        obj_op.DisableControls(IG070109);
                                        obj_op.DisableControls(IG070209);
                                        obj_op.DisableControls(IG070309);
                                        obj_op.DisableControls(IG070409);
                                        obj_op.DisableControls(IG070509);
                                        obj_op.DisableControls(IG070609);
                                        obj_op.DisableControls(IG070709);
                                        obj_op.DisableControls(IG070809);
                                        obj_op.DisableControls(IG070909);
                                        obj_op.DisableControls(IG0701009);
                                        obj_op.DisableControls(IG0701109);
                                        obj_op.DisableControls(IG0701209);
                                        obj_op.DisableControls(IG0701309);

                                        obj_op.DisableControls(IG0809);
                                        obj_op.DisableControls(IG0909);
                                        obj_op.DisableControls(IG01009);

                                        obj_op.DisableControls(IG01109);
                                        obj_op.DisableControls(IG01209);
                                        obj_op.DisableControls(IG01309);
                                        obj_op.DisableControls(IG01409);
                                        obj_op.DisableControls(IG01509);

                                        obj_op.DisableControls(IG160109);
                                        obj_op.DisableControls(IG160209);
                                        obj_op.DisableControls(IG160309);
                                        obj_op.DisableControls(IG160409);
                                        obj_op.DisableControls(IG160509);
                                        obj_op.DisableControls(IG160609);
                                        obj_op.DisableControls(IG160709);
                                        obj_op.DisableControls(IG160809);
                                        obj_op.DisableControls(IG160909);
                                        obj_op.DisableControls(IG1601009);
                                        obj_op.DisableControls(IG1601109);
                                        obj_op.DisableControls(IG1601209);






                                        obj_op.DisableControls(IG0410);
                                        obj_op.DisableControls(IG0510);
                                        obj_op.DisableControls(IG060110);
                                        obj_op.DisableControls(IG060210);
                                        obj_op.DisableControls(IG060310);
                                        obj_op.DisableControls(IG060410);
                                        obj_op.DisableControls(IG060510);

                                        obj_op.DisableControls(IG070110);
                                        obj_op.DisableControls(IG070210);
                                        obj_op.DisableControls(IG070310);
                                        obj_op.DisableControls(IG070410);
                                        obj_op.DisableControls(IG070510);
                                        obj_op.DisableControls(IG070610);
                                        obj_op.DisableControls(IG070710);
                                        obj_op.DisableControls(IG070810);
                                        obj_op.DisableControls(IG070910);
                                        obj_op.DisableControls(IG0701010);
                                        obj_op.DisableControls(IG0701110);
                                        obj_op.DisableControls(IG0701210);
                                        obj_op.DisableControls(IG0701310);

                                        obj_op.DisableControls(IG0810);
                                        obj_op.DisableControls(IG0910);
                                        obj_op.DisableControls(IG01010);

                                        obj_op.DisableControls(IG01110);
                                        obj_op.DisableControls(IG01210);
                                        obj_op.DisableControls(IG01310);
                                        obj_op.DisableControls(IG01410);
                                        obj_op.DisableControls(IG01510);

                                        obj_op.DisableControls(IG160110);
                                        obj_op.DisableControls(IG160210);
                                        obj_op.DisableControls(IG160310);
                                        obj_op.DisableControls(IG160410);
                                        obj_op.DisableControls(IG160510);
                                        obj_op.DisableControls(IG160610);
                                        obj_op.DisableControls(IG160710);
                                        obj_op.DisableControls(IG160810);
                                        obj_op.DisableControls(IG160910);
                                        obj_op.DisableControls(IG1601010);
                                        obj_op.DisableControls(IG1601110);
                                        obj_op.DisableControls(IG1601210);

                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0409"].ToString() == null)
                            {
                                IG0409.Text = "";
                            }
                            else
                            {
                                IG0409.Text = ds.Tables[0].Rows[0]["IG0409"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0509"].ToString() == null)
                            {
                                IG0509.Text = "";
                            }
                            else
                            {
                                IG0509.Text = ds.Tables[0].Rows[0]["IG0509"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060109"].ToString() == null)
                            {
                                IG060109.Text = "";
                            }
                            else
                            {
                                IG060109.Text = ds.Tables[0].Rows[0]["IG060109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060209"].ToString() == null)
                            {
                                IG060209.Text = "";
                            }
                            else
                            {
                                IG060209.Text = ds.Tables[0].Rows[0]["IG060209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060309"].ToString() == null)
                            {
                                IG060309.Text = "";
                            }
                            else
                            {
                                IG060309.Text = ds.Tables[0].Rows[0]["IG060309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060409"].ToString() == null)
                            {
                                IG060409.Text = "";
                            }
                            else
                            {
                                IG060409.Text = ds.Tables[0].Rows[0]["IG060409"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060509"].ToString() == null)
                            {
                                IG060509.Text = "";
                            }
                            else
                            {
                                IG060509.Text = ds.Tables[0].Rows[0]["IG060509"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070109"].ToString() == null)
                            {
                                IG070109.Text = "";
                            }
                            else
                            {
                                IG070109.Text = ds.Tables[0].Rows[0]["IG070109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070209"].ToString() == null)
                            {
                                IG070209.Text = "";
                            }
                            else
                            {
                                IG070209.Text = ds.Tables[0].Rows[0]["IG070209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070309"].ToString() == null)
                            {
                                IG070309.Text = "";
                            }
                            else
                            {
                                IG070309.Text = ds.Tables[0].Rows[0]["IG070309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070409"].ToString() == null)
                            {
                                IG070409.Text = "";
                            }
                            else
                            {
                                IG070409.Text = ds.Tables[0].Rows[0]["IG070409"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070509"].ToString() == null)
                            {
                                IG070509.Text = "";
                            }
                            else
                            {
                                IG070509.Text = ds.Tables[0].Rows[0]["IG070509"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070609"].ToString() == null)
                            {
                                IG070609.Text = "";
                            }
                            else
                            {
                                IG070609.Text = ds.Tables[0].Rows[0]["IG070609"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070709"].ToString() == null)
                            {
                                IG070709.Text = "";
                            }
                            else
                            {
                                IG070709.Text = ds.Tables[0].Rows[0]["IG070709"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070809"].ToString() == null)
                            {
                                IG070809.Text = "";
                            }
                            else
                            {
                                IG070809.Text = ds.Tables[0].Rows[0]["IG070809"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070909"].ToString() == null)
                            {
                                IG070909.Text = "";
                            }
                            else
                            {
                                IG070909.Text = ds.Tables[0].Rows[0]["IG070909"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701009"].ToString() == null)
                            {
                                IG0701009.Text = "";
                            }
                            else
                            {
                                IG0701009.Text = ds.Tables[0].Rows[0]["IG0701009"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701109"].ToString() == null)
                            {
                                IG0701109.Text = "";
                            }
                            else
                            {
                                IG0701109.Text = ds.Tables[0].Rows[0]["IG0701109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701209"].ToString() == null)
                            {
                                IG0701209.Text = "";
                            }
                            else
                            {
                                IG0701209.Text = ds.Tables[0].Rows[0]["IG0701209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701309"].ToString() == null)
                            {
                                IG0701309.Text = "";
                            }
                            else
                            {
                                IG0701309.Text = ds.Tables[0].Rows[0]["IG0701309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0809"].ToString() == null)
                            {
                                IG0809.Text = "";
                            }
                            else
                            {
                                IG0809.Text = ds.Tables[0].Rows[0]["IG0809"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0909"].ToString() == null)
                            {
                                IG0909.Text = "";
                            }
                            else
                            {
                                IG0909.Text = ds.Tables[0].Rows[0]["IG0909"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember9.Text == "1")
                                    {
                                        if (IG0909.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01009);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01009);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01009"].ToString() == null)
                            {
                                IG01009.Text = "";
                            }
                            else
                            {
                                IG01009.Text = ds.Tables[0].Rows[0]["IG01009"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember9.Text == "1")
                                    {
                                        if (IG0909.Text == "1")
                                        {
                                            if (IG01009.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01109);
                                                obj_op.DisableControls(IG01209);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01109);
                                                obj_op.EnableControls(IG01209);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["chkMember10"].ToString() == null)
                            {
                                chkMember10.Text = "";
                            }
                            else
                            {
                                chkMember10.Text = ds.Tables[0].Rows[0]["chkMember10"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember10.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0410);
                                        obj_op.EnableControls(IG0510);
                                        obj_op.EnableControls(IG060110);
                                        obj_op.EnableControls(IG060210);
                                        obj_op.EnableControls(IG060310);
                                        obj_op.EnableControls(IG060410);
                                        obj_op.EnableControls(IG060510);

                                        obj_op.EnableControls(IG070110);
                                        obj_op.EnableControls(IG070210);
                                        obj_op.EnableControls(IG070310);
                                        obj_op.EnableControls(IG070410);
                                        obj_op.EnableControls(IG070510);
                                        obj_op.EnableControls(IG070610);
                                        obj_op.EnableControls(IG070710);
                                        obj_op.EnableControls(IG070810);
                                        obj_op.EnableControls(IG070910);
                                        obj_op.EnableControls(IG0701010);
                                        obj_op.EnableControls(IG0701110);
                                        obj_op.EnableControls(IG0701210);
                                        obj_op.EnableControls(IG0701310);

                                        obj_op.EnableControls(IG0810);
                                        obj_op.EnableControls(IG0910);
                                        obj_op.EnableControls(IG01010);

                                        obj_op.EnableControls(IG01110);
                                        obj_op.EnableControls(IG01210);
                                        obj_op.EnableControls(IG01310);
                                        obj_op.EnableControls(IG01410);
                                        obj_op.EnableControls(IG01510);

                                        obj_op.EnableControls(IG160110);
                                        obj_op.EnableControls(IG160210);
                                        obj_op.EnableControls(IG160310);
                                        obj_op.EnableControls(IG160410);
                                        obj_op.EnableControls(IG160510);
                                        obj_op.EnableControls(IG160610);
                                        obj_op.EnableControls(IG160710);
                                        obj_op.EnableControls(IG160810);
                                        obj_op.EnableControls(IG160910);
                                        obj_op.EnableControls(IG1601010);
                                        obj_op.EnableControls(IG1601110);
                                        obj_op.EnableControls(IG1601210);

                                    }
                                    else
                                    {

                                        obj_op.DisableControls(IG0410);
                                        obj_op.DisableControls(IG0510);
                                        obj_op.DisableControls(IG060110);
                                        obj_op.DisableControls(IG060210);
                                        obj_op.DisableControls(IG060310);
                                        obj_op.DisableControls(IG060410);
                                        obj_op.DisableControls(IG060510);

                                        obj_op.DisableControls(IG070110);
                                        obj_op.DisableControls(IG070210);
                                        obj_op.DisableControls(IG070310);
                                        obj_op.DisableControls(IG070410);
                                        obj_op.DisableControls(IG070510);
                                        obj_op.DisableControls(IG070610);
                                        obj_op.DisableControls(IG070710);
                                        obj_op.DisableControls(IG070810);
                                        obj_op.DisableControls(IG070910);
                                        obj_op.DisableControls(IG0701010);
                                        obj_op.DisableControls(IG0701110);
                                        obj_op.DisableControls(IG0701210);
                                        obj_op.DisableControls(IG0701310);

                                        obj_op.DisableControls(IG0810);
                                        obj_op.DisableControls(IG0910);
                                        obj_op.DisableControls(IG01010);

                                        obj_op.DisableControls(IG01110);
                                        obj_op.DisableControls(IG01210);
                                        obj_op.DisableControls(IG01310);
                                        obj_op.DisableControls(IG01410);
                                        obj_op.DisableControls(IG01510);

                                        obj_op.DisableControls(IG160110);
                                        obj_op.DisableControls(IG160210);
                                        obj_op.DisableControls(IG160310);
                                        obj_op.DisableControls(IG160410);
                                        obj_op.DisableControls(IG160510);
                                        obj_op.DisableControls(IG160610);
                                        obj_op.DisableControls(IG160710);
                                        obj_op.DisableControls(IG160810);
                                        obj_op.DisableControls(IG160910);
                                        obj_op.DisableControls(IG1601010);
                                        obj_op.DisableControls(IG1601110);
                                        obj_op.DisableControls(IG1601210);

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0410"].ToString() == null)
                            {
                                IG0410.Text = "";
                            }
                            else
                            {
                                IG0410.Text = ds.Tables[0].Rows[0]["IG0410"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0510"].ToString() == null)
                            {
                                IG0510.Text = "";
                            }
                            else
                            {
                                IG0510.Text = ds.Tables[0].Rows[0]["IG0510"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060110"].ToString() == null)
                            {
                                IG060110.Text = "";
                            }
                            else
                            {
                                IG060110.Text = ds.Tables[0].Rows[0]["IG060110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060210"].ToString() == null)
                            {
                                IG060210.Text = "";
                            }
                            else
                            {
                                IG060210.Text = ds.Tables[0].Rows[0]["IG060210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060310"].ToString() == null)
                            {
                                IG060310.Text = "";
                            }
                            else
                            {
                                IG060310.Text = ds.Tables[0].Rows[0]["IG060310"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060410"].ToString() == null)
                            {
                                IG060410.Text = "";
                            }
                            else
                            {
                                IG060410.Text = ds.Tables[0].Rows[0]["IG060410"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060510"].ToString() == null)
                            {
                                IG060510.Text = "";
                            }
                            else
                            {
                                IG060510.Text = ds.Tables[0].Rows[0]["IG060510"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070110"].ToString() == null)
                            {
                                IG070110.Text = "";
                            }
                            else
                            {
                                IG070110.Text = ds.Tables[0].Rows[0]["IG070110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070210"].ToString() == null)
                            {
                                IG070210.Text = "";
                            }
                            else
                            {
                                IG070210.Text = ds.Tables[0].Rows[0]["IG070210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070310"].ToString() == null)
                            {
                                IG070310.Text = "";
                            }
                            else
                            {
                                IG070310.Text = ds.Tables[0].Rows[0]["IG070310"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070410"].ToString() == null)
                            {
                                IG070410.Text = "";
                            }
                            else
                            {
                                IG070410.Text = ds.Tables[0].Rows[0]["IG070410"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070510"].ToString() == null)
                            {
                                IG070510.Text = "";
                            }
                            else
                            {
                                IG070510.Text = ds.Tables[0].Rows[0]["IG070510"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070610"].ToString() == null)
                            {
                                IG070610.Text = "";
                            }
                            else
                            {
                                IG070610.Text = ds.Tables[0].Rows[0]["IG070610"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070710"].ToString() == null)
                            {
                                IG070710.Text = "";
                            }
                            else
                            {
                                IG070710.Text = ds.Tables[0].Rows[0]["IG070710"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070810"].ToString() == null)
                            {
                                IG070810.Text = "";
                            }
                            else
                            {
                                IG070810.Text = ds.Tables[0].Rows[0]["IG070810"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070910"].ToString() == null)
                            {
                                IG070910.Text = "";
                            }
                            else
                            {
                                IG070910.Text = ds.Tables[0].Rows[0]["IG070910"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701010"].ToString() == null)
                            {
                                IG0701010.Text = "";
                            }
                            else
                            {
                                IG0701010.Text = ds.Tables[0].Rows[0]["IG0701010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701110"].ToString() == null)
                            {
                                IG0701110.Text = "";
                            }
                            else
                            {
                                IG0701110.Text = ds.Tables[0].Rows[0]["IG0701110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701210"].ToString() == null)
                            {
                                IG0701210.Text = "";
                            }
                            else
                            {
                                IG0701210.Text = ds.Tables[0].Rows[0]["IG0701210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701310"].ToString() == null)
                            {
                                IG0701310.Text = "";
                            }
                            else
                            {
                                IG0701310.Text = ds.Tables[0].Rows[0]["IG0701310"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0810"].ToString() == null)
                            {
                                IG0810.Text = "";
                            }
                            else
                            {
                                IG0810.Text = ds.Tables[0].Rows[0]["IG0810"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0910"].ToString() == null)
                            {
                                IG0910.Text = "";
                            }
                            else
                            {
                                IG0910.Text = ds.Tables[0].Rows[0]["IG0910"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember10.Text == "1")
                                    {
                                        if (IG0910.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01010);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01010);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01010"].ToString() == null)
                            {
                                IG01010.Text = "";
                            }
                            else
                            {
                                IG01010.Text = ds.Tables[0].Rows[0]["IG01010"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember10.Text == "1")
                                    {
                                        if (IG0910.Text == "1")
                                        {
                                            if (IG01010.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01110);
                                                obj_op.DisableControls(IG01210);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01110);
                                                obj_op.EnableControls(IG01210);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01106"].ToString() == null)
                            {
                                IG01106.Text = "";
                            }
                            else
                            {
                                IG01106.Text = ds.Tables[0].Rows[0]["IG01106"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember6.Text == "1")
                                    {
                                        if (IG01006.Text != "1")
                                        {
                                            if (IG01106.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01206);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01206);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01206"].ToString() == null)
                            {
                                IG01206.Text = "";
                            }
                            else
                            {
                                IG01206.Text = ds.Tables[0].Rows[0]["IG01206"].ToString();
                            }



                            if (ds.Tables[0].Rows[0]["IG01306"].ToString() == null)
                            {
                                IG01306.Text = "";
                            }
                            else
                            {
                                IG01306.Text = ds.Tables[0].Rows[0]["IG01306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01406"].ToString() == null)
                            {
                                IG01406.Text = "";
                            }
                            else
                            {
                                IG01406.Text = ds.Tables[0].Rows[0]["IG01406"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01506"].ToString() == null)
                            {
                                IG01506.Text = "";
                            }
                            else
                            {
                                IG01506.Text = ds.Tables[0].Rows[0]["IG01506"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01107"].ToString() == null)
                            {
                                IG01107.Text = "";
                            }
                            else
                            {
                                IG01107.Text = ds.Tables[0].Rows[0]["IG01107"].ToString();


                                //javed1

                                if (IB05.Text == "1")
                                {
                                    if (chkMember7.Text == "1")
                                    {
                                        if (IG01007.Text != "1")
                                        {
                                            if (IG01107.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01207);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01207);
                                            }
                                        }
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01207"].ToString() == null)
                            {
                                IG01207.Text = "";
                            }
                            else
                            {
                                IG01207.Text = ds.Tables[0].Rows[0]["IG01207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01307"].ToString() == null)
                            {
                                IG01307.Text = "";
                            }
                            else
                            {
                                IG01307.Text = ds.Tables[0].Rows[0]["IG01307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01407"].ToString() == null)
                            {
                                IG01407.Text = "";
                            }
                            else
                            {
                                IG01407.Text = ds.Tables[0].Rows[0]["IG01407"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01507"].ToString() == null)
                            {
                                IG01507.Text = "";
                            }
                            else
                            {
                                IG01507.Text = ds.Tables[0].Rows[0]["IG01507"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01108"].ToString() == null)
                            {
                                IG01108.Text = "";
                            }
                            else
                            {
                                IG01108.Text = ds.Tables[0].Rows[0]["IG01108"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember8.Text == "1")
                                    {
                                        if (IG01008.Text != "1")
                                        {
                                            if (IG01108.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01208);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01208);
                                            }
                                        }
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01208"].ToString() == null)
                            {
                                IG01208.Text = "";
                            }
                            else
                            {
                                IG01208.Text = ds.Tables[0].Rows[0]["IG01208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01308"].ToString() == null)
                            {
                                IG01308.Text = "";
                            }
                            else
                            {
                                IG01308.Text = ds.Tables[0].Rows[0]["IG01308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01408"].ToString() == null)
                            {
                                IG01408.Text = "";
                            }
                            else
                            {
                                IG01408.Text = ds.Tables[0].Rows[0]["IG01408"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01508"].ToString() == null)
                            {
                                IG01508.Text = "";
                            }
                            else
                            {
                                IG01508.Text = ds.Tables[0].Rows[0]["IG01508"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01109"].ToString() == null)
                            {
                                IG01109.Text = "";
                            }
                            else
                            {
                                IG01109.Text = ds.Tables[0].Rows[0]["IG01109"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember9.Text == "1")
                                    {
                                        if (IG01009.Text != "1")
                                        {
                                            if (IG01109.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01209);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01209);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01209"].ToString() == null)
                            {
                                IG01209.Text = "";
                            }
                            else
                            {
                                IG01209.Text = ds.Tables[0].Rows[0]["IG01209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01309"].ToString() == null)
                            {
                                IG01309.Text = "";
                            }
                            else
                            {
                                IG01309.Text = ds.Tables[0].Rows[0]["IG01309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01409"].ToString() == null)
                            {
                                IG01409.Text = "";
                            }
                            else
                            {
                                IG01409.Text = ds.Tables[0].Rows[0]["IG01409"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01509"].ToString() == null)
                            {
                                IG01509.Text = "";
                            }
                            else
                            {
                                IG01509.Text = ds.Tables[0].Rows[0]["IG01509"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01110"].ToString() == null)
                            {
                                IG01110.Text = "";
                            }
                            else
                            {
                                IG01110.Text = ds.Tables[0].Rows[0]["IG01110"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember10.Text == "1")
                                    {
                                        if (IG01010.Text != "1")
                                        {
                                            if (IG01110.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01210);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01210);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01210"].ToString() == null)
                            {
                                IG01210.Text = "";
                            }
                            else
                            {
                                IG01210.Text = ds.Tables[0].Rows[0]["IG01210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01310"].ToString() == null)
                            {
                                IG01310.Text = "";
                            }
                            else
                            {
                                IG01310.Text = ds.Tables[0].Rows[0]["IG01310"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01410"].ToString() == null)
                            {
                                IG01410.Text = "";
                            }
                            else
                            {
                                IG01410.Text = ds.Tables[0].Rows[0]["IG01410"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01510"].ToString() == null)
                            {
                                IG01510.Text = "";
                            }
                            else
                            {
                                IG01510.Text = ds.Tables[0].Rows[0]["IG01510"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160106"].ToString() == null)
                            {
                                IG160106.Text = "";
                            }
                            else
                            {
                                IG160106.Text = ds.Tables[0].Rows[0]["IG160106"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160206"].ToString() == null)
                            {
                                IG160206.Text = "";
                            }
                            else
                            {
                                IG160206.Text = ds.Tables[0].Rows[0]["IG160206"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160306"].ToString() == null)
                            {
                                IG160306.Text = "";
                            }
                            else
                            {
                                IG160306.Text = ds.Tables[0].Rows[0]["IG160306"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160406"].ToString() == null)
                            {
                                IG160406.Text = "";
                            }
                            else
                            {
                                IG160406.Text = ds.Tables[0].Rows[0]["IG160406"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160506"].ToString() == null)
                            {
                                IG160506.Text = "";
                            }
                            else
                            {
                                IG160506.Text = ds.Tables[0].Rows[0]["IG160506"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160606"].ToString() == null)
                            {
                                IG160606.Text = "";
                            }
                            else
                            {
                                IG160606.Text = ds.Tables[0].Rows[0]["IG160606"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160706"].ToString() == null)
                            {
                                IG160706.Text = "";
                            }
                            else
                            {
                                IG160706.Text = ds.Tables[0].Rows[0]["IG160706"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160806"].ToString() == null)
                            {
                                IG160806.Text = "";
                            }
                            else
                            {
                                IG160806.Text = ds.Tables[0].Rows[0]["IG160806"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160906"].ToString() == null)
                            {
                                IG160906.Text = "";
                            }
                            else
                            {
                                IG160906.Text = ds.Tables[0].Rows[0]["IG160906"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601006"].ToString() == null)
                            {
                                IG1601006.Text = "";
                            }
                            else
                            {
                                IG1601006.Text = ds.Tables[0].Rows[0]["IG1601006"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601106"].ToString() == null)
                            {
                                IG1601106.Text = "";
                            }
                            else
                            {
                                IG1601106.Text = ds.Tables[0].Rows[0]["IG1601106"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601206"].ToString() == null)
                            {
                                IG1601206.Text = "";
                            }
                            else
                            {
                                IG1601206.Text = ds.Tables[0].Rows[0]["IG1601206"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160107"].ToString() == null)
                            {
                                IG160107.Text = "";
                            }
                            else
                            {
                                IG160107.Text = ds.Tables[0].Rows[0]["IG160107"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160207"].ToString() == null)
                            {
                                IG160207.Text = "";
                            }
                            else
                            {
                                IG160207.Text = ds.Tables[0].Rows[0]["IG160207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160307"].ToString() == null)
                            {
                                IG160307.Text = "";
                            }
                            else
                            {
                                IG160307.Text = ds.Tables[0].Rows[0]["IG160307"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160407"].ToString() == null)
                            {
                                IG160407.Text = "";
                            }
                            else
                            {
                                IG160407.Text = ds.Tables[0].Rows[0]["IG160407"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160507"].ToString() == null)
                            {
                                IG160507.Text = "";
                            }
                            else
                            {
                                IG160507.Text = ds.Tables[0].Rows[0]["IG160507"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160607"].ToString() == null)
                            {
                                IG160607.Text = "";
                            }
                            else
                            {
                                IG160607.Text = ds.Tables[0].Rows[0]["IG160607"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160707"].ToString() == null)
                            {
                                IG160707.Text = "";
                            }
                            else
                            {
                                IG160707.Text = ds.Tables[0].Rows[0]["IG160707"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160807"].ToString() == null)
                            {
                                IG160807.Text = "";
                            }
                            else
                            {
                                IG160807.Text = ds.Tables[0].Rows[0]["IG160807"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160907"].ToString() == null)
                            {
                                IG160907.Text = "";
                            }
                            else
                            {
                                IG160907.Text = ds.Tables[0].Rows[0]["IG160907"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601007"].ToString() == null)
                            {
                                IG1601007.Text = "";
                            }
                            else
                            {
                                IG1601007.Text = ds.Tables[0].Rows[0]["IG1601007"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601107"].ToString() == null)
                            {
                                IG1601107.Text = "";
                            }
                            else
                            {
                                IG1601107.Text = ds.Tables[0].Rows[0]["IG1601107"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601207"].ToString() == null)
                            {
                                IG1601207.Text = "";
                            }
                            else
                            {
                                IG1601207.Text = ds.Tables[0].Rows[0]["IG1601207"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160108"].ToString() == null)
                            {
                                IG160108.Text = "";
                            }
                            else
                            {
                                IG160108.Text = ds.Tables[0].Rows[0]["IG160108"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160208"].ToString() == null)
                            {
                                IG160208.Text = "";
                            }
                            else
                            {
                                IG160208.Text = ds.Tables[0].Rows[0]["IG160208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160308"].ToString() == null)
                            {
                                IG160308.Text = "";
                            }
                            else
                            {
                                IG160308.Text = ds.Tables[0].Rows[0]["IG160308"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160408"].ToString() == null)
                            {
                                IG160408.Text = "";
                            }
                            else
                            {
                                IG160408.Text = ds.Tables[0].Rows[0]["IG160408"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160508"].ToString() == null)
                            {
                                IG160508.Text = "";
                            }
                            else
                            {
                                IG160508.Text = ds.Tables[0].Rows[0]["IG160508"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160608"].ToString() == null)
                            {
                                IG160608.Text = "";
                            }
                            else
                            {
                                IG160608.Text = ds.Tables[0].Rows[0]["IG160608"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160708"].ToString() == null)
                            {
                                IG160708.Text = "";
                            }
                            else
                            {
                                IG160708.Text = ds.Tables[0].Rows[0]["IG160708"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160808"].ToString() == null)
                            {
                                IG160808.Text = "";
                            }
                            else
                            {
                                IG160808.Text = ds.Tables[0].Rows[0]["IG160808"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160908"].ToString() == null)
                            {
                                IG160908.Text = "";
                            }
                            else
                            {
                                IG160908.Text = ds.Tables[0].Rows[0]["IG160908"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601008"].ToString() == null)
                            {
                                IG1601008.Text = "";
                            }
                            else
                            {
                                IG1601008.Text = ds.Tables[0].Rows[0]["IG1601008"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601108"].ToString() == null)
                            {
                                IG1601108.Text = "";
                            }
                            else
                            {
                                IG1601108.Text = ds.Tables[0].Rows[0]["IG1601108"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601208"].ToString() == null)
                            {
                                IG1601208.Text = "";
                            }
                            else
                            {
                                IG1601208.Text = ds.Tables[0].Rows[0]["IG1601208"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160109"].ToString() == null)
                            {
                                IG160109.Text = "";
                            }
                            else
                            {
                                IG160109.Text = ds.Tables[0].Rows[0]["IG160109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160209"].ToString() == null)
                            {
                                IG160209.Text = "";
                            }
                            else
                            {
                                IG160209.Text = ds.Tables[0].Rows[0]["IG160209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160309"].ToString() == null)
                            {
                                IG160309.Text = "";
                            }
                            else
                            {
                                IG160309.Text = ds.Tables[0].Rows[0]["IG160309"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160409"].ToString() == null)
                            {
                                IG160409.Text = "";
                            }
                            else
                            {
                                IG160409.Text = ds.Tables[0].Rows[0]["IG160409"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160509"].ToString() == null)
                            {
                                IG160509.Text = "";
                            }
                            else
                            {
                                IG160509.Text = ds.Tables[0].Rows[0]["IG160509"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160609"].ToString() == null)
                            {
                                IG160609.Text = "";
                            }
                            else
                            {
                                IG160609.Text = ds.Tables[0].Rows[0]["IG160609"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160709"].ToString() == null)
                            {
                                IG160709.Text = "";
                            }
                            else
                            {
                                IG160709.Text = ds.Tables[0].Rows[0]["IG160709"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160809"].ToString() == null)
                            {
                                IG160809.Text = "";
                            }
                            else
                            {
                                IG160809.Text = ds.Tables[0].Rows[0]["IG160809"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160909"].ToString() == null)
                            {
                                IG160909.Text = "";
                            }
                            else
                            {
                                IG160909.Text = ds.Tables[0].Rows[0]["IG160909"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601009"].ToString() == null)
                            {
                                IG1601009.Text = "";
                            }
                            else
                            {
                                IG1601009.Text = ds.Tables[0].Rows[0]["IG1601009"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601109"].ToString() == null)
                            {
                                IG1601109.Text = "";
                            }
                            else
                            {
                                IG1601109.Text = ds.Tables[0].Rows[0]["IG1601109"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601209"].ToString() == null)
                            {
                                IG1601209.Text = "";
                            }
                            else
                            {
                                IG1601209.Text = ds.Tables[0].Rows[0]["IG1601209"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160110"].ToString() == null)
                            {
                                IG160110.Text = "";
                            }
                            else
                            {
                                IG160110.Text = ds.Tables[0].Rows[0]["IG160110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160210"].ToString() == null)
                            {
                                IG160210.Text = "";
                            }
                            else
                            {
                                IG160210.Text = ds.Tables[0].Rows[0]["IG160210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160310"].ToString() == null)
                            {
                                IG160310.Text = "";
                            }
                            else
                            {
                                IG160310.Text = ds.Tables[0].Rows[0]["IG160310"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160410"].ToString() == null)
                            {
                                IG160410.Text = "";
                            }
                            else
                            {
                                IG160410.Text = ds.Tables[0].Rows[0]["IG160410"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160510"].ToString() == null)
                            {
                                IG160510.Text = "";
                            }
                            else
                            {
                                IG160510.Text = ds.Tables[0].Rows[0]["IG160510"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160610"].ToString() == null)
                            {
                                IG160610.Text = "";
                            }
                            else
                            {
                                IG160610.Text = ds.Tables[0].Rows[0]["IG160610"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160710"].ToString() == null)
                            {
                                IG160710.Text = "";
                            }
                            else
                            {
                                IG160710.Text = ds.Tables[0].Rows[0]["IG160710"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160810"].ToString() == null)
                            {
                                IG160810.Text = "";
                            }
                            else
                            {
                                IG160810.Text = ds.Tables[0].Rows[0]["IG160810"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160910"].ToString() == null)
                            {
                                IG160910.Text = "";
                            }
                            else
                            {
                                IG160910.Text = ds.Tables[0].Rows[0]["IG160910"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601010"].ToString() == null)
                            {
                                IG1601010.Text = "";
                            }
                            else
                            {
                                IG1601010.Text = ds.Tables[0].Rows[0]["IG1601010"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601110"].ToString() == null)
                            {
                                IG1601110.Text = "";
                            }
                            else
                            {
                                IG1601110.Text = ds.Tables[0].Rows[0]["IG1601110"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601210"].ToString() == null)
                            {
                                IG1601210.Text = "";
                            }
                            else
                            {
                                IG1601210.Text = ds.Tables[0].Rows[0]["IG1601210"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember11"].ToString() == null)
                            {
                                chkMember11.Text = "";
                            }
                            else
                            {
                                chkMember11.Text = ds.Tables[0].Rows[0]["chkMember11"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember11.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0411);
                                        obj_op.EnableControls(IG0511);
                                        obj_op.EnableControls(IG060111);
                                        obj_op.EnableControls(IG060211);
                                        obj_op.EnableControls(IG060311);
                                        obj_op.EnableControls(IG060411);
                                        obj_op.EnableControls(IG060511);

                                        obj_op.EnableControls(IG070111);
                                        obj_op.EnableControls(IG070211);
                                        obj_op.EnableControls(IG070311);
                                        obj_op.EnableControls(IG070411);
                                        obj_op.EnableControls(IG070511);
                                        obj_op.EnableControls(IG070611);
                                        obj_op.EnableControls(IG070711);
                                        obj_op.EnableControls(IG070811);
                                        obj_op.EnableControls(IG070911);
                                        obj_op.EnableControls(IG0701011);
                                        obj_op.EnableControls(IG0701111);
                                        obj_op.EnableControls(IG0701211);
                                        obj_op.EnableControls(IG0701311);


                                        obj_op.EnableControls(IG0811);
                                        obj_op.EnableControls(IG0911);
                                        obj_op.EnableControls(IG01011);
                                        obj_op.EnableControls(IG01111);
                                        obj_op.EnableControls(IG01211);
                                        obj_op.EnableControls(IG01311);
                                        obj_op.EnableControls(IG01411);
                                        obj_op.EnableControls(IG01511);

                                        obj_op.EnableControls(IG160111);
                                        obj_op.EnableControls(IG160211);
                                        obj_op.EnableControls(IG160311);
                                        obj_op.EnableControls(IG160411);
                                        obj_op.EnableControls(IG160511);
                                        obj_op.EnableControls(IG160611);
                                        obj_op.EnableControls(IG160711);
                                        obj_op.EnableControls(IG160811);
                                        obj_op.EnableControls(IG160911);
                                        obj_op.EnableControls(IG1601011);
                                        obj_op.EnableControls(IG1601111);
                                        obj_op.EnableControls(IG1601211);


                                    }
                                    else
                                    {

                                        obj_op.DisableControls(IG0411);
                                        obj_op.DisableControls(IG0511);
                                        obj_op.DisableControls(IG060111);
                                        obj_op.DisableControls(IG060211);
                                        obj_op.DisableControls(IG060311);
                                        obj_op.DisableControls(IG060411);
                                        obj_op.DisableControls(IG060511);

                                        obj_op.DisableControls(IG070111);
                                        obj_op.DisableControls(IG070211);
                                        obj_op.DisableControls(IG070311);
                                        obj_op.DisableControls(IG070411);
                                        obj_op.DisableControls(IG070511);
                                        obj_op.DisableControls(IG070611);
                                        obj_op.DisableControls(IG070711);
                                        obj_op.DisableControls(IG070811);
                                        obj_op.DisableControls(IG070911);
                                        obj_op.DisableControls(IG0701011);
                                        obj_op.DisableControls(IG0701111);
                                        obj_op.DisableControls(IG0701211);
                                        obj_op.DisableControls(IG0701311);


                                        obj_op.DisableControls(IG0811);
                                        obj_op.DisableControls(IG0911);
                                        obj_op.DisableControls(IG01011);
                                        obj_op.DisableControls(IG01111);
                                        obj_op.DisableControls(IG01211);
                                        obj_op.DisableControls(IG01311);
                                        obj_op.DisableControls(IG01411);
                                        obj_op.DisableControls(IG01511);

                                        obj_op.DisableControls(IG160111);
                                        obj_op.DisableControls(IG160211);
                                        obj_op.DisableControls(IG160311);
                                        obj_op.DisableControls(IG160411);
                                        obj_op.DisableControls(IG160511);
                                        obj_op.DisableControls(IG160611);
                                        obj_op.DisableControls(IG160711);
                                        obj_op.DisableControls(IG160811);
                                        obj_op.DisableControls(IG160911);
                                        obj_op.DisableControls(IG1601011);
                                        obj_op.DisableControls(IG1601111);
                                        obj_op.DisableControls(IG1601211);





                                        obj_op.DisableControls(IG0412);
                                        obj_op.DisableControls(IG0512);
                                        obj_op.DisableControls(IG060112);
                                        obj_op.DisableControls(IG060212);
                                        obj_op.DisableControls(IG060312);
                                        obj_op.DisableControls(IG060412);
                                        obj_op.DisableControls(IG060512);

                                        obj_op.DisableControls(IG070112);
                                        obj_op.DisableControls(IG070212);
                                        obj_op.DisableControls(IG070312);
                                        obj_op.DisableControls(IG070412);
                                        obj_op.DisableControls(IG070512);
                                        obj_op.DisableControls(IG070612);
                                        obj_op.DisableControls(IG070712);
                                        obj_op.DisableControls(IG070812);
                                        obj_op.DisableControls(IG070912);
                                        obj_op.DisableControls(IG0701012);
                                        obj_op.DisableControls(IG0701112);
                                        obj_op.DisableControls(IG0701212);
                                        obj_op.DisableControls(IG0701312);


                                        obj_op.DisableControls(IG0812);
                                        obj_op.DisableControls(IG0912);
                                        obj_op.DisableControls(IG01012);
                                        obj_op.DisableControls(IG01112);
                                        obj_op.DisableControls(IG01212);
                                        obj_op.DisableControls(IG01312);
                                        obj_op.DisableControls(IG01412);
                                        obj_op.DisableControls(IG01512);

                                        obj_op.DisableControls(IG160112);
                                        obj_op.DisableControls(IG160212);
                                        obj_op.DisableControls(IG160312);
                                        obj_op.DisableControls(IG160412);
                                        obj_op.DisableControls(IG160512);
                                        obj_op.DisableControls(IG160612);
                                        obj_op.DisableControls(IG160712);
                                        obj_op.DisableControls(IG160812);
                                        obj_op.DisableControls(IG160912);
                                        obj_op.DisableControls(IG1601012);
                                        obj_op.DisableControls(IG1601112);
                                        obj_op.DisableControls(IG1601212);




                                        obj_op.DisableControls(IG0413);
                                        obj_op.DisableControls(IG0513);
                                        obj_op.DisableControls(IG060113);
                                        obj_op.DisableControls(IG060213);
                                        obj_op.DisableControls(IG060313);
                                        obj_op.DisableControls(IG060413);
                                        obj_op.DisableControls(IG060513);

                                        obj_op.DisableControls(IG070113);
                                        obj_op.DisableControls(IG070213);
                                        obj_op.DisableControls(IG070313);
                                        obj_op.DisableControls(IG070413);
                                        obj_op.DisableControls(IG070513);
                                        obj_op.DisableControls(IG070613);
                                        obj_op.DisableControls(IG070713);
                                        obj_op.DisableControls(IG070813);
                                        obj_op.DisableControls(IG070913);
                                        obj_op.DisableControls(IG0701013);
                                        obj_op.DisableControls(IG0701113);
                                        obj_op.DisableControls(IG0701213);
                                        obj_op.DisableControls(IG0701313);


                                        obj_op.DisableControls(IG0813);
                                        obj_op.DisableControls(IG0913);
                                        obj_op.DisableControls(IG01013);
                                        obj_op.DisableControls(IG01113);
                                        obj_op.DisableControls(IG01213);
                                        obj_op.DisableControls(IG01313);
                                        obj_op.DisableControls(IG01413);
                                        obj_op.DisableControls(IG01513);

                                        obj_op.DisableControls(IG160113);
                                        obj_op.DisableControls(IG160213);
                                        obj_op.DisableControls(IG160313);
                                        obj_op.DisableControls(IG160413);
                                        obj_op.DisableControls(IG160513);
                                        obj_op.DisableControls(IG160613);
                                        obj_op.DisableControls(IG160713);
                                        obj_op.DisableControls(IG160813);
                                        obj_op.DisableControls(IG160913);
                                        obj_op.DisableControls(IG1601013);
                                        obj_op.DisableControls(IG1601113);
                                        obj_op.DisableControls(IG1601213);



                                        obj_op.DisableControls(IG0414);
                                        obj_op.DisableControls(IG0514);
                                        obj_op.DisableControls(IG060114);
                                        obj_op.DisableControls(IG060214);
                                        obj_op.DisableControls(IG060314);
                                        obj_op.DisableControls(IG060414);
                                        obj_op.DisableControls(IG060514);

                                        obj_op.DisableControls(IG070114);
                                        obj_op.DisableControls(IG070214);
                                        obj_op.DisableControls(IG070314);
                                        obj_op.DisableControls(IG070414);
                                        obj_op.DisableControls(IG070514);
                                        obj_op.DisableControls(IG070614);
                                        obj_op.DisableControls(IG070714);
                                        obj_op.DisableControls(IG070814);
                                        obj_op.DisableControls(IG070914);
                                        obj_op.DisableControls(IG0701014);
                                        obj_op.DisableControls(IG0701114);
                                        obj_op.DisableControls(IG0701214);
                                        obj_op.DisableControls(IG0701314);


                                        obj_op.DisableControls(IG0814);
                                        obj_op.DisableControls(IG0914);
                                        obj_op.DisableControls(IG01014);
                                        obj_op.DisableControls(IG01114);
                                        obj_op.DisableControls(IG01214);
                                        obj_op.DisableControls(IG01314);
                                        obj_op.DisableControls(IG01414);
                                        obj_op.DisableControls(IG01514);

                                        obj_op.DisableControls(IG160114);
                                        obj_op.DisableControls(IG160214);
                                        obj_op.DisableControls(IG160314);
                                        obj_op.DisableControls(IG160414);
                                        obj_op.DisableControls(IG160514);
                                        obj_op.DisableControls(IG160614);
                                        obj_op.DisableControls(IG160714);
                                        obj_op.DisableControls(IG160814);
                                        obj_op.DisableControls(IG160914);
                                        obj_op.DisableControls(IG1601014);
                                        obj_op.DisableControls(IG1601114);
                                        obj_op.DisableControls(IG1601214);




                                        obj_op.DisableControls(IG0415);
                                        obj_op.DisableControls(IG0515);
                                        obj_op.DisableControls(IG060115);
                                        obj_op.DisableControls(IG060215);
                                        obj_op.DisableControls(IG060315);
                                        obj_op.DisableControls(IG060415);
                                        obj_op.DisableControls(IG060515);

                                        obj_op.DisableControls(IG070115);
                                        obj_op.DisableControls(IG070215);
                                        obj_op.DisableControls(IG070315);
                                        obj_op.DisableControls(IG070415);
                                        obj_op.DisableControls(IG070515);
                                        obj_op.DisableControls(IG070615);
                                        obj_op.DisableControls(IG070715);
                                        obj_op.DisableControls(IG070815);
                                        obj_op.DisableControls(IG070915);
                                        obj_op.DisableControls(IG0701015);
                                        obj_op.DisableControls(IG0701115);
                                        obj_op.DisableControls(IG0701215);
                                        obj_op.DisableControls(IG0701315);


                                        obj_op.DisableControls(IG0815);
                                        obj_op.DisableControls(IG0915);
                                        obj_op.DisableControls(IG01015);
                                        obj_op.DisableControls(IG01115);
                                        obj_op.DisableControls(IG01215);
                                        obj_op.DisableControls(IG01315);
                                        obj_op.DisableControls(IG01415);
                                        obj_op.DisableControls(IG01515);

                                        obj_op.DisableControls(IG160115);
                                        obj_op.DisableControls(IG160215);
                                        obj_op.DisableControls(IG160315);
                                        obj_op.DisableControls(IG160415);
                                        obj_op.DisableControls(IG160515);
                                        obj_op.DisableControls(IG160615);
                                        obj_op.DisableControls(IG160715);
                                        obj_op.DisableControls(IG160815);
                                        obj_op.DisableControls(IG160915);
                                        obj_op.DisableControls(IG1601015);
                                        obj_op.DisableControls(IG1601115);
                                        obj_op.DisableControls(IG1601215);
                                    }

                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0411"].ToString() == null)
                            {
                                IG0411.Text = "";
                            }
                            else
                            {
                                IG0411.Text = ds.Tables[0].Rows[0]["IG0411"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0511"].ToString() == null)
                            {
                                IG0511.Text = "";
                            }
                            else
                            {
                                IG0511.Text = ds.Tables[0].Rows[0]["IG0511"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060111"].ToString() == null)
                            {
                                IG060111.Text = "";
                            }
                            else
                            {
                                IG060111.Text = ds.Tables[0].Rows[0]["IG060111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060211"].ToString() == null)
                            {
                                IG060211.Text = "";
                            }
                            else
                            {
                                IG060211.Text = ds.Tables[0].Rows[0]["IG060211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060311"].ToString() == null)
                            {
                                IG060311.Text = "";
                            }
                            else
                            {
                                IG060311.Text = ds.Tables[0].Rows[0]["IG060311"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060411"].ToString() == null)
                            {
                                IG060411.Text = "";
                            }
                            else
                            {
                                IG060411.Text = ds.Tables[0].Rows[0]["IG060411"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060511"].ToString() == null)
                            {
                                IG060511.Text = "";
                            }
                            else
                            {
                                IG060511.Text = ds.Tables[0].Rows[0]["IG060511"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember12"].ToString() == null)
                            {
                                chkMember12.Text = "";
                            }
                            else
                            {
                                chkMember12.Text = ds.Tables[0].Rows[0]["chkMember12"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember12.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0412);
                                        obj_op.EnableControls(IG0512);
                                        obj_op.EnableControls(IG060112);
                                        obj_op.EnableControls(IG060212);
                                        obj_op.EnableControls(IG060312);
                                        obj_op.EnableControls(IG060412);
                                        obj_op.EnableControls(IG060512);

                                        obj_op.EnableControls(IG070112);
                                        obj_op.EnableControls(IG070212);
                                        obj_op.EnableControls(IG070312);
                                        obj_op.EnableControls(IG070412);
                                        obj_op.EnableControls(IG070512);
                                        obj_op.EnableControls(IG070612);
                                        obj_op.EnableControls(IG070712);
                                        obj_op.EnableControls(IG070812);
                                        obj_op.EnableControls(IG070912);
                                        obj_op.EnableControls(IG0701012);
                                        obj_op.EnableControls(IG0701112);
                                        obj_op.EnableControls(IG0701212);
                                        obj_op.EnableControls(IG0701312);


                                        obj_op.EnableControls(IG0812);
                                        obj_op.EnableControls(IG0912);
                                        obj_op.EnableControls(IG01012);
                                        obj_op.EnableControls(IG01112);
                                        obj_op.EnableControls(IG01212);
                                        obj_op.EnableControls(IG01312);
                                        obj_op.EnableControls(IG01412);
                                        obj_op.EnableControls(IG01512);


                                        obj_op.EnableControls(IG160112);
                                        obj_op.EnableControls(IG160212);
                                        obj_op.EnableControls(IG160312);
                                        obj_op.EnableControls(IG160412);
                                        obj_op.EnableControls(IG160512);
                                        obj_op.EnableControls(IG160612);
                                        obj_op.EnableControls(IG160712);
                                        obj_op.EnableControls(IG160812);
                                        obj_op.EnableControls(IG160912);
                                        obj_op.EnableControls(IG1601012);
                                        obj_op.EnableControls(IG1601112);
                                        obj_op.EnableControls(IG1601212);

                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0412);
                                        obj_op.DisableControls(IG0512);
                                        obj_op.DisableControls(IG060112);
                                        obj_op.DisableControls(IG060212);
                                        obj_op.DisableControls(IG060312);
                                        obj_op.DisableControls(IG060412);
                                        obj_op.DisableControls(IG060512);

                                        obj_op.DisableControls(IG070112);
                                        obj_op.DisableControls(IG070212);
                                        obj_op.DisableControls(IG070312);
                                        obj_op.DisableControls(IG070412);
                                        obj_op.DisableControls(IG070512);
                                        obj_op.DisableControls(IG070612);
                                        obj_op.DisableControls(IG070712);
                                        obj_op.DisableControls(IG070812);
                                        obj_op.DisableControls(IG070912);
                                        obj_op.DisableControls(IG0701012);
                                        obj_op.DisableControls(IG0701112);
                                        obj_op.DisableControls(IG0701212);
                                        obj_op.DisableControls(IG0701312);


                                        obj_op.DisableControls(IG0812);
                                        obj_op.DisableControls(IG0912);
                                        obj_op.DisableControls(IG01012);
                                        obj_op.DisableControls(IG01112);
                                        obj_op.DisableControls(IG01212);
                                        obj_op.DisableControls(IG01312);
                                        obj_op.DisableControls(IG01412);
                                        obj_op.DisableControls(IG01512);

                                        obj_op.DisableControls(IG160112);
                                        obj_op.DisableControls(IG160212);
                                        obj_op.DisableControls(IG160312);
                                        obj_op.DisableControls(IG160412);
                                        obj_op.DisableControls(IG160512);
                                        obj_op.DisableControls(IG160612);
                                        obj_op.DisableControls(IG160712);
                                        obj_op.DisableControls(IG160812);
                                        obj_op.DisableControls(IG160912);
                                        obj_op.DisableControls(IG1601012);
                                        obj_op.DisableControls(IG1601112);
                                        obj_op.DisableControls(IG1601212);




                                        obj_op.DisableControls(IG0413);
                                        obj_op.DisableControls(IG0513);
                                        obj_op.DisableControls(IG060113);
                                        obj_op.DisableControls(IG060213);
                                        obj_op.DisableControls(IG060313);
                                        obj_op.DisableControls(IG060413);
                                        obj_op.DisableControls(IG060513);

                                        obj_op.DisableControls(IG070113);
                                        obj_op.DisableControls(IG070213);
                                        obj_op.DisableControls(IG070313);
                                        obj_op.DisableControls(IG070413);
                                        obj_op.DisableControls(IG070513);
                                        obj_op.DisableControls(IG070613);
                                        obj_op.DisableControls(IG070713);
                                        obj_op.DisableControls(IG070813);
                                        obj_op.DisableControls(IG070913);
                                        obj_op.DisableControls(IG0701013);
                                        obj_op.DisableControls(IG0701113);
                                        obj_op.DisableControls(IG0701213);
                                        obj_op.DisableControls(IG0701313);


                                        obj_op.DisableControls(IG0813);
                                        obj_op.DisableControls(IG0913);
                                        obj_op.DisableControls(IG01013);
                                        obj_op.DisableControls(IG01113);
                                        obj_op.DisableControls(IG01213);
                                        obj_op.DisableControls(IG01313);
                                        obj_op.DisableControls(IG01413);
                                        obj_op.DisableControls(IG01513);

                                        obj_op.DisableControls(IG160113);
                                        obj_op.DisableControls(IG160213);
                                        obj_op.DisableControls(IG160313);
                                        obj_op.DisableControls(IG160413);
                                        obj_op.DisableControls(IG160513);
                                        obj_op.DisableControls(IG160613);
                                        obj_op.DisableControls(IG160713);
                                        obj_op.DisableControls(IG160813);
                                        obj_op.DisableControls(IG160913);
                                        obj_op.DisableControls(IG1601013);
                                        obj_op.DisableControls(IG1601113);
                                        obj_op.DisableControls(IG1601213);



                                        obj_op.DisableControls(IG0414);
                                        obj_op.DisableControls(IG0514);
                                        obj_op.DisableControls(IG060114);
                                        obj_op.DisableControls(IG060214);
                                        obj_op.DisableControls(IG060314);
                                        obj_op.DisableControls(IG060414);
                                        obj_op.DisableControls(IG060514);

                                        obj_op.DisableControls(IG070114);
                                        obj_op.DisableControls(IG070214);
                                        obj_op.DisableControls(IG070314);
                                        obj_op.DisableControls(IG070414);
                                        obj_op.DisableControls(IG070514);
                                        obj_op.DisableControls(IG070614);
                                        obj_op.DisableControls(IG070714);
                                        obj_op.DisableControls(IG070814);
                                        obj_op.DisableControls(IG070914);
                                        obj_op.DisableControls(IG0701014);
                                        obj_op.DisableControls(IG0701114);
                                        obj_op.DisableControls(IG0701214);
                                        obj_op.DisableControls(IG0701314);


                                        obj_op.DisableControls(IG0814);
                                        obj_op.DisableControls(IG0914);
                                        obj_op.DisableControls(IG01014);
                                        obj_op.DisableControls(IG01114);
                                        obj_op.DisableControls(IG01214);
                                        obj_op.DisableControls(IG01314);
                                        obj_op.DisableControls(IG01414);
                                        obj_op.DisableControls(IG01514);

                                        obj_op.DisableControls(IG160114);
                                        obj_op.DisableControls(IG160214);
                                        obj_op.DisableControls(IG160314);
                                        obj_op.DisableControls(IG160414);
                                        obj_op.DisableControls(IG160514);
                                        obj_op.DisableControls(IG160614);
                                        obj_op.DisableControls(IG160714);
                                        obj_op.DisableControls(IG160814);
                                        obj_op.DisableControls(IG160914);
                                        obj_op.DisableControls(IG1601014);
                                        obj_op.DisableControls(IG1601114);
                                        obj_op.DisableControls(IG1601214);




                                        obj_op.DisableControls(IG0415);
                                        obj_op.DisableControls(IG0515);
                                        obj_op.DisableControls(IG060115);
                                        obj_op.DisableControls(IG060215);
                                        obj_op.DisableControls(IG060315);
                                        obj_op.DisableControls(IG060415);
                                        obj_op.DisableControls(IG060515);

                                        obj_op.DisableControls(IG070115);
                                        obj_op.DisableControls(IG070215);
                                        obj_op.DisableControls(IG070315);
                                        obj_op.DisableControls(IG070415);
                                        obj_op.DisableControls(IG070515);
                                        obj_op.DisableControls(IG070615);
                                        obj_op.DisableControls(IG070715);
                                        obj_op.DisableControls(IG070815);
                                        obj_op.DisableControls(IG070915);
                                        obj_op.DisableControls(IG0701015);
                                        obj_op.DisableControls(IG0701115);
                                        obj_op.DisableControls(IG0701215);
                                        obj_op.DisableControls(IG0701315);


                                        obj_op.DisableControls(IG0815);
                                        obj_op.DisableControls(IG0915);
                                        obj_op.DisableControls(IG01015);
                                        obj_op.DisableControls(IG01115);
                                        obj_op.DisableControls(IG01215);
                                        obj_op.DisableControls(IG01315);
                                        obj_op.DisableControls(IG01415);
                                        obj_op.DisableControls(IG01515);

                                        obj_op.DisableControls(IG160115);
                                        obj_op.DisableControls(IG160215);
                                        obj_op.DisableControls(IG160315);
                                        obj_op.DisableControls(IG160415);
                                        obj_op.DisableControls(IG160515);
                                        obj_op.DisableControls(IG160615);
                                        obj_op.DisableControls(IG160715);
                                        obj_op.DisableControls(IG160815);
                                        obj_op.DisableControls(IG160915);
                                        obj_op.DisableControls(IG1601015);
                                        obj_op.DisableControls(IG1601115);
                                        obj_op.DisableControls(IG1601215);

                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG0412"].ToString() == null)
                            {
                                IG0412.Text = "";
                            }
                            else
                            {
                                IG0412.Text = ds.Tables[0].Rows[0]["IG0412"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0512"].ToString() == null)
                            {
                                IG0512.Text = "";
                            }
                            else
                            {
                                IG0512.Text = ds.Tables[0].Rows[0]["IG0512"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060112"].ToString() == null)
                            {
                                IG060112.Text = "";
                            }
                            else
                            {
                                IG060112.Text = ds.Tables[0].Rows[0]["IG060112"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060212"].ToString() == null)
                            {
                                IG060212.Text = "";
                            }
                            else
                            {
                                IG060212.Text = ds.Tables[0].Rows[0]["IG060212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060312"].ToString() == null)
                            {
                                IG060312.Text = "";
                            }
                            else
                            {
                                IG060312.Text = ds.Tables[0].Rows[0]["IG060312"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060412"].ToString() == null)
                            {
                                IG060412.Text = "";
                            }
                            else
                            {
                                IG060412.Text = ds.Tables[0].Rows[0]["IG060412"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060512"].ToString() == null)
                            {
                                IG060512.Text = "";
                            }
                            else
                            {
                                IG060512.Text = ds.Tables[0].Rows[0]["IG060512"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember13"].ToString() == null)
                            {
                                chkMember13.Text = "";
                            }
                            else
                            {
                                chkMember13.Text = ds.Tables[0].Rows[0]["chkMember13"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember13.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0413);
                                        obj_op.EnableControls(IG0513);
                                        obj_op.EnableControls(IG060113);
                                        obj_op.EnableControls(IG060213);
                                        obj_op.EnableControls(IG060313);
                                        obj_op.EnableControls(IG060413);
                                        obj_op.EnableControls(IG060513);

                                        obj_op.EnableControls(IG070113);
                                        obj_op.EnableControls(IG070213);
                                        obj_op.EnableControls(IG070313);
                                        obj_op.EnableControls(IG070413);
                                        obj_op.EnableControls(IG070513);
                                        obj_op.EnableControls(IG070613);
                                        obj_op.EnableControls(IG070713);
                                        obj_op.EnableControls(IG070813);
                                        obj_op.EnableControls(IG070913);
                                        obj_op.EnableControls(IG0701013);
                                        obj_op.EnableControls(IG0701113);
                                        obj_op.EnableControls(IG0701213);
                                        obj_op.EnableControls(IG0701313);


                                        obj_op.EnableControls(IG0813);
                                        obj_op.EnableControls(IG0913);
                                        obj_op.EnableControls(IG01013);
                                        obj_op.EnableControls(IG01113);
                                        obj_op.EnableControls(IG01213);
                                        obj_op.EnableControls(IG01313);
                                        obj_op.EnableControls(IG01413);
                                        obj_op.EnableControls(IG01513);


                                        obj_op.EnableControls(IG160113);
                                        obj_op.EnableControls(IG160213);
                                        obj_op.EnableControls(IG160313);
                                        obj_op.EnableControls(IG160413);
                                        obj_op.EnableControls(IG160513);
                                        obj_op.EnableControls(IG160613);
                                        obj_op.EnableControls(IG160713);
                                        obj_op.EnableControls(IG160813);
                                        obj_op.EnableControls(IG160913);
                                        obj_op.EnableControls(IG1601013);
                                        obj_op.EnableControls(IG1601113);
                                        obj_op.EnableControls(IG1601213);


                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0413);
                                        obj_op.DisableControls(IG0513);
                                        obj_op.DisableControls(IG060113);
                                        obj_op.DisableControls(IG060213);
                                        obj_op.DisableControls(IG060313);
                                        obj_op.DisableControls(IG060413);
                                        obj_op.DisableControls(IG060513);

                                        obj_op.DisableControls(IG070113);
                                        obj_op.DisableControls(IG070213);
                                        obj_op.DisableControls(IG070313);
                                        obj_op.DisableControls(IG070413);
                                        obj_op.DisableControls(IG070513);
                                        obj_op.DisableControls(IG070613);
                                        obj_op.DisableControls(IG070713);
                                        obj_op.DisableControls(IG070813);
                                        obj_op.DisableControls(IG070913);
                                        obj_op.DisableControls(IG0701013);
                                        obj_op.DisableControls(IG0701113);
                                        obj_op.DisableControls(IG0701213);
                                        obj_op.DisableControls(IG0701313);


                                        obj_op.DisableControls(IG0813);
                                        obj_op.DisableControls(IG0913);
                                        obj_op.DisableControls(IG01013);
                                        obj_op.DisableControls(IG01113);
                                        obj_op.DisableControls(IG01213);
                                        obj_op.DisableControls(IG01313);
                                        obj_op.DisableControls(IG01413);
                                        obj_op.DisableControls(IG01513);

                                        obj_op.DisableControls(IG160113);
                                        obj_op.DisableControls(IG160213);
                                        obj_op.DisableControls(IG160313);
                                        obj_op.DisableControls(IG160413);
                                        obj_op.DisableControls(IG160513);
                                        obj_op.DisableControls(IG160613);
                                        obj_op.DisableControls(IG160713);
                                        obj_op.DisableControls(IG160813);
                                        obj_op.DisableControls(IG160913);
                                        obj_op.DisableControls(IG1601013);
                                        obj_op.DisableControls(IG1601113);
                                        obj_op.DisableControls(IG1601213);



                                        obj_op.DisableControls(IG0414);
                                        obj_op.DisableControls(IG0514);
                                        obj_op.DisableControls(IG060114);
                                        obj_op.DisableControls(IG060214);
                                        obj_op.DisableControls(IG060314);
                                        obj_op.DisableControls(IG060414);
                                        obj_op.DisableControls(IG060514);

                                        obj_op.DisableControls(IG070114);
                                        obj_op.DisableControls(IG070214);
                                        obj_op.DisableControls(IG070314);
                                        obj_op.DisableControls(IG070414);
                                        obj_op.DisableControls(IG070514);
                                        obj_op.DisableControls(IG070614);
                                        obj_op.DisableControls(IG070714);
                                        obj_op.DisableControls(IG070814);
                                        obj_op.DisableControls(IG070914);
                                        obj_op.DisableControls(IG0701014);
                                        obj_op.DisableControls(IG0701114);
                                        obj_op.DisableControls(IG0701214);
                                        obj_op.DisableControls(IG0701314);


                                        obj_op.DisableControls(IG0814);
                                        obj_op.DisableControls(IG0914);
                                        obj_op.DisableControls(IG01014);
                                        obj_op.DisableControls(IG01114);
                                        obj_op.DisableControls(IG01214);
                                        obj_op.DisableControls(IG01314);
                                        obj_op.DisableControls(IG01414);
                                        obj_op.DisableControls(IG01514);

                                        obj_op.DisableControls(IG160114);
                                        obj_op.DisableControls(IG160214);
                                        obj_op.DisableControls(IG160314);
                                        obj_op.DisableControls(IG160414);
                                        obj_op.DisableControls(IG160514);
                                        obj_op.DisableControls(IG160614);
                                        obj_op.DisableControls(IG160714);
                                        obj_op.DisableControls(IG160814);
                                        obj_op.DisableControls(IG160914);
                                        obj_op.DisableControls(IG1601014);
                                        obj_op.DisableControls(IG1601114);
                                        obj_op.DisableControls(IG1601214);




                                        obj_op.DisableControls(IG0415);
                                        obj_op.DisableControls(IG0515);
                                        obj_op.DisableControls(IG060115);
                                        obj_op.DisableControls(IG060215);
                                        obj_op.DisableControls(IG060315);
                                        obj_op.DisableControls(IG060415);
                                        obj_op.DisableControls(IG060515);

                                        obj_op.DisableControls(IG070115);
                                        obj_op.DisableControls(IG070215);
                                        obj_op.DisableControls(IG070315);
                                        obj_op.DisableControls(IG070415);
                                        obj_op.DisableControls(IG070515);
                                        obj_op.DisableControls(IG070615);
                                        obj_op.DisableControls(IG070715);
                                        obj_op.DisableControls(IG070815);
                                        obj_op.DisableControls(IG070915);
                                        obj_op.DisableControls(IG0701015);
                                        obj_op.DisableControls(IG0701115);
                                        obj_op.DisableControls(IG0701215);
                                        obj_op.DisableControls(IG0701315);


                                        obj_op.DisableControls(IG0815);
                                        obj_op.DisableControls(IG0915);
                                        obj_op.DisableControls(IG01015);
                                        obj_op.DisableControls(IG01115);
                                        obj_op.DisableControls(IG01215);
                                        obj_op.DisableControls(IG01315);
                                        obj_op.DisableControls(IG01415);
                                        obj_op.DisableControls(IG01515);

                                        obj_op.DisableControls(IG160115);
                                        obj_op.DisableControls(IG160215);
                                        obj_op.DisableControls(IG160315);
                                        obj_op.DisableControls(IG160415);
                                        obj_op.DisableControls(IG160515);
                                        obj_op.DisableControls(IG160615);
                                        obj_op.DisableControls(IG160715);
                                        obj_op.DisableControls(IG160815);
                                        obj_op.DisableControls(IG160915);
                                        obj_op.DisableControls(IG1601015);
                                        obj_op.DisableControls(IG1601115);
                                        obj_op.DisableControls(IG1601215);

                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0413"].ToString() == null)
                            {
                                IG0413.Text = "";
                            }
                            else
                            {
                                IG0413.Text = ds.Tables[0].Rows[0]["IG0413"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0513"].ToString() == null)
                            {
                                IG0513.Text = "";
                            }
                            else
                            {
                                IG0513.Text = ds.Tables[0].Rows[0]["IG0513"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060113"].ToString() == null)
                            {
                                IG060113.Text = "";
                            }
                            else
                            {
                                IG060113.Text = ds.Tables[0].Rows[0]["IG060113"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060213"].ToString() == null)
                            {
                                IG060213.Text = "";
                            }
                            else
                            {
                                IG060213.Text = ds.Tables[0].Rows[0]["IG060213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060313"].ToString() == null)
                            {
                                IG060313.Text = "";
                            }
                            else
                            {
                                IG060313.Text = ds.Tables[0].Rows[0]["IG060313"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060413"].ToString() == null)
                            {
                                IG060413.Text = "";
                            }
                            else
                            {
                                IG060413.Text = ds.Tables[0].Rows[0]["IG060413"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060513"].ToString() == null)
                            {
                                IG060513.Text = "";
                            }
                            else
                            {
                                IG060513.Text = ds.Tables[0].Rows[0]["IG060513"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember14"].ToString() == null)
                            {
                                chkMember14.Text = "";
                            }
                            else
                            {
                                chkMember14.Text = ds.Tables[0].Rows[0]["chkMember14"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember14.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0414);
                                        obj_op.EnableControls(IG0514);
                                        obj_op.EnableControls(IG060114);
                                        obj_op.EnableControls(IG060214);
                                        obj_op.EnableControls(IG060314);
                                        obj_op.EnableControls(IG060414);
                                        obj_op.EnableControls(IG060514);

                                        obj_op.EnableControls(IG070114);
                                        obj_op.EnableControls(IG070214);
                                        obj_op.EnableControls(IG070314);
                                        obj_op.EnableControls(IG070414);
                                        obj_op.EnableControls(IG070514);
                                        obj_op.EnableControls(IG070614);
                                        obj_op.EnableControls(IG070714);
                                        obj_op.EnableControls(IG070814);
                                        obj_op.EnableControls(IG070914);
                                        obj_op.EnableControls(IG0701014);
                                        obj_op.EnableControls(IG0701114);
                                        obj_op.EnableControls(IG0701214);
                                        obj_op.EnableControls(IG0701314);


                                        obj_op.EnableControls(IG0814);
                                        obj_op.EnableControls(IG0914);
                                        obj_op.EnableControls(IG01014);
                                        obj_op.EnableControls(IG01114);
                                        obj_op.EnableControls(IG01214);
                                        obj_op.EnableControls(IG01314);
                                        obj_op.EnableControls(IG01414);
                                        obj_op.EnableControls(IG01514);


                                        obj_op.EnableControls(IG160114);
                                        obj_op.EnableControls(IG160214);
                                        obj_op.EnableControls(IG160314);
                                        obj_op.EnableControls(IG160414);
                                        obj_op.EnableControls(IG160514);
                                        obj_op.EnableControls(IG160614);
                                        obj_op.EnableControls(IG160714);
                                        obj_op.EnableControls(IG160814);
                                        obj_op.EnableControls(IG160914);
                                        obj_op.EnableControls(IG1601014);
                                        obj_op.EnableControls(IG1601114);
                                        obj_op.EnableControls(IG1601214);

                                    }
                                    else
                                    {


                                        obj_op.DisableControls(IG0414);
                                        obj_op.DisableControls(IG0514);
                                        obj_op.DisableControls(IG060114);
                                        obj_op.DisableControls(IG060214);
                                        obj_op.DisableControls(IG060314);
                                        obj_op.DisableControls(IG060414);
                                        obj_op.DisableControls(IG060514);

                                        obj_op.DisableControls(IG070114);
                                        obj_op.DisableControls(IG070214);
                                        obj_op.DisableControls(IG070314);
                                        obj_op.DisableControls(IG070414);
                                        obj_op.DisableControls(IG070514);
                                        obj_op.DisableControls(IG070614);
                                        obj_op.DisableControls(IG070714);
                                        obj_op.DisableControls(IG070814);
                                        obj_op.DisableControls(IG070914);
                                        obj_op.DisableControls(IG0701014);
                                        obj_op.DisableControls(IG0701114);
                                        obj_op.DisableControls(IG0701214);
                                        obj_op.DisableControls(IG0701314);


                                        obj_op.DisableControls(IG0814);
                                        obj_op.DisableControls(IG0914);
                                        obj_op.DisableControls(IG01014);
                                        obj_op.DisableControls(IG01114);
                                        obj_op.DisableControls(IG01214);
                                        obj_op.DisableControls(IG01314);
                                        obj_op.DisableControls(IG01414);
                                        obj_op.DisableControls(IG01514);

                                        obj_op.DisableControls(IG160114);
                                        obj_op.DisableControls(IG160214);
                                        obj_op.DisableControls(IG160314);
                                        obj_op.DisableControls(IG160414);
                                        obj_op.DisableControls(IG160514);
                                        obj_op.DisableControls(IG160614);
                                        obj_op.DisableControls(IG160714);
                                        obj_op.DisableControls(IG160814);
                                        obj_op.DisableControls(IG160914);
                                        obj_op.DisableControls(IG1601014);
                                        obj_op.DisableControls(IG1601114);
                                        obj_op.DisableControls(IG1601214);




                                        obj_op.DisableControls(IG0415);
                                        obj_op.DisableControls(IG0515);
                                        obj_op.DisableControls(IG060115);
                                        obj_op.DisableControls(IG060215);
                                        obj_op.DisableControls(IG060315);
                                        obj_op.DisableControls(IG060415);
                                        obj_op.DisableControls(IG060515);

                                        obj_op.DisableControls(IG070115);
                                        obj_op.DisableControls(IG070215);
                                        obj_op.DisableControls(IG070315);
                                        obj_op.DisableControls(IG070415);
                                        obj_op.DisableControls(IG070515);
                                        obj_op.DisableControls(IG070615);
                                        obj_op.DisableControls(IG070715);
                                        obj_op.DisableControls(IG070815);
                                        obj_op.DisableControls(IG070915);
                                        obj_op.DisableControls(IG0701015);
                                        obj_op.DisableControls(IG0701115);
                                        obj_op.DisableControls(IG0701215);
                                        obj_op.DisableControls(IG0701315);


                                        obj_op.DisableControls(IG0815);
                                        obj_op.DisableControls(IG0915);
                                        obj_op.DisableControls(IG01015);
                                        obj_op.DisableControls(IG01115);
                                        obj_op.DisableControls(IG01215);
                                        obj_op.DisableControls(IG01315);
                                        obj_op.DisableControls(IG01415);
                                        obj_op.DisableControls(IG01515);

                                        obj_op.DisableControls(IG160115);
                                        obj_op.DisableControls(IG160215);
                                        obj_op.DisableControls(IG160315);
                                        obj_op.DisableControls(IG160415);
                                        obj_op.DisableControls(IG160515);
                                        obj_op.DisableControls(IG160615);
                                        obj_op.DisableControls(IG160715);
                                        obj_op.DisableControls(IG160815);
                                        obj_op.DisableControls(IG160915);
                                        obj_op.DisableControls(IG1601015);
                                        obj_op.DisableControls(IG1601115);
                                        obj_op.DisableControls(IG1601215);

                                    }

                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0414"].ToString() == null)
                            {
                                IG0414.Text = "";
                            }
                            else
                            {
                                IG0414.Text = ds.Tables[0].Rows[0]["IG0414"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0514"].ToString() == null)
                            {
                                IG0514.Text = "";
                            }
                            else
                            {
                                IG0514.Text = ds.Tables[0].Rows[0]["IG0514"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060114"].ToString() == null)
                            {
                                IG060114.Text = "";
                            }
                            else
                            {
                                IG060114.Text = ds.Tables[0].Rows[0]["IG060114"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060214"].ToString() == null)
                            {
                                IG060214.Text = "";
                            }
                            else
                            {
                                IG060214.Text = ds.Tables[0].Rows[0]["IG060214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060314"].ToString() == null)
                            {
                                IG060314.Text = "";
                            }
                            else
                            {
                                IG060314.Text = ds.Tables[0].Rows[0]["IG060314"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060414"].ToString() == null)
                            {
                                IG060414.Text = "";
                            }
                            else
                            {
                                IG060414.Text = ds.Tables[0].Rows[0]["IG060414"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060514"].ToString() == null)
                            {
                                IG060514.Text = "";
                            }
                            else
                            {
                                IG060514.Text = ds.Tables[0].Rows[0]["IG060514"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["chkMember15"].ToString() == null)
                            {
                                chkMember15.Text = "";
                            }
                            else
                            {
                                chkMember15.Text = ds.Tables[0].Rows[0]["chkMember15"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember15.Text == "1")
                                    {
                                        obj_op.EnableControls(IG0415);
                                        obj_op.EnableControls(IG0515);
                                        obj_op.EnableControls(IG060115);
                                        obj_op.EnableControls(IG060215);
                                        obj_op.EnableControls(IG060315);
                                        obj_op.EnableControls(IG060415);
                                        obj_op.EnableControls(IG060515);

                                        obj_op.EnableControls(IG070115);
                                        obj_op.EnableControls(IG070215);
                                        obj_op.EnableControls(IG070315);
                                        obj_op.EnableControls(IG070415);
                                        obj_op.EnableControls(IG070515);
                                        obj_op.EnableControls(IG070615);
                                        obj_op.EnableControls(IG070715);
                                        obj_op.EnableControls(IG070815);
                                        obj_op.EnableControls(IG070915);
                                        obj_op.EnableControls(IG0701015);
                                        obj_op.EnableControls(IG0701115);
                                        obj_op.EnableControls(IG0701215);
                                        obj_op.EnableControls(IG0701315);


                                        obj_op.EnableControls(IG0815);
                                        obj_op.EnableControls(IG0915);
                                        obj_op.EnableControls(IG01015);
                                        obj_op.EnableControls(IG01115);
                                        obj_op.EnableControls(IG01215);
                                        obj_op.EnableControls(IG01315);
                                        obj_op.EnableControls(IG01415);
                                        obj_op.EnableControls(IG01515);


                                        obj_op.EnableControls(IG160115);
                                        obj_op.EnableControls(IG160215);
                                        obj_op.EnableControls(IG160315);
                                        obj_op.EnableControls(IG160415);
                                        obj_op.EnableControls(IG160515);
                                        obj_op.EnableControls(IG160615);
                                        obj_op.EnableControls(IG160715);
                                        obj_op.EnableControls(IG160815);
                                        obj_op.EnableControls(IG160915);
                                        obj_op.EnableControls(IG1601015);
                                        obj_op.EnableControls(IG1601115);
                                        obj_op.EnableControls(IG1601215);

                                    }
                                    else
                                    {



                                        obj_op.DisableControls(IG0415);
                                        obj_op.DisableControls(IG0515);
                                        obj_op.DisableControls(IG060115);
                                        obj_op.DisableControls(IG060215);
                                        obj_op.DisableControls(IG060315);
                                        obj_op.DisableControls(IG060415);
                                        obj_op.DisableControls(IG060515);

                                        obj_op.DisableControls(IG070115);
                                        obj_op.DisableControls(IG070215);
                                        obj_op.DisableControls(IG070315);
                                        obj_op.DisableControls(IG070415);
                                        obj_op.DisableControls(IG070515);
                                        obj_op.DisableControls(IG070615);
                                        obj_op.DisableControls(IG070715);
                                        obj_op.DisableControls(IG070815);
                                        obj_op.DisableControls(IG070915);
                                        obj_op.DisableControls(IG0701015);
                                        obj_op.DisableControls(IG0701115);
                                        obj_op.DisableControls(IG0701215);
                                        obj_op.DisableControls(IG0701315);


                                        obj_op.DisableControls(IG0815);
                                        obj_op.DisableControls(IG0915);
                                        obj_op.DisableControls(IG01015);
                                        obj_op.DisableControls(IG01115);
                                        obj_op.DisableControls(IG01215);
                                        obj_op.DisableControls(IG01315);
                                        obj_op.DisableControls(IG01415);
                                        obj_op.DisableControls(IG01515);

                                        obj_op.DisableControls(IG160115);
                                        obj_op.DisableControls(IG160215);
                                        obj_op.DisableControls(IG160315);
                                        obj_op.DisableControls(IG160415);
                                        obj_op.DisableControls(IG160515);
                                        obj_op.DisableControls(IG160615);
                                        obj_op.DisableControls(IG160715);
                                        obj_op.DisableControls(IG160815);
                                        obj_op.DisableControls(IG160915);
                                        obj_op.DisableControls(IG1601015);
                                        obj_op.DisableControls(IG1601115);
                                        obj_op.DisableControls(IG1601215);

                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG0415"].ToString() == null)
                            {
                                IG0415.Text = "";
                            }
                            else
                            {
                                IG0415.Text = ds.Tables[0].Rows[0]["IG0415"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0515"].ToString() == null)
                            {
                                IG0515.Text = "";
                            }
                            else
                            {
                                IG0515.Text = ds.Tables[0].Rows[0]["IG0515"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060115"].ToString() == null)
                            {
                                IG060115.Text = "";
                            }
                            else
                            {
                                IG060115.Text = ds.Tables[0].Rows[0]["IG060115"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060215"].ToString() == null)
                            {
                                IG060215.Text = "";
                            }
                            else
                            {
                                IG060215.Text = ds.Tables[0].Rows[0]["IG060215"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060315"].ToString() == null)
                            {
                                IG060315.Text = "";
                            }
                            else
                            {
                                IG060315.Text = ds.Tables[0].Rows[0]["IG060315"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060415"].ToString() == null)
                            {
                                IG060415.Text = "";
                            }
                            else
                            {
                                IG060415.Text = ds.Tables[0].Rows[0]["IG060415"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG060515"].ToString() == null)
                            {
                                IG060515.Text = "";
                            }
                            else
                            {
                                IG060515.Text = ds.Tables[0].Rows[0]["IG060515"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070111"].ToString() == null)
                            {
                                IG070111.Text = "";
                            }
                            else
                            {
                                IG070111.Text = ds.Tables[0].Rows[0]["IG070111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070211"].ToString() == null)
                            {
                                IG070211.Text = "";
                            }
                            else
                            {
                                IG070211.Text = ds.Tables[0].Rows[0]["IG070211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070311"].ToString() == null)
                            {
                                IG070311.Text = "";
                            }
                            else
                            {
                                IG070311.Text = ds.Tables[0].Rows[0]["IG070311"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070411"].ToString() == null)
                            {
                                IG070411.Text = "";
                            }
                            else
                            {
                                IG070411.Text = ds.Tables[0].Rows[0]["IG070411"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070511"].ToString() == null)
                            {
                                IG070511.Text = "";
                            }
                            else
                            {
                                IG070511.Text = ds.Tables[0].Rows[0]["IG070511"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070611"].ToString() == null)
                            {
                                IG070611.Text = "";
                            }
                            else
                            {
                                IG070611.Text = ds.Tables[0].Rows[0]["IG070611"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070711"].ToString() == null)
                            {
                                IG070711.Text = "";
                            }
                            else
                            {
                                IG070711.Text = ds.Tables[0].Rows[0]["IG070711"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070811"].ToString() == null)
                            {
                                IG070811.Text = "";
                            }
                            else
                            {
                                IG070811.Text = ds.Tables[0].Rows[0]["IG070811"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070911"].ToString() == null)
                            {
                                IG070911.Text = "";
                            }
                            else
                            {
                                IG070911.Text = ds.Tables[0].Rows[0]["IG070911"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701011"].ToString() == null)
                            {
                                IG0701011.Text = "";
                            }
                            else
                            {
                                IG0701011.Text = ds.Tables[0].Rows[0]["IG0701011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701111"].ToString() == null)
                            {
                                IG0701111.Text = "";
                            }
                            else
                            {
                                IG0701111.Text = ds.Tables[0].Rows[0]["IG0701111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701211"].ToString() == null)
                            {
                                IG0701211.Text = "";
                            }
                            else
                            {
                                IG0701211.Text = ds.Tables[0].Rows[0]["IG0701211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701311"].ToString() == null)
                            {
                                IG0701311.Text = "";
                            }
                            else
                            {
                                IG0701311.Text = ds.Tables[0].Rows[0]["IG0701311"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0811"].ToString() == null)
                            {
                                IG0811.Text = "";
                            }
                            else
                            {
                                IG0811.Text = ds.Tables[0].Rows[0]["IG0811"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0911"].ToString() == null)
                            {
                                IG0911.Text = "";
                            }
                            else
                            {
                                IG0911.Text = ds.Tables[0].Rows[0]["IG0911"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember11.Text == "1")
                                    {
                                        if (IG0911.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01011);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01011);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01011"].ToString() == null)
                            {
                                IG01011.Text = "";
                            }
                            else
                            {
                                IG01011.Text = ds.Tables[0].Rows[0]["IG01011"].ToString();


                                //javed 333


                                if (IB05.Text == "1")
                                {
                                    if (chkMember11.Text == "1")
                                    {
                                        if (IG01011.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01111);
                                            obj_op.DisableControls(IG01211);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01111);
                                            obj_op.EnableControls(IG01211);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01111"].ToString() == null)
                            {
                                IG01111.Text = "";
                            }
                            else
                            {
                                IG01111.Text = ds.Tables[0].Rows[0]["IG01111"].ToString();


                                if (IB05.Text == "1")
                                {
                                    if (chkMember11.Text == "1")
                                    {
                                        if (IG01011.Text != "1")
                                        {
                                            if (IG01111.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01211);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01211);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01211"].ToString() == null)
                            {
                                IG01211.Text = "";
                            }
                            else
                            {
                                IG01211.Text = ds.Tables[0].Rows[0]["IG01211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01311"].ToString() == null)
                            {
                                IG01311.Text = "";
                            }
                            else
                            {
                                IG01311.Text = ds.Tables[0].Rows[0]["IG01311"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01411"].ToString() == null)
                            {
                                IG01411.Text = "";
                            }
                            else
                            {
                                IG01411.Text = ds.Tables[0].Rows[0]["IG01411"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01511"].ToString() == null)
                            {
                                IG01511.Text = "";
                            }
                            else
                            {
                                IG01511.Text = ds.Tables[0].Rows[0]["IG01511"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070112"].ToString() == null)
                            {
                                IG070112.Text = "";
                            }
                            else
                            {
                                IG070112.Text = ds.Tables[0].Rows[0]["IG070112"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070212"].ToString() == null)
                            {
                                IG070212.Text = "";
                            }
                            else
                            {
                                IG070212.Text = ds.Tables[0].Rows[0]["IG070212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070312"].ToString() == null)
                            {
                                IG070312.Text = "";
                            }
                            else
                            {
                                IG070312.Text = ds.Tables[0].Rows[0]["IG070312"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070412"].ToString() == null)
                            {
                                IG070412.Text = "";
                            }
                            else
                            {
                                IG070412.Text = ds.Tables[0].Rows[0]["IG070412"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070512"].ToString() == null)
                            {
                                IG070512.Text = "";
                            }
                            else
                            {
                                IG070512.Text = ds.Tables[0].Rows[0]["IG070512"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070612"].ToString() == null)
                            {
                                IG070612.Text = "";
                            }
                            else
                            {
                                IG070612.Text = ds.Tables[0].Rows[0]["IG070612"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070712"].ToString() == null)
                            {
                                IG070712.Text = "";
                            }
                            else
                            {
                                IG070712.Text = ds.Tables[0].Rows[0]["IG070712"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070812"].ToString() == null)
                            {
                                IG070812.Text = "";
                            }
                            else
                            {
                                IG070812.Text = ds.Tables[0].Rows[0]["IG070812"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070912"].ToString() == null)
                            {
                                IG070912.Text = "";
                            }
                            else
                            {
                                IG070912.Text = ds.Tables[0].Rows[0]["IG070912"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701012"].ToString() == null)
                            {
                                IG0701012.Text = "";
                            }
                            else
                            {
                                IG0701012.Text = ds.Tables[0].Rows[0]["IG0701012"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701112"].ToString() == null)
                            {
                                IG0701112.Text = "";
                            }
                            else
                            {
                                IG0701112.Text = ds.Tables[0].Rows[0]["IG0701112"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701212"].ToString() == null)
                            {
                                IG0701212.Text = "";
                            }
                            else
                            {
                                IG0701212.Text = ds.Tables[0].Rows[0]["IG0701212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701312"].ToString() == null)
                            {
                                IG0701312.Text = "";
                            }
                            else
                            {
                                IG0701312.Text = ds.Tables[0].Rows[0]["IG0701312"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0812"].ToString() == null)
                            {
                                IG0812.Text = "";
                            }
                            else
                            {
                                IG0812.Text = ds.Tables[0].Rows[0]["IG0812"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0912"].ToString() == null)
                            {
                                IG0912.Text = "";
                            }
                            else
                            {
                                IG0912.Text = ds.Tables[0].Rows[0]["IG0912"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember12.Text == "1")
                                    {
                                        if (IG0912.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01012);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01012);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01012"].ToString() == null)
                            {
                                IG01012.Text = "";
                            }
                            else
                            {
                                IG01012.Text = ds.Tables[0].Rows[0]["IG01012"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember12.Text == "1")
                                    {
                                        if (IG01012.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01112);
                                            obj_op.DisableControls(IG01212);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01112);
                                            obj_op.EnableControls(IG01212);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01112"].ToString() == null)
                            {
                                IG01112.Text = "";
                            }
                            else
                            {
                                IG01112.Text = ds.Tables[0].Rows[0]["IG01112"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember12.Text == "1")
                                    {
                                        if (IG01012.Text != "1")
                                        {
                                            if (IG01112.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01212);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01212);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01212"].ToString() == null)
                            {
                                IG01212.Text = "";
                            }
                            else
                            {
                                IG01212.Text = ds.Tables[0].Rows[0]["IG01212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01312"].ToString() == null)
                            {
                                IG01312.Text = "";
                            }
                            else
                            {
                                IG01312.Text = ds.Tables[0].Rows[0]["IG01312"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01412"].ToString() == null)
                            {
                                IG01412.Text = "";
                            }
                            else
                            {
                                IG01412.Text = ds.Tables[0].Rows[0]["IG01412"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01512"].ToString() == null)
                            {
                                IG01512.Text = "";
                            }
                            else
                            {
                                IG01512.Text = ds.Tables[0].Rows[0]["IG01512"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070113"].ToString() == null)
                            {
                                IG070113.Text = "";
                            }
                            else
                            {
                                IG070113.Text = ds.Tables[0].Rows[0]["IG070113"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070213"].ToString() == null)
                            {
                                IG070213.Text = "";
                            }
                            else
                            {
                                IG070213.Text = ds.Tables[0].Rows[0]["IG070213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070313"].ToString() == null)
                            {
                                IG070313.Text = "";
                            }
                            else
                            {
                                IG070313.Text = ds.Tables[0].Rows[0]["IG070313"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070413"].ToString() == null)
                            {
                                IG070413.Text = "";
                            }
                            else
                            {
                                IG070413.Text = ds.Tables[0].Rows[0]["IG070413"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070513"].ToString() == null)
                            {
                                IG070513.Text = "";
                            }
                            else
                            {
                                IG070513.Text = ds.Tables[0].Rows[0]["IG070513"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070613"].ToString() == null)
                            {
                                IG070613.Text = "";
                            }
                            else
                            {
                                IG070613.Text = ds.Tables[0].Rows[0]["IG070613"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070713"].ToString() == null)
                            {
                                IG070713.Text = "";
                            }
                            else
                            {
                                IG070713.Text = ds.Tables[0].Rows[0]["IG070713"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070813"].ToString() == null)
                            {
                                IG070813.Text = "";
                            }
                            else
                            {
                                IG070813.Text = ds.Tables[0].Rows[0]["IG070813"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070913"].ToString() == null)
                            {
                                IG070913.Text = "";
                            }
                            else
                            {
                                IG070913.Text = ds.Tables[0].Rows[0]["IG070913"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701013"].ToString() == null)
                            {
                                IG0701013.Text = "";
                            }
                            else
                            {
                                IG0701013.Text = ds.Tables[0].Rows[0]["IG0701013"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701113"].ToString() == null)
                            {
                                IG0701113.Text = "";
                            }
                            else
                            {
                                IG0701113.Text = ds.Tables[0].Rows[0]["IG0701113"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701213"].ToString() == null)
                            {
                                IG0701213.Text = "";
                            }
                            else
                            {
                                IG0701213.Text = ds.Tables[0].Rows[0]["IG0701213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701313"].ToString() == null)
                            {
                                IG0701313.Text = "";
                            }
                            else
                            {
                                IG0701313.Text = ds.Tables[0].Rows[0]["IG0701313"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0813"].ToString() == null)
                            {
                                IG0813.Text = "";
                            }
                            else
                            {
                                IG0813.Text = ds.Tables[0].Rows[0]["IG0813"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0913"].ToString() == null)
                            {
                                IG0913.Text = "";
                            }
                            else
                            {
                                IG0913.Text = ds.Tables[0].Rows[0]["IG0913"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember13.Text == "1")
                                    {
                                        if (IG0913.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01013);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01013);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01013"].ToString() == null)
                            {
                                IG01013.Text = "";
                            }
                            else
                            {
                                IG01013.Text = ds.Tables[0].Rows[0]["IG01013"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember13.Text == "1")
                                    {
                                        if (IG01013.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01113);
                                            obj_op.DisableControls(IG01213);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01113);
                                            obj_op.EnableControls(IG01213);
                                        }
                                    }
                                }

                            }

                            if (ds.Tables[0].Rows[0]["IG01113"].ToString() == null)
                            {
                                IG01113.Text = "";
                            }
                            else
                            {
                                IG01113.Text = ds.Tables[0].Rows[0]["IG01113"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember13.Text == "1")
                                    {
                                        if (IG01013.Text != "1")
                                        {
                                            if (IG01113.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01213);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01213);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01213"].ToString() == null)
                            {
                                IG01213.Text = "";
                            }
                            else
                            {
                                IG01213.Text = ds.Tables[0].Rows[0]["IG01213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01313"].ToString() == null)
                            {
                                IG01313.Text = "";
                            }
                            else
                            {
                                IG01313.Text = ds.Tables[0].Rows[0]["IG01313"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01413"].ToString() == null)
                            {
                                IG01413.Text = "";
                            }
                            else
                            {
                                IG01413.Text = ds.Tables[0].Rows[0]["IG01413"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01513"].ToString() == null)
                            {
                                IG01513.Text = "";
                            }
                            else
                            {
                                IG01513.Text = ds.Tables[0].Rows[0]["IG01513"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070114"].ToString() == null)
                            {
                                IG070114.Text = "";
                            }
                            else
                            {
                                IG070114.Text = ds.Tables[0].Rows[0]["IG070114"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070214"].ToString() == null)
                            {
                                IG070214.Text = "";
                            }
                            else
                            {
                                IG070214.Text = ds.Tables[0].Rows[0]["IG070214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070314"].ToString() == null)
                            {
                                IG070314.Text = "";
                            }
                            else
                            {
                                IG070314.Text = ds.Tables[0].Rows[0]["IG070314"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070414"].ToString() == null)
                            {
                                IG070414.Text = "";
                            }
                            else
                            {
                                IG070414.Text = ds.Tables[0].Rows[0]["IG070414"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070514"].ToString() == null)
                            {
                                IG070514.Text = "";
                            }
                            else
                            {
                                IG070514.Text = ds.Tables[0].Rows[0]["IG070514"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070614"].ToString() == null)
                            {
                                IG070614.Text = "";
                            }
                            else
                            {
                                IG070614.Text = ds.Tables[0].Rows[0]["IG070614"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070714"].ToString() == null)
                            {
                                IG070714.Text = "";
                            }
                            else
                            {
                                IG070714.Text = ds.Tables[0].Rows[0]["IG070714"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070814"].ToString() == null)
                            {
                                IG070814.Text = "";
                            }
                            else
                            {
                                IG070814.Text = ds.Tables[0].Rows[0]["IG070814"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070914"].ToString() == null)
                            {
                                IG070914.Text = "";
                            }
                            else
                            {
                                IG070914.Text = ds.Tables[0].Rows[0]["IG070914"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701014"].ToString() == null)
                            {
                                IG0701014.Text = "";
                            }
                            else
                            {
                                IG0701014.Text = ds.Tables[0].Rows[0]["IG0701014"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701114"].ToString() == null)
                            {
                                IG0701114.Text = "";
                            }
                            else
                            {
                                IG0701114.Text = ds.Tables[0].Rows[0]["IG0701114"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701214"].ToString() == null)
                            {
                                IG0701214.Text = "";
                            }
                            else
                            {
                                IG0701214.Text = ds.Tables[0].Rows[0]["IG0701214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701314"].ToString() == null)
                            {
                                IG0701314.Text = "";
                            }
                            else
                            {
                                IG0701314.Text = ds.Tables[0].Rows[0]["IG0701314"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0814"].ToString() == null)
                            {
                                IG0814.Text = "";
                            }
                            else
                            {
                                IG0814.Text = ds.Tables[0].Rows[0]["IG0814"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0914"].ToString() == null)
                            {
                                IG0914.Text = "";
                            }
                            else
                            {
                                IG0914.Text = ds.Tables[0].Rows[0]["IG0914"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember14.Text == "1")
                                    {
                                        if (IG0914.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01014);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01014);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01014"].ToString() == null)
                            {
                                IG01014.Text = "";
                            }
                            else
                            {
                                IG01014.Text = ds.Tables[0].Rows[0]["IG01014"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember14.Text == "1")
                                    {
                                        if (IG01014.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01114);
                                            obj_op.DisableControls(IG01214);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01114);
                                            obj_op.EnableControls(IG01214);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01114"].ToString() == null)
                            {
                                IG01114.Text = "";
                            }
                            else
                            {
                                IG01114.Text = ds.Tables[0].Rows[0]["IG01114"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember14.Text == "1")
                                    {
                                        if (IG01014.Text != "1")
                                        {
                                            if (IG01114.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01214);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01214);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01214"].ToString() == null)
                            {
                                IG01214.Text = "";
                            }
                            else
                            {
                                IG01214.Text = ds.Tables[0].Rows[0]["IG01214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01314"].ToString() == null)
                            {
                                IG01314.Text = "";
                            }
                            else
                            {
                                IG01314.Text = ds.Tables[0].Rows[0]["IG01314"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01414"].ToString() == null)
                            {
                                IG01414.Text = "";
                            }
                            else
                            {
                                IG01414.Text = ds.Tables[0].Rows[0]["IG01414"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01514"].ToString() == null)
                            {
                                IG01514.Text = "";
                            }
                            else
                            {
                                IG01514.Text = ds.Tables[0].Rows[0]["IG01514"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070115"].ToString() == null)
                            {
                                IG070115.Text = "";
                            }
                            else
                            {
                                IG070115.Text = ds.Tables[0].Rows[0]["IG070115"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070215"].ToString() == null)
                            {
                                IG070215.Text = "";
                            }
                            else
                            {
                                IG070215.Text = ds.Tables[0].Rows[0]["IG070215"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070315"].ToString() == null)
                            {
                                IG070315.Text = "";
                            }
                            else
                            {
                                IG070315.Text = ds.Tables[0].Rows[0]["IG070315"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070415"].ToString() == null)
                            {
                                IG070415.Text = "";
                            }
                            else
                            {
                                IG070415.Text = ds.Tables[0].Rows[0]["IG070415"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070515"].ToString() == null)
                            {
                                IG070515.Text = "";
                            }
                            else
                            {
                                IG070515.Text = ds.Tables[0].Rows[0]["IG070515"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070615"].ToString() == null)
                            {
                                IG070615.Text = "";
                            }
                            else
                            {
                                IG070615.Text = ds.Tables[0].Rows[0]["IG070615"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070715"].ToString() == null)
                            {
                                IG070715.Text = "";
                            }
                            else
                            {
                                IG070715.Text = ds.Tables[0].Rows[0]["IG070715"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070815"].ToString() == null)
                            {
                                IG070815.Text = "";
                            }
                            else
                            {
                                IG070815.Text = ds.Tables[0].Rows[0]["IG070815"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG070915"].ToString() == null)
                            {
                                IG070915.Text = "";
                            }
                            else
                            {
                                IG070915.Text = ds.Tables[0].Rows[0]["IG070915"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701015"].ToString() == null)
                            {
                                IG0701015.Text = "";
                            }
                            else
                            {
                                IG0701015.Text = ds.Tables[0].Rows[0]["IG0701015"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701115"].ToString() == null)
                            {
                                IG0701115.Text = "";
                            }
                            else
                            {
                                IG0701115.Text = ds.Tables[0].Rows[0]["IG0701115"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701215"].ToString() == null)
                            {
                                IG0701215.Text = "";
                            }
                            else
                            {
                                IG0701215.Text = ds.Tables[0].Rows[0]["IG0701215"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0701315"].ToString() == null)
                            {
                                IG0701315.Text = "";
                            }
                            else
                            {
                                IG0701315.Text = ds.Tables[0].Rows[0]["IG0701315"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0815"].ToString() == null)
                            {
                                IG0815.Text = "";
                            }
                            else
                            {
                                IG0815.Text = ds.Tables[0].Rows[0]["IG0815"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG0915"].ToString() == null)
                            {
                                IG0915.Text = "";
                            }
                            else
                            {
                                IG0915.Text = ds.Tables[0].Rows[0]["IG0915"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember15.Text == "1")
                                    {
                                        if (IG0915.Text == "0")
                                        {
                                            obj_op.DisableControls(IG01015);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01015);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01015"].ToString() == null)
                            {
                                IG01015.Text = "";
                            }
                            else
                            {
                                IG01015.Text = ds.Tables[0].Rows[0]["IG01015"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember15.Text == "1")
                                    {
                                        if (IG01015.Text == "1")
                                        {
                                            obj_op.DisableControls(IG01115);
                                            obj_op.DisableControls(IG01215);
                                        }
                                        else
                                        {
                                            obj_op.EnableControls(IG01115);
                                            obj_op.EnableControls(IG01215);
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01115"].ToString() == null)
                            {
                                IG01115.Text = "";
                            }
                            else
                            {
                                IG01115.Text = ds.Tables[0].Rows[0]["IG01115"].ToString();

                                if (IB05.Text == "1")
                                {
                                    if (chkMember15.Text == "1")
                                    {
                                        if (IG01015.Text != "1")
                                        {
                                            if (IG01115.Text == "1")
                                            {
                                                obj_op.DisableControls(IG01215);
                                            }
                                            else
                                            {
                                                obj_op.EnableControls(IG01215);
                                            }
                                        }
                                    }
                                }
                            }

                            if (ds.Tables[0].Rows[0]["IG01215"].ToString() == null)
                            {
                                IG01215.Text = "";
                            }
                            else
                            {
                                IG01215.Text = ds.Tables[0].Rows[0]["IG01215"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01315"].ToString() == null)
                            {
                                IG01315.Text = "";
                            }
                            else
                            {
                                IG01315.Text = ds.Tables[0].Rows[0]["IG01315"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01415"].ToString() == null)
                            {
                                IG01415.Text = "";
                            }
                            else
                            {
                                IG01415.Text = ds.Tables[0].Rows[0]["IG01415"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG01515"].ToString() == null)
                            {
                                IG01515.Text = "";
                            }
                            else
                            {
                                IG01515.Text = ds.Tables[0].Rows[0]["IG01515"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160111"].ToString() == null)
                            {
                                IG160111.Text = "";
                            }
                            else
                            {
                                IG160111.Text = ds.Tables[0].Rows[0]["IG160111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160211"].ToString() == null)
                            {
                                IG160211.Text = "";
                            }
                            else
                            {
                                IG160211.Text = ds.Tables[0].Rows[0]["IG160211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160311"].ToString() == null)
                            {
                                IG160311.Text = "";
                            }
                            else
                            {
                                IG160311.Text = ds.Tables[0].Rows[0]["IG160311"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160411"].ToString() == null)
                            {
                                IG160411.Text = "";
                            }
                            else
                            {
                                IG160411.Text = ds.Tables[0].Rows[0]["IG160411"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160511"].ToString() == null)
                            {
                                IG160511.Text = "";
                            }
                            else
                            {
                                IG160511.Text = ds.Tables[0].Rows[0]["IG160511"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160611"].ToString() == null)
                            {
                                IG160611.Text = "";
                            }
                            else
                            {
                                IG160611.Text = ds.Tables[0].Rows[0]["IG160611"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160711"].ToString() == null)
                            {
                                IG160711.Text = "";
                            }
                            else
                            {
                                IG160711.Text = ds.Tables[0].Rows[0]["IG160711"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160811"].ToString() == null)
                            {
                                IG160811.Text = "";
                            }
                            else
                            {
                                IG160811.Text = ds.Tables[0].Rows[0]["IG160811"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160911"].ToString() == null)
                            {
                                IG160911.Text = "";
                            }
                            else
                            {
                                IG160911.Text = ds.Tables[0].Rows[0]["IG160911"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601011"].ToString() == null)
                            {
                                IG1601011.Text = "";
                            }
                            else
                            {
                                IG1601011.Text = ds.Tables[0].Rows[0]["IG1601011"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601111"].ToString() == null)
                            {
                                IG1601111.Text = "";
                            }
                            else
                            {
                                IG1601111.Text = ds.Tables[0].Rows[0]["IG1601111"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601211"].ToString() == null)
                            {
                                IG1601211.Text = "";
                            }
                            else
                            {
                                IG1601211.Text = ds.Tables[0].Rows[0]["IG1601211"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160112"].ToString() == null)
                            {
                                IG160112.Text = "";
                            }
                            else
                            {
                                IG160112.Text = ds.Tables[0].Rows[0]["IG160112"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160212"].ToString() == null)
                            {
                                IG160212.Text = "";
                            }
                            else
                            {
                                IG160212.Text = ds.Tables[0].Rows[0]["IG160212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160312"].ToString() == null)
                            {
                                IG160312.Text = "";
                            }
                            else
                            {
                                IG160312.Text = ds.Tables[0].Rows[0]["IG160312"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160412"].ToString() == null)
                            {
                                IG160412.Text = "";
                            }
                            else
                            {
                                IG160412.Text = ds.Tables[0].Rows[0]["IG160412"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160512"].ToString() == null)
                            {
                                IG160512.Text = "";
                            }
                            else
                            {
                                IG160512.Text = ds.Tables[0].Rows[0]["IG160512"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160612"].ToString() == null)
                            {
                                IG160612.Text = "";
                            }
                            else
                            {
                                IG160612.Text = ds.Tables[0].Rows[0]["IG160612"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160712"].ToString() == null)
                            {
                                IG160712.Text = "";
                            }
                            else
                            {
                                IG160712.Text = ds.Tables[0].Rows[0]["IG160712"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160812"].ToString() == null)
                            {
                                IG160812.Text = "";
                            }
                            else
                            {
                                IG160812.Text = ds.Tables[0].Rows[0]["IG160812"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160912"].ToString() == null)
                            {
                                IG160912.Text = "";
                            }
                            else
                            {
                                IG160912.Text = ds.Tables[0].Rows[0]["IG160912"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601012"].ToString() == null)
                            {
                                IG1601012.Text = "";
                            }
                            else
                            {
                                IG1601012.Text = ds.Tables[0].Rows[0]["IG1601012"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601112"].ToString() == null)
                            {
                                IG1601112.Text = "";
                            }
                            else
                            {
                                IG1601112.Text = ds.Tables[0].Rows[0]["IG1601112"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601212"].ToString() == null)
                            {
                                IG1601212.Text = "";
                            }
                            else
                            {
                                IG1601212.Text = ds.Tables[0].Rows[0]["IG1601212"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160113"].ToString() == null)
                            {
                                IG160113.Text = "";
                            }
                            else
                            {
                                IG160113.Text = ds.Tables[0].Rows[0]["IG160113"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160213"].ToString() == null)
                            {
                                IG160213.Text = "";
                            }
                            else
                            {
                                IG160213.Text = ds.Tables[0].Rows[0]["IG160213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160313"].ToString() == null)
                            {
                                IG160313.Text = "";
                            }
                            else
                            {
                                IG160313.Text = ds.Tables[0].Rows[0]["IG160313"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160413"].ToString() == null)
                            {
                                IG160413.Text = "";
                            }
                            else
                            {
                                IG160413.Text = ds.Tables[0].Rows[0]["IG160413"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160513"].ToString() == null)
                            {
                                IG160513.Text = "";
                            }
                            else
                            {
                                IG160513.Text = ds.Tables[0].Rows[0]["IG160513"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160613"].ToString() == null)
                            {
                                IG160613.Text = "";
                            }
                            else
                            {
                                IG160613.Text = ds.Tables[0].Rows[0]["IG160613"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160713"].ToString() == null)
                            {
                                IG160713.Text = "";
                            }
                            else
                            {
                                IG160713.Text = ds.Tables[0].Rows[0]["IG160713"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160813"].ToString() == null)
                            {
                                IG160813.Text = "";
                            }
                            else
                            {
                                IG160813.Text = ds.Tables[0].Rows[0]["IG160813"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160913"].ToString() == null)
                            {
                                IG160913.Text = "";
                            }
                            else
                            {
                                IG160913.Text = ds.Tables[0].Rows[0]["IG160913"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601013"].ToString() == null)
                            {
                                IG1601013.Text = "";
                            }
                            else
                            {
                                IG1601013.Text = ds.Tables[0].Rows[0]["IG1601013"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601113"].ToString() == null)
                            {
                                IG1601113.Text = "";
                            }
                            else
                            {
                                IG1601113.Text = ds.Tables[0].Rows[0]["IG1601113"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601213"].ToString() == null)
                            {
                                IG1601213.Text = "";
                            }
                            else
                            {
                                IG1601213.Text = ds.Tables[0].Rows[0]["IG1601213"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160114"].ToString() == null)
                            {
                                IG160114.Text = "";
                            }
                            else
                            {
                                IG160114.Text = ds.Tables[0].Rows[0]["IG160114"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160214"].ToString() == null)
                            {
                                IG160214.Text = "";
                            }
                            else
                            {
                                IG160214.Text = ds.Tables[0].Rows[0]["IG160214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160314"].ToString() == null)
                            {
                                IG160314.Text = "";
                            }
                            else
                            {
                                IG160314.Text = ds.Tables[0].Rows[0]["IG160314"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160414"].ToString() == null)
                            {
                                IG160414.Text = "";
                            }
                            else
                            {
                                IG160414.Text = ds.Tables[0].Rows[0]["IG160414"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160514"].ToString() == null)
                            {
                                IG160514.Text = "";
                            }
                            else
                            {
                                IG160514.Text = ds.Tables[0].Rows[0]["IG160514"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160614"].ToString() == null)
                            {
                                IG160614.Text = "";
                            }
                            else
                            {
                                IG160614.Text = ds.Tables[0].Rows[0]["IG160614"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160714"].ToString() == null)
                            {
                                IG160714.Text = "";
                            }
                            else
                            {
                                IG160714.Text = ds.Tables[0].Rows[0]["IG160714"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160814"].ToString() == null)
                            {
                                IG160814.Text = "";
                            }
                            else
                            {
                                IG160814.Text = ds.Tables[0].Rows[0]["IG160814"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160914"].ToString() == null)
                            {
                                IG160914.Text = "";
                            }
                            else
                            {
                                IG160914.Text = ds.Tables[0].Rows[0]["IG160914"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601014"].ToString() == null)
                            {
                                IG1601014.Text = "";
                            }
                            else
                            {
                                IG1601014.Text = ds.Tables[0].Rows[0]["IG1601014"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601114"].ToString() == null)
                            {
                                IG1601114.Text = "";
                            }
                            else
                            {
                                IG1601114.Text = ds.Tables[0].Rows[0]["IG1601114"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601214"].ToString() == null)
                            {
                                IG1601214.Text = "";
                            }
                            else
                            {
                                IG1601214.Text = ds.Tables[0].Rows[0]["IG1601214"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160115"].ToString() == null)
                            {
                                IG160115.Text = "";
                            }
                            else
                            {
                                IG160115.Text = ds.Tables[0].Rows[0]["IG160115"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160215"].ToString() == null)
                            {
                                IG160215.Text = "";
                            }
                            else
                            {
                                IG160215.Text = ds.Tables[0].Rows[0]["IG160215"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160315"].ToString() == null)
                            {
                                IG160315.Text = "";
                            }
                            else
                            {
                                IG160315.Text = ds.Tables[0].Rows[0]["IG160315"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160415"].ToString() == null)
                            {
                                IG160415.Text = "";
                            }
                            else
                            {
                                IG160415.Text = ds.Tables[0].Rows[0]["IG160415"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160515"].ToString() == null)
                            {
                                IG160515.Text = "";
                            }
                            else
                            {
                                IG160515.Text = ds.Tables[0].Rows[0]["IG160515"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160615"].ToString() == null)
                            {
                                IG160615.Text = "";
                            }
                            else
                            {
                                IG160615.Text = ds.Tables[0].Rows[0]["IG160615"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160715"].ToString() == null)
                            {
                                IG160715.Text = "";
                            }
                            else
                            {
                                IG160715.Text = ds.Tables[0].Rows[0]["IG160715"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160815"].ToString() == null)
                            {
                                IG160815.Text = "";
                            }
                            else
                            {
                                IG160815.Text = ds.Tables[0].Rows[0]["IG160815"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG160915"].ToString() == null)
                            {
                                IG160915.Text = "";
                            }
                            else
                            {
                                IG160915.Text = ds.Tables[0].Rows[0]["IG160915"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601015"].ToString() == null)
                            {
                                IG1601015.Text = "";
                            }
                            else
                            {
                                IG1601015.Text = ds.Tables[0].Rows[0]["IG1601015"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601115"].ToString() == null)
                            {
                                IG1601115.Text = "";
                            }
                            else
                            {
                                IG1601115.Text = ds.Tables[0].Rows[0]["IG1601115"].ToString();
                            }

                            if (ds.Tables[0].Rows[0]["IG1601215"].ToString() == null)
                            {
                                IG1601215.Text = "";
                            }
                            else
                            {
                                IG1601215.Text = ds.Tables[0].Rows[0]["IG1601215"].ToString();
                            }

                            IsSearch = false;
                        }
                        else
                        {
                            IsSearch = false;
                        }
                    }
                    else
                    {
                        IsSearch = false;
                    }
                }
                else
                {
                    IsSearch = false;
                }
            }

            catch (Exception ex)
            {
                MessageBox.Show("Form No is numeric field ", "Data Type Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                ds = null;
                obj_op = null;
            }
        }

        private void IsValidate(string value1, Control txtbox1, Control txtbox2, Control txtbox3)
        {
            if (value1 == "")
            {
                //txtbox1.Focus();	 
            }
            else
            {
                if (value1 != "1" && value1 != "2")
                {
                    MessageBox.Show("Invalid digit entered. Please enter any digit 1-2", "Invalid Digit", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    txtbox1.Focus();
                }
                else
                {
                    if (value1 == "1")
                    {
                        txtbox2.Enabled = false;
                        txtbox3.Focus();
                    }
                    else
                    {
                        txtbox2.Enabled = true;
                        txtbox2.Focus();
                    }
                }
            }

            txtbox1 = null;
            txtbox2 = null;
            txtbox3 = null;
        }

        private void IsValidate(string value1, Control txtbox1, Control txtbox2)
        {
            if (value1 == "")
            {
                //txtbox1.Focus();	 
            }
            else
            {
                if (value1 != "1" && value1 != "2")
                {
                    MessageBox.Show("Invalid digit entered. Please enter any digit 1-2", "Invalid Digit", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    txtbox1.Focus();
                }
                else
                {

                }
            }

            txtbox1 = null;
            txtbox2 = null;
        }

        private bool IsRecordExists(string fieldValue, string id)
        {
            bool IsExists = false;
            CDBOperations obj_op = null;

            try
            {
                string[] fldname = { "FORM_ID", "fldvalue" };
                string[] fldvalue = { fieldValue.ToString(), id.ToString() };

                obj_op = new CDBOperations();
                DataSet ds = obj_op.ExecuteNonQuery(fldname, fldvalue, "sp_GetRecords");

                if (ds != null)
                {
                    if (ds.Tables.Count > 0)
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            IsExists = true;
                        }
                    }
                }
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }

            return IsExists;
        }



        private bool DeleteForm1(string spName, string id)
        {
            bool IsSuccess = false;

            CDBOperations obj_op = null;

            try
            {
                if (FORM_ID.Text != "")
                {
                    obj_op = new CDBOperations();
                    DataSet ds = obj_op.DeleteForm1(FORM_ID.Text, spName, id, "");
                    IsSuccess = true;
                }
                else
                {
                    MessageBox.Show("Form No is missing", "Missing Form No", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    FORM_ID.Focus();
                }
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }

            return IsSuccess;
        }

        private void EnableDisableForms(bool IsEnable)
        {
            if (IsEnable == true)
            {
                CVariables.EnableDisableEnrollment.Visible = true;
                CVariables.EnableDisableFollowup.Visible = true;
                CVariables.EnableDisableLabForm.Visible = true;
                CVariables.EnableDisableRandomisation.Visible = true;
                CVariables.EnableDisableReconfirmEligibility.Visible = true;
                CVariables.EnableDisableArms.Visible = true;
            }
            else
            {
                CVariables.EnableDisableEnrollment.Visible = false;
                CVariables.EnableDisableFollowup.Visible = false;
                CVariables.EnableDisableLabForm.Visible = false;
                CVariables.EnableDisableRandomisation.Visible = false;
                CVariables.EnableDisableReconfirmEligibility.Visible = false;
                CVariables.EnableDisableArms.Visible = false;
            }
        }

        private void cmdCancel_Click(object sender, EventArgs e)
        {
            DialogResult = MessageBox.Show("Do you want to cancel this entry ?", "Cancel Entry", MessageBoxButtons.YesNo, MessageBoxIcon.Question);

            if (DialogResult == System.Windows.Forms.DialogResult.Yes)
            {
                this.Close();
            }
        }



        private void cmdDelete_Click(object sender, EventArgs e)
        {
            DialogResult = MessageBox.Show("Do you want to delete this entry ?", "Delete Entry", MessageBoxButtons.YesNo, MessageBoxIcon.Question);

            if (DialogResult == System.Windows.Forms.DialogResult.Yes)
            {
                if (CVariables.IsUserFirstOrSecond == "User1")
                {
                    DeleteForm1("sp_GetRecords", "4");
                    this.Close();
                }
                else if (CVariables.IsUserFirstOrSecond == "User2")
                {
                    DeleteForm1("sp_GetRecords", "6");
                    this.Close();
                }
            }
        }

        private void ClearFields()
        {
            IA01.Text = "";
            IA02.Text = "";
            IA03.Text = "";
            IA04.Text = "";
            IA05.Text = "";
            IB01.Text = "";
            IB02.Text = "";
            IB03.Text = "";
            IB04.Text = "";
            IB04a.Text = "";
            IB05.Text = "";
            IB06.Text = "";
            IB07.Text = "";
            IB08.Text = "";
            IB0901.Text = "";
            IB0902.Text = "";
            IB0903.Text = "";
            IB0996.Text = "";
            IB010.Text = "";
            IB011.Text = "";
            IC01.Text = "";
            IC02.Text = "";
            IC03.Text = "";
            IC04.Text = "";
            IC05.Text = "";
            chkBaby1.Text = "";
            IC0601.Text = "";
            IC0701.Text = "";
            IC0801.Text = "";
            IC0901.Text = "";
            IC01001.Text = "";
            IC01101.Text = "";
            chkBaby2.Text = "";
            IC0602.Text = "";
            IC0702.Text = "";
            IC0802.Text = "";
            IC0902.Text = "";
            IC01002.Text = "";
            IC01102.Text = "";
            chkBaby3.Text = "";
            IC0603.Text = "";
            IC0703.Text = "";
            IC0803.Text = "";
            IC0903.Text = "";
            IC01003.Text = "";
            IC01103.Text = "";
            chkBaby4.Text = "";
            IC0604.Text = "";
            IC0704.Text = "";
            IC0804.Text = "";
            IC0904.Text = "";
            IC01004.Text = "";
            IC01104.Text = "";
            ID01.Text = "";
            ID02.Text = "";
            ID03.Text = "";
            ID04.Text = "";
            IE01.Text = "";
            IE02.Text = "";
            IE03.Text = "";
            IE04.Text = "";
            chkHHMem1.Text = "";
            IE0701.Text = "";
            chkHHMem2.Text = "";
            IE0702.Text = "";
            chkHHMem3.Text = "";
            IE0703.Text = "";
            chkHHMem4.Text = "";
            IE0704.Text = "";
            IE0801.Text = "";
            IE0901.Text = "";
            IE0802.Text = "";
            IE0902.Text = "";
            IE0803.Text = "";
            IE0903.Text = "";
            IE0804.Text = "";
            IE0904.Text = "";
            IF01.Text = "";
            IF02.Text = "";
            IF03.Text = "";
            IF04.Text = "";
            chkPW1.Text = "";
            IF0601.Text = "";
            chkPW2.Text = "";
            IF0602.Text = "";
            chkPW3.Text = "";
            IF0603.Text = "";
            chkPW4.Text = "";
            IF0604.Text = "";
            IG01.Text = "";
            IG02.Text = "";
            IG0301.Text = "";
            IG0302.Text = "";
            IG0303.Text = "";
            IG0304.Text = "";
            IG0305.Text = "";
            IG0306.Text = "";
            IG0307.Text = "";
            IG0308.Text = "";
            IG0309.Text = "";
            IG03010.Text = "";
            chkMember1.Text = "";
            IG0401.Text = "";
            IG0501.Text = "";
            IG060101.Text = "";
            IG060201.Text = "";
            IG060301.Text = "";
            IG060401.Text = "";
            IG060501.Text = "";
            IG070101.Text = "";
            IG070201.Text = "";
            IG070301.Text = "";
            IG070401.Text = "";
            chkMember2.Text = "";
            IG0402.Text = "";
            IG0502.Text = "";
            IG060102.Text = "";
            IG060202.Text = "";
            IG060302.Text = "";
            IG060402.Text = "";
            IG060502.Text = "";
            IG070102.Text = "";
            IG070202.Text = "";
            IG070302.Text = "";
            IG070402.Text = "";
            chkMember3.Text = "";
            IG0403.Text = "";
            IG0503.Text = "";
            IG060103.Text = "";
            IG060203.Text = "";
            IG060303.Text = "";
            IG060403.Text = "";
            IG060503.Text = "";
            IG070103.Text = "";
            IG070203.Text = "";
            IG070303.Text = "";
            IG070403.Text = "";
            chkMember4.Text = "";
            IG0404.Text = "";
            IG0504.Text = "";
            IG060104.Text = "";
            IG060204.Text = "";
            IG060304.Text = "";
            IG060404.Text = "";
            IG060504.Text = "";
            IG070104.Text = "";
            IG070204.Text = "";
            IG070304.Text = "";
            IG070404.Text = "";
            chkMember5.Text = "";
            IG0405.Text = "";
            IG0505.Text = "";
            IG060105.Text = "";
            IG060205.Text = "";
            IG060305.Text = "";
            IG060405.Text = "";
            IG060505.Text = "";
            IG070105.Text = "";
            IG070205.Text = "";
            IG070305.Text = "";
            IG070405.Text = "";
            IG070501.Text = "";
            IG070601.Text = "";
            IG070701.Text = "";
            IG070801.Text = "";
            IG070901.Text = "";
            IG0701001.Text = "";
            IG0701101.Text = "";
            IG0701201.Text = "";
            IG0701301.Text = "";
            IG0801.Text = "";
            IG0901.Text = "";
            IG01001.Text = "";
            IG01101.Text = "";
            IG01201.Text = "";
            IG01301.Text = "";
            IG01401.Text = "";
            IG01501.Text = "";
            IG160101.Text = "";
            IG160201.Text = "";
            IG160301.Text = "";
            IG160401.Text = "";
            IG160501.Text = "";
            IG160601.Text = "";
            IG160701.Text = "";
            IG160801.Text = "";
            IG160901.Text = "";
            IG1601001.Text = "";
            IG1601101.Text = "";
            IG1601201.Text = "";
            IG070502.Text = "";
            IG070602.Text = "";
            IG070702.Text = "";
            IG070802.Text = "";
            IG070902.Text = "";
            IG0701002.Text = "";
            IG0701102.Text = "";
            IG0701202.Text = "";
            IG0701302.Text = "";
            IG0802.Text = "";
            IG0902.Text = "";
            IG01002.Text = "";
            IG01102.Text = "";
            IG01202.Text = "";
            IG01302.Text = "";
            IG01402.Text = "";
            IG01502.Text = "";
            IG160102.Text = "";
            IG160202.Text = "";
            IG160302.Text = "";
            IG160402.Text = "";
            IG160502.Text = "";
            IG160602.Text = "";
            IG160702.Text = "";
            IG160802.Text = "";
            IG160902.Text = "";
            IG1601002.Text = "";
            IG1601102.Text = "";
            IG1601202.Text = "";
            IG070503.Text = "";
            IG070603.Text = "";
            IG070703.Text = "";
            IG070803.Text = "";
            IG070903.Text = "";
            IG0701003.Text = "";
            IG0701103.Text = "";
            IG0701203.Text = "";
            IG0701303.Text = "";
            IG0803.Text = "";
            IG0903.Text = "";
            IG01003.Text = "";
            IG01103.Text = "";
            IG01203.Text = "";
            IG01303.Text = "";
            IG01403.Text = "";
            IG01503.Text = "";
            IG160103.Text = "";
            IG160203.Text = "";
            IG160303.Text = "";
            IG160403.Text = "";
            IG160503.Text = "";
            IG160603.Text = "";
            IG160703.Text = "";
            IG160803.Text = "";
            IG160903.Text = "";
            IG1601003.Text = "";
            IG1601103.Text = "";
            IG1601203.Text = "";
            IG070504.Text = "";
            IG070604.Text = "";
            IG070704.Text = "";
            IG070804.Text = "";
            IG070904.Text = "";
            IG0701004.Text = "";
            IG0701104.Text = "";
            IG0701204.Text = "";
            IG0701304.Text = "";
            IG0804.Text = "";
            IG0904.Text = "";
            IG01004.Text = "";
            IG01104.Text = "";
            IG01204.Text = "";
            IG01304.Text = "";
            IG01404.Text = "";
            IG01504.Text = "";
            IG160104.Text = "";
            IG160204.Text = "";
            IG160304.Text = "";
            IG160404.Text = "";
            IG160504.Text = "";
            IG160604.Text = "";
            IG160704.Text = "";
            IG160804.Text = "";
            IG160904.Text = "";
            IG1601004.Text = "";
            IG1601104.Text = "";
            IG1601204.Text = "";
            IG070505.Text = "";
            IG070605.Text = "";
            IG070705.Text = "";
            IG070805.Text = "";
            IG070905.Text = "";
            IG0701005.Text = "";
            IG0701105.Text = "";
            IG0701205.Text = "";
            IG0701305.Text = "";
            IG0805.Text = "";
            IG0905.Text = "";
            IG01005.Text = "";
            IG01105.Text = "";
            IG01205.Text = "";
            IG01305.Text = "";
            IG01405.Text = "";
            IG01505.Text = "";
            IG160105.Text = "";
            IG160205.Text = "";
            IG160305.Text = "";
            IG160405.Text = "";
            IG160505.Text = "";
            IG160605.Text = "";
            IG160705.Text = "";
            IG160805.Text = "";
            IG160905.Text = "";
            IG1601005.Text = "";
            IG1601105.Text = "";
            IG1601205.Text = "";

            //QCFUP01.Text = "";

            QCFUP02.Text = "";
            QCFUP03.Text = "";
            QCFUP04.Text = "";
            QCFUP05.Text = "";
            QCFUP06.Text = "";
            QCFUP07.Text = "";
            chkBaby5.Text = "";
            IC0605.Text = "";
            IC0705.Text = "";
            IC0805.Text = "";
            IC0905.Text = "";
            IC01005.Text = "";
            IC01105.Text = "";
            chkBaby6.Text = "";
            IC0606.Text = "";
            IC0706.Text = "";
            IC0806.Text = "";
            IC0906.Text = "";
            IC01006.Text = "";
            IC01106.Text = "";
            chkBaby7.Text = "";
            IC0607.Text = "";
            IC0707.Text = "";
            IC0807.Text = "";
            IC0907.Text = "";
            IC01007.Text = "";
            IC01107.Text = "";
            chkBaby8.Text = "";
            IC0608.Text = "";
            IC0708.Text = "";
            IC0808.Text = "";
            IC0908.Text = "";
            IC01008.Text = "";
            IC01108.Text = "";
            chkBaby9.Text = "";
            IC0609.Text = "";
            IC0709.Text = "";
            IC0809.Text = "";
            IC0909.Text = "";
            IC01009.Text = "";
            IC01109.Text = "";
            chkBaby10.Text = "";
            IC06010.Text = "";
            IC07010.Text = "";
            IC08010.Text = "";
            IC09010.Text = "";
            IC01010.Text = "";
            IC01110.Text = "";
            chkBaby11.Text = "";
            IC06011.Text = "";
            IC07011.Text = "";
            IC08011.Text = "";
            IC09011.Text = "";
            IC01011.Text = "";
            IC01111.Text = "";
            chkMember6.Text = "";
            IG0406.Text = "";
            IG0506.Text = "";
            IG060106.Text = "";
            IG060206.Text = "";
            IG060306.Text = "";
            IG060406.Text = "";
            IG060506.Text = "";
            IG070106.Text = "";
            IG070206.Text = "";
            IG070306.Text = "";
            IG070406.Text = "";
            IG070506.Text = "";
            IG070606.Text = "";
            IG070706.Text = "";
            IG070806.Text = "";
            IG070906.Text = "";
            IG0701006.Text = "";
            IG0701106.Text = "";
            IG0701206.Text = "";
            IG0701306.Text = "";
            IG0806.Text = "";
            IG0906.Text = "";
            IG01006.Text = "";
            chkMember7.Text = "";
            IG0407.Text = "";
            IG0507.Text = "";
            IG060107.Text = "";
            IG060207.Text = "";
            IG060307.Text = "";
            IG060407.Text = "";
            IG060507.Text = "";
            IG070107.Text = "";
            IG070207.Text = "";
            IG070307.Text = "";
            IG070407.Text = "";
            IG070507.Text = "";
            IG070607.Text = "";
            IG070707.Text = "";
            IG070807.Text = "";
            IG070907.Text = "";
            IG0701007.Text = "";
            IG0701107.Text = "";
            IG0701207.Text = "";
            IG0701307.Text = "";
            IG0807.Text = "";
            IG0907.Text = "";
            IG01007.Text = "";
            chkMember8.Text = "";
            IG0408.Text = "";
            IG0508.Text = "";
            IG060108.Text = "";
            IG060208.Text = "";
            IG060308.Text = "";
            IG060408.Text = "";
            IG060508.Text = "";
            IG070108.Text = "";
            IG070208.Text = "";
            IG070308.Text = "";
            IG070408.Text = "";
            IG070508.Text = "";
            IG070608.Text = "";
            IG070708.Text = "";
            IG070808.Text = "";
            IG070908.Text = "";
            IG0701008.Text = "";
            IG0701108.Text = "";
            IG0701208.Text = "";
            IG0701308.Text = "";
            IG0808.Text = "";
            IG0908.Text = "";
            IG01008.Text = "";
            chkMember9.Text = "";
            IG0409.Text = "";
            IG0509.Text = "";
            IG060109.Text = "";
            IG060209.Text = "";
            IG060309.Text = "";
            IG060409.Text = "";
            IG060509.Text = "";
            IG070109.Text = "";
            IG070209.Text = "";
            IG070309.Text = "";
            IG070409.Text = "";
            IG070509.Text = "";
            IG070609.Text = "";
            IG070709.Text = "";
            IG070809.Text = "";
            IG070909.Text = "";
            IG0701009.Text = "";
            IG0701109.Text = "";
            IG0701209.Text = "";
            IG0701309.Text = "";
            IG0809.Text = "";
            IG0909.Text = "";
            IG01009.Text = "";
            chkMember10.Text = "";
            IG0410.Text = "";
            IG0510.Text = "";
            IG060110.Text = "";
            IG060210.Text = "";
            IG060310.Text = "";
            IG060410.Text = "";
            IG060510.Text = "";
            IG070110.Text = "";
            IG070210.Text = "";
            IG070310.Text = "";
            IG070410.Text = "";
            IG070510.Text = "";
            IG070610.Text = "";
            IG070710.Text = "";
            IG070810.Text = "";
            IG070910.Text = "";
            IG0701010.Text = "";
            IG0701110.Text = "";
            IG0701210.Text = "";
            IG0701310.Text = "";
            IG0810.Text = "";
            IG0910.Text = "";
            IG01010.Text = "";
            IG01106.Text = "";
            IG01206.Text = "";
            IG01306.Text = "";
            IG01406.Text = "";
            IG01506.Text = "";
            IG01107.Text = "";
            IG01207.Text = "";
            IG01307.Text = "";
            IG01407.Text = "";
            IG01507.Text = "";
            IG01108.Text = "";
            IG01208.Text = "";
            IG01308.Text = "";
            IG01408.Text = "";
            IG01508.Text = "";
            IG01109.Text = "";
            IG01209.Text = "";
            IG01309.Text = "";
            IG01409.Text = "";
            IG01509.Text = "";
            IG01110.Text = "";
            IG01210.Text = "";
            IG01310.Text = "";
            IG01410.Text = "";
            IG01510.Text = "";
            IG160106.Text = "";
            IG160206.Text = "";
            IG160306.Text = "";
            IG160406.Text = "";
            IG160506.Text = "";
            IG160606.Text = "";
            IG160706.Text = "";
            IG160806.Text = "";
            IG160906.Text = "";
            IG1601006.Text = "";
            IG1601106.Text = "";
            IG1601206.Text = "";
            IG160107.Text = "";
            IG160207.Text = "";
            IG160307.Text = "";
            IG160407.Text = "";
            IG160507.Text = "";
            IG160607.Text = "";
            IG160707.Text = "";
            IG160807.Text = "";
            IG160907.Text = "";
            IG1601007.Text = "";
            IG1601107.Text = "";
            IG1601207.Text = "";
            IG160108.Text = "";
            IG160208.Text = "";
            IG160308.Text = "";
            IG160408.Text = "";
            IG160508.Text = "";
            IG160608.Text = "";
            IG160708.Text = "";
            IG160808.Text = "";
            IG160908.Text = "";
            IG1601008.Text = "";
            IG1601108.Text = "";
            IG1601208.Text = "";
            IG160109.Text = "";
            IG160209.Text = "";
            IG160309.Text = "";
            IG160409.Text = "";
            IG160509.Text = "";
            IG160609.Text = "";
            IG160709.Text = "";
            IG160809.Text = "";
            IG160909.Text = "";
            IG1601009.Text = "";
            IG1601109.Text = "";
            IG1601209.Text = "";
            IG160110.Text = "";
            IG160210.Text = "";
            IG160310.Text = "";
            IG160410.Text = "";
            IG160510.Text = "";
            IG160610.Text = "";
            IG160710.Text = "";
            IG160810.Text = "";
            IG160910.Text = "";
            IG1601010.Text = "";
            IG1601110.Text = "";
            IG1601210.Text = "";
            chkMember11.Text = "";
            IG0411.Text = "";
            IG0511.Text = "";
            IG060111.Text = "";
            IG060211.Text = "";
            IG060311.Text = "";
            IG060411.Text = "";
            IG060511.Text = "";
            chkMember12.Text = "";
            IG0412.Text = "";
            IG0512.Text = "";
            IG060112.Text = "";
            IG060212.Text = "";
            IG060312.Text = "";
            IG060412.Text = "";
            IG060512.Text = "";
            chkMember13.Text = "";
            IG0413.Text = "";
            IG0513.Text = "";
            IG060113.Text = "";
            IG060213.Text = "";
            IG060313.Text = "";
            IG060413.Text = "";
            IG060513.Text = "";
            chkMember14.Text = "";
            IG0414.Text = "";
            IG0514.Text = "";
            IG060114.Text = "";
            IG060214.Text = "";
            IG060314.Text = "";
            IG060414.Text = "";
            IG060514.Text = "";
            chkMember15.Text = "";
            IG0415.Text = "";
            IG0515.Text = "";
            IG060115.Text = "";
            IG060215.Text = "";
            IG060315.Text = "";
            IG060415.Text = "";
            IG060515.Text = "";
            IG070111.Text = "";
            IG070211.Text = "";
            IG070311.Text = "";
            IG070411.Text = "";
            IG070511.Text = "";
            IG070611.Text = "";
            IG070711.Text = "";
            IG070811.Text = "";
            IG070911.Text = "";
            IG0701011.Text = "";
            IG0701111.Text = "";
            IG0701211.Text = "";
            IG0701311.Text = "";
            IG0811.Text = "";
            IG0911.Text = "";
            IG01011.Text = "";
            IG01111.Text = "";
            IG01211.Text = "";
            IG01311.Text = "";
            IG01411.Text = "";
            IG01511.Text = "";
            IG070112.Text = "";
            IG070212.Text = "";
            IG070312.Text = "";
            IG070412.Text = "";
            IG070512.Text = "";
            IG070612.Text = "";
            IG070712.Text = "";
            IG070812.Text = "";
            IG070912.Text = "";
            IG0701012.Text = "";
            IG0701112.Text = "";
            IG0701212.Text = "";
            IG0701312.Text = "";
            IG0812.Text = "";
            IG0912.Text = "";
            IG01012.Text = "";
            IG01112.Text = "";
            IG01212.Text = "";
            IG01312.Text = "";
            IG01412.Text = "";
            IG01512.Text = "";
            IG070113.Text = "";
            IG070213.Text = "";
            IG070313.Text = "";
            IG070413.Text = "";
            IG070513.Text = "";
            IG070613.Text = "";
            IG070713.Text = "";
            IG070813.Text = "";
            IG070913.Text = "";
            IG0701013.Text = "";
            IG0701113.Text = "";
            IG0701213.Text = "";
            IG0701313.Text = "";
            IG0813.Text = "";
            IG0913.Text = "";
            IG01013.Text = "";
            IG01113.Text = "";
            IG01213.Text = "";
            IG01313.Text = "";
            IG01413.Text = "";
            IG01513.Text = "";
            IG070114.Text = "";
            IG070214.Text = "";
            IG070314.Text = "";
            IG070414.Text = "";
            IG070514.Text = "";
            IG070614.Text = "";
            IG070714.Text = "";
            IG070814.Text = "";
            IG070914.Text = "";
            IG0701014.Text = "";
            IG0701114.Text = "";
            IG0701214.Text = "";
            IG0701314.Text = "";
            IG0814.Text = "";
            IG0914.Text = "";
            IG01014.Text = "";
            IG01114.Text = "";
            IG01214.Text = "";
            IG01314.Text = "";
            IG01414.Text = "";
            IG01514.Text = "";
            IG070115.Text = "";
            IG070215.Text = "";
            IG070315.Text = "";
            IG070415.Text = "";
            IG070515.Text = "";
            IG070615.Text = "";
            IG070715.Text = "";
            IG070815.Text = "";
            IG070915.Text = "";
            IG0701015.Text = "";
            IG0701115.Text = "";
            IG0701215.Text = "";
            IG0701315.Text = "";
            IG0815.Text = "";
            IG0915.Text = "";
            IG01015.Text = "";
            IG01115.Text = "";
            IG01215.Text = "";
            IG01315.Text = "";
            IG01415.Text = "";
            IG01515.Text = "";
            IG160111.Text = "";
            IG160211.Text = "";
            IG160311.Text = "";
            IG160411.Text = "";
            IG160511.Text = "";
            IG160611.Text = "";
            IG160711.Text = "";
            IG160811.Text = "";
            IG160911.Text = "";
            IG1601011.Text = "";
            IG1601111.Text = "";
            IG1601211.Text = "";
            IG160112.Text = "";
            IG160212.Text = "";
            IG160312.Text = "";
            IG160412.Text = "";
            IG160512.Text = "";
            IG160612.Text = "";
            IG160712.Text = "";
            IG160812.Text = "";
            IG160912.Text = "";
            IG1601012.Text = "";
            IG1601112.Text = "";
            IG1601212.Text = "";
            IG160113.Text = "";
            IG160213.Text = "";
            IG160313.Text = "";
            IG160413.Text = "";
            IG160513.Text = "";
            IG160613.Text = "";
            IG160713.Text = "";
            IG160813.Text = "";
            IG160913.Text = "";
            IG1601013.Text = "";
            IG1601113.Text = "";
            IG1601213.Text = "";
            IG160114.Text = "";
            IG160214.Text = "";
            IG160314.Text = "";
            IG160414.Text = "";
            IG160514.Text = "";
            IG160614.Text = "";
            IG160714.Text = "";
            IG160814.Text = "";
            IG160914.Text = "";
            IG1601014.Text = "";
            IG1601114.Text = "";
            IG1601214.Text = "";
            IG160115.Text = "";
            IG160215.Text = "";
            IG160315.Text = "";
            IG160415.Text = "";
            IG160515.Text = "";
            IG160615.Text = "";
            IG160715.Text = "";
            IG160815.Text = "";
            IG160915.Text = "";
            IG1601015.Text = "";
            IG1601115.Text = "";
            IG1601215.Text = "";
        }

        private void InsertRecord(string tblname)
        {
            string[] my_dt;


            CDBOperations obj_op = null;
            string form_id = null;

            try
            {
                my_dt = DateTime.Now.Date.ToString().Split('/');

                DateTime EntryDate = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                EntryDate = Convert.ToDateTime(DateTime.Now.Date);


                DateTime dt_IB04 = new DateTime();

                if (IB04.Text != "  /  /")
                {
                    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                    dt_IB04 = Convert.ToDateTime(IB04.Text);
                }



                DateTime dt_QCFUP05 = new DateTime();

                if (QCFUP05.Text != "  /  /")
                {
                    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                    dt_QCFUP05 = Convert.ToDateTime(QCFUP05.Text);
                }



                if (maskedTextBox1.Text == "")
                {
                    form_id = FORM_ID.Text;
                }
                else
                {
                    form_id = maskedTextBox1.Text;
                }

                string[] fldname = { };
                string[] fldvalue = { };

                //string[] fldname = { "IA01", "IA02", "IA03", "IA04", "IA05", "IB01", "IB02", "IB03", "IB04", "IB05", "IB06", "IB07", "IB08", "IB09", "IB0901", "IB0902", "IB0903", "IB0996", "IC01", "IC02", "IC03", "IC04", "IC05", "ckkBaby1", "IC0601", "IC0701", "IC0801", "IC0901", "IC01001", "IC01101", "ckkBaby2", "IC0602", "IC0702", "IC0802", "IC0902", "IC01002", "IC01102", "ckkBaby3", "IC0603", "IC0703", "IC0803", "IC0903", "IC01003", "IC01103", "ckkBaby4", "IC0604", "IC0704", "IC0804", "IC0904", "IC01004", "IC01104", "ID01", "ID02", "ID03", "ID04", "IE01", "IE02", "IE03", "IE04", "chkHHMem1", "IE0701", "chkHHMem2", "IE0702", "chkHHMem3", "IE0703", "chkHHMem4", "IE0704", "IE0801", "IE0901", "IE0802", "IE0902", "IE0803", "IE0903", "IE0804", "IE0904", "IF01", "IF02", "IF03", "IF04", "chkPW1", "IF0601", "chkPW2", "IF0602", "chkPW3", "IF0603", "chkPW4", "IF0604", "IG01", "IG02", "IG0301", "IG0302", "IG0303", "IG0304", "IG0305", "IG0306", "IG0307", "IG0308", "IG0309", "IG03010", "chkMember1", "IG0401", "IG0501", "IG060101", "IG060201", "IG060301", "IG060401", "IG060501", "IG070101", "IG070201", "IG070301", "IG070401", "chkMember2", "IG0402", "IG0502", "IG060102", "IG060202", "IG060302", "IG060402", "IG060502", "IG070102", "IG070202", "IG070302", "IG070402", "chkMember3", "IG0403", "IG0503", "IG060103", "IG060203", "IG060303", "IG060403", "IG060503", "IG070103", "IG070203", "IG070303", "IG070403", "chkMember4", "IG0404", "IG0504", "IG060104", "IG060204", "IG060304", "IG060404", "IG060504", "IG070104", "IG070204", "IG070304", "IG070404", "chkMember5", "IG0405", "IG0505", "IG060105", "IG060205", "IG060305", "IG060405", "IG060505", "IG070105", "IG070205", "IG070305", "IG070405", "IG070501", "IG070601", "IG070701", "IG070801", "IG070901", "IG0701001", "IG0701101", "IG0701201", "IG0701301", "IG0801", "IG0901", "IG01001", "IG01101", "IG01201", "IG01301", "IG01401", "IG01501", "IG160101", "IG160201", "IG160301", "IG160401", "IG160501", "IG070502", "IG070602", "IG070702", "IG070802", "IG070902", "IG0701002", "IG0701102", "IG0701202", "IG0701302", "IG0802", "IG0902", "IG01002", "IG01102", "IG01202", "IG01302", "IG01402", "IG01502", "IG160102", "IG160202", "IG160302", "IG160402", "IG160502", "IG070503", "IG070603", "IG070703", "IG070803", "IG070903", "IG0701003", "IG0701103", "IG0701203", "IG0701303", "IG0803", "IG0903", "IG01003", "IG01103", "IG01203", "IG01303", "IG01403", "IG01503", "IG160103", "IG160203", "IG160303", "IG160403", "IG160503", "IG070504", "IG070604", "IG070704", "IG070804", "IG070904", "IG0701004", "IG0701104", "IG0701204", "IG0701304", "IG0804", "IG0904", "IG01004", "IG01104", "IG01204", "IG01304", "IG01404", "IG01504", "IG160104", "IG160204", "IG160304", "IG160404", "IG160504", "IG070505", "IG070605", "IG070705", "IG070805", "IG070905", "IG0701005", "IG0701105", "IG0701205", "IG0701305", "IG0805", "IG0905", "IG01005", "IG01105", "IG01205", "IG01305", "IG01405", "IG01505", "IG160105", "IG160205", "IG160305", "IG160405", "IG160505", "IG160601", "IG160701", "IG160801", "IG160901", "IG1601001", "IG1601101", "IG1601201", "IG160602", "IG160702", "IG160802", "IG160902", "IG1601002", "IG1601102", "IG1601202", "IG160603", "IG160703", "IG160803", "IG160903", "IG1601003", "IG1601103", "IG1601203", "IG160604", "IG160704", "IG160804", "IG160904", "IG1601004", "IG1601104", "IG1601204", "IG160605", "IG160705", "IG160805", "IG160905", "IG1601005", "IG1601105", "IG1601205", "QCFUP01", "QCFUP02", "QCFUP03", "QCFUP04", "QCFUP05", "QCFUP06", "QCFUP07", "ckkBaby5", "IC0605", "IC0705", "IC0805", "IC0905", "IC01005", "IC01105", "ckkBaby6", "IC0606", "IC0706", "IC0806", "IC0906", "IC01006", "IC01106", "ckkBaby7", "IC0607", "IC0707", "IC0807", "IC0907", "IC01007", "IC01107", "ckkBaby8", "IC0608", "IC0708", "IC0808", "IC0908", "IC01008", "IC01108", "ckkBaby9", "IC0609", "IC0709", "IC0809", "IC0909", "IC01009", "IC01109", "ckkBaby10", "IC06010", "IC07010", "IC08010", "IC09010", "IC01010", "IC01110", "ckkBaby11", "IC06011", "IC07011", "IC08011", "IC09011", "IC01011", "IC01111", "chkMember6", "IG0406", "IG0506", "IG060106", "IG060206", "IG060306", "IG060406", "IG060506", "IG070106", "IG070206", "IG070306", "IG070406", "IG070506", "IG070606", "IG070706", "IG070806", "IG070906", "IG0701006", "IG0701106", "IG0701206", "IG0701306", "IG0806", "IG0906", "IG01006", "chkMember7", "IG0407", "IG0507", "IG060107", "IG060207", "IG060307", "IG060407", "IG060507", "IG070107", "IG070207", "IG070307", "IG070407", "IG070507", "IG070607", "IG070707", "IG070807", "IG070907", "IG0701007", "IG0701107", "IG0701207", "IG0701307", "IG0807", "IG0907", "IG01007", "chkMember8", "IG0408", "IG0508", "IG060108", "IG060208", "IG060308", "IG060408", "IG060508", "IG070108", "IG070208", "IG070308", "IG070408", "IG070508", "IG070608", "IG070708", "IG070808", "IG070908", "IG0701008", "IG0701108", "IG0701208", "IG0701308", "IG0808", "IG0908", "IG01008", "chkMember9", "IG0409", "IG0509", "IG060109", "IG060209", "IG060309", "IG060409", "IG060509", "IG070109", "IG070209", "IG070309", "IG070409", "IG070509", "IG070609", "IG070709", "IG070809", "IG070909", "IG0701009", "IG0701109", "IG0701209", "IG0701309", "IG0809", "IG0909", "IG01009", "chkMember10", "IG0410", "IG0510", "IG060110", "IG060210", "IG060310", "IG060410", "IG060510", "IG070110", "IG070210", "IG070310", "IG070410", "IG070510", "IG070610", "IG070710", "IG070810", "IG070910", "IG0701010", "IG0701110", "IG0701210", "IG0701310", "IG0810", "IG0910", "IG01010", "IG01106", "IG01206", "IG01306", "IG01406", "IG01506", "IG01107", "IG01207", "IG01307", "IG01407", "IG01507", "IG01108", "IG01208", "IG01308", "IG01408", "IG01508", "IG01109", "IG01209", "IG01309", "IG01409", "IG01509", "IG01110", "IG01210", "IG01310", "IG01410", "IG01510", "IG160106", "IG160206", "IG160306", "IG160406", "IG160506", "IG160606", "IG160706", "IG160806", "IG160906", "IG1601006", "IG1601106", "IG1601206", "IG160107", "IG160207", "IG160307", "IG160407", "IG160507", "IG160607", "IG160707", "IG160807", "IG160907", "IG1601007", "IG1601107", "IG1601207", "IG160108", "IG160208", "IG160308", "IG160408", "IG160508", "IG160608", "IG160708", "IG160808", "IG160908", "IG1601008", "IG1601108", "IG1601208", "IG160109", "IG160209", "IG160309", "IG160409", "IG160509", "IG160609", "IG160709", "IG160809", "IG160909", "IG1601009", "IG1601109", "IG1601209", "IG160110", "IG160210", "IG160310", "IG160410", "IG160510", "IG160610", "IG160710", "IG160810", "IG160910", "IG1601010", "IG1601110", "IG1601210", "chkMember11", "IG0411", "IG0511", "IG060111", "IG060211", "IG060311", "IG060411", "IG060511", "chkMember12", "IG0412", "IG0512", "IG060112", "IG060212", "IG060312", "IG060412", "IG060512", "chkMember13", "IG0413", "IG0513", "IG060113", "IG060213", "IG060313", "IG060413", "IG060513", "chkMember14", "IG0414", "IG0514", "IG060114", "IG060214", "IG060314", "IG060414", "IG060514", "chkMember15", "IG0415", "IG0515", "IG060115", "IG060215", "IG060315", "IG060415", "IG060515", "IG070111", "IG070211", "IG070311", "IG070411", "IG070511", "IG070611", "IG070711", "IG070811", "IG070911", "IG0701011", "IG0701111", "IG0701211", "IG0701311", "IG0811", "IG0911", "IG01011", "IG01111", "IG01211", "IG01311", "IG01411", "IG01511", "IG070112", "IG070212", "IG070312", "IG070412", "IG070512", "IG070612", "IG070712", "IG070812", "IG070912", "IG0701012", "IG0701112", "IG0701212", "IG0701312", "IG0812", "IG0912", "IG01012", "IG01112", "IG01212", "IG01312", "IG01412", "IG01512", "IG070113", "IG070213", "IG070313", "IG070413", "IG070513", "IG070613", "IG070713", "IG070813", "IG070913", "IG0701013", "IG0701113", "IG0701213", "IG0701313", "IG0813", "IG0913", "IG01013", "IG01113", "IG01213", "IG01313", "IG01413", "IG01513", "IG070114", "IG070214", "IG070314", "IG070414", "IG070514", "IG070614", "IG070714", "IG070814", "IG070914", "IG0701014", "IG0701114", "IG0701214", "IG0701314", "IG0814", "IG0914", "IG01014", "IG01114", "IG01214", "IG01314", "IG01414", "IG01514", "IG070115", "IG070215", "IG070315", "IG070415", "IG070515", "IG070615", "IG070715", "IG070815", "IG070915", "IG0701015", "IG0701115", "IG0701215", "IG0701315", "IG0815", "IG0915", "IG01015", "IG01115", "IG01215", "IG01315", "IG01415", "IG01515", "IG160111", "IG160211", "IG160311", "IG160411", "IG160511", "IG160611", "IG160711", "IG160811", "IG160911", "IG1601011", "IG1601111", "IG1601211", "IG160112", "IG160212", "IG160312", "IG160412", "IG160512", "IG160612", "IG160712", "IG160812", "IG160912", "IG1601012", "IG1601112", "IG1601212", "IG160113", "IG160213", "IG160313", "IG160413", "IG160513", "IG160613", "IG160713", "IG160813", "IG160913", "IG1601013", "IG1601113", "IG1601213", "IG160114", "IG160214", "IG160314", "IG160414", "IG160514", "IG160614", "IG160714", "IG160814", "IG160914", "IG1601014", "IG1601114", "IG1601214", "IG160115", "IG160215", "IG160315", "IG160415", "IG160515", "IG160615", "IG160715", "IG160815", "IG160915", "IG1601015", "IG1601115", "IG1601215" };
                //string[] fldvalue = { IA01.Text, IA02.Text, IA03.Text, IA04.Text, IA05.Text, IB01.Text, IB02.Text, IB03.Text, IB04.Text, IB05.Text, IB06.Text, IB07.Text, IB08.Text, IB09.Text, IB0901.Text, IB0902.Text, IB0903.Text, IB0996.Text, IC01.Text, IC02.Text, IC03.Text, IC04.Text, IC05.Text, ckkBaby1.Text, IC0601.Text, IC0701.Text, IC0801.Text, IC0901.Text, IC01001.Text, IC01101.Text, ckkBaby2.Text, IC0602.Text, IC0702.Text, IC0802.Text, IC0902.Text, IC01002.Text, IC01102.Text, ckkBaby3.Text, IC0603.Text, IC0703.Text, IC0803.Text, IC0903.Text, IC01003.Text, IC01103.Text, ckkBaby4.Text, IC0604.Text, IC0704.Text, IC0804.Text, IC0904.Text, IC01004.Text, IC01104.Text, ID01.Text, ID02.Text, ID03.Text, ID04.Text, IE01.Text, IE02.Text, IE03.Text, IE04.Text, chkHHMem1.Text, IE0701.Text, chkHHMem2.Text, IE0702.Text, chkHHMem3.Text, IE0703.Text, chkHHMem4.Text, IE0704.Text, IE0801.Text, IE0901.Text, IE0802.Text, IE0902.Text, IE0803.Text, IE0903.Text, IE0804.Text, IE0904.Text, IF01.Text, IF02.Text, IF03.Text, IF04.Text, chkPW1.Text, IF0601.Text, chkPW2.Text, IF0602.Text, chkPW3.Text, IF0603.Text, chkPW4.Text, IF0604.Text, IG01.Text, IG02.Text, IG0301.Text, IG0302.Text, IG0303.Text, IG0304.Text, IG0305.Text, IG0306.Text, IG0307.Text, IG0308.Text, IG0309.Text, IG03010.Text, chkMember1.Text, IG0401.Text, IG0501.Text, IG060101.Text, IG060201.Text, IG060301.Text, IG060401.Text, IG060501.Text, IG070101.Text, IG070201.Text, IG070301.Text, IG070401.Text, chkMember2.Text, IG0402.Text, IG0502.Text, IG060102.Text, IG060202.Text, IG060302.Text, IG060402.Text, IG060502.Text, IG070102.Text, IG070202.Text, IG070302.Text, IG070402.Text, chkMember3.Text, IG0403.Text, IG0503.Text, IG060103.Text, IG060203.Text, IG060303.Text, IG060403.Text, IG060503.Text, IG070103.Text, IG070203.Text, IG070303.Text, IG070403.Text, chkMember4.Text, IG0404.Text, IG0504.Text, IG060104.Text, IG060204.Text, IG060304.Text, IG060404.Text, IG060504.Text, IG070104.Text, IG070204.Text, IG070304.Text, IG070404.Text, chkMember5.Text, IG0405.Text, IG0505.Text, IG060105.Text, IG060205.Text, IG060305.Text, IG060405.Text, IG060505.Text, IG070105.Text, IG070205.Text, IG070305.Text, IG070405.Text, IG070501.Text, IG070601.Text, IG070701.Text, IG070801.Text, IG070901.Text, IG0701001.Text, IG0701101.Text, IG0701201.Text, IG0701301.Text, IG0801.Text, IG0901.Text, IG01001.Text, IG01101.Text, IG01201.Text, IG01301.Text, IG01401.Text, IG01501.Text, IG160101.Text, IG160201.Text, IG160301.Text, IG160401.Text, IG160501.Text, IG070502.Text, IG070602.Text, IG070702.Text, IG070802.Text, IG070902.Text, IG0701002.Text, IG0701102.Text, IG0701202.Text, IG0701302.Text, IG0802.Text, IG0902.Text, IG01002.Text, IG01102.Text, IG01202.Text, IG01302.Text, IG01402.Text, IG01502.Text, IG160102.Text, IG160202.Text, IG160302.Text, IG160402.Text, IG160502.Text, IG070503.Text, IG070603.Text, IG070703.Text, IG070803.Text, IG070903.Text, IG0701003.Text, IG0701103.Text, IG0701203.Text, IG0701303.Text, IG0803.Text, IG0903.Text, IG01003.Text, IG01103.Text, IG01203.Text, IG01303.Text, IG01403.Text, IG01503.Text, IG160103.Text, IG160203.Text, IG160303.Text, IG160403.Text, IG160503.Text, IG070504.Text, IG070604.Text, IG070704.Text, IG070804.Text, IG070904.Text, IG0701004.Text, IG0701104.Text, IG0701204.Text, IG0701304.Text, IG0804.Text, IG0904.Text, IG01004.Text, IG01104.Text, IG01204.Text, IG01304.Text, IG01404.Text, IG01504.Text, IG160104.Text, IG160204.Text, IG160304.Text, IG160404.Text, IG160504.Text, IG070505.Text, IG070605.Text, IG070705.Text, IG070805.Text, IG070905.Text, IG0701005.Text, IG0701105.Text, IG0701205.Text, IG0701305.Text, IG0805.Text, IG0905.Text, IG01005.Text, IG01105.Text, IG01205.Text, IG01305.Text, IG01405.Text, IG01505.Text, IG160105.Text, IG160205.Text, IG160305.Text, IG160405.Text, IG160505.Text, IG160601.Text, IG160701.Text, IG160801.Text, IG160901.Text, IG1601001.Text, IG1601101.Text, IG1601201.Text, IG160602.Text, IG160702.Text, IG160802.Text, IG160902.Text, IG1601002.Text, IG1601102.Text, IG1601202.Text, IG160603.Text, IG160703.Text, IG160803.Text, IG160903.Text, IG1601003.Text, IG1601103.Text, IG1601203.Text, IG160604.Text, IG160704.Text, IG160804.Text, IG160904.Text, IG1601004.Text, IG1601104.Text, IG1601204.Text, IG160605.Text, IG160705.Text, IG160805.Text, IG160905.Text, IG1601005.Text, IG1601105.Text, IG1601205.Text, QCFUP01.Text, QCFUP02.Text, QCFUP03.Text, QCFUP04.Text, QCFUP05.Text, QCFUP06.Text, QCFUP07.Text, ckkBaby5.Text, IC0605.Text, IC0705.Text, IC0805.Text, IC0905.Text, IC01005.Text, IC01105.Text, ckkBaby6.Text, IC0606.Text, IC0706.Text, IC0806.Text, IC0906.Text, IC01006.Text, IC01106.Text, ckkBaby7.Text, IC0607.Text, IC0707.Text, IC0807.Text, IC0907.Text, IC01007.Text, IC01107.Text, ckkBaby8.Text, IC0608.Text, IC0708.Text, IC0808.Text, IC0908.Text, IC01008.Text, IC01108.Text, ckkBaby9.Text, IC0609.Text, IC0709.Text, IC0809.Text, IC0909.Text, IC01009.Text, IC01109.Text, ckkBaby10.Text, IC06010.Text, IC07010.Text, IC08010.Text, IC09010.Text, IC01010.Text, IC01110.Text, ckkBaby11.Text, IC06011.Text, IC07011.Text, IC08011.Text, IC09011.Text, IC01011.Text, IC01111.Text, chkMember6.Text, IG0406.Text, IG0506.Text, IG060106.Text, IG060206.Text, IG060306.Text, IG060406.Text, IG060506.Text, IG070106.Text, IG070206.Text, IG070306.Text, IG070406.Text, IG070506.Text, IG070606.Text, IG070706.Text, IG070806.Text, IG070906.Text, IG0701006.Text, IG0701106.Text, IG0701206.Text, IG0701306.Text, IG0806.Text, IG0906.Text, IG01006.Text, chkMember7.Text, IG0407.Text, IG0507.Text, IG060107.Text, IG060207.Text, IG060307.Text, IG060407.Text, IG060507.Text, IG070107.Text, IG070207.Text, IG070307.Text, IG070407.Text, IG070507.Text, IG070607.Text, IG070707.Text, IG070807.Text, IG070907.Text, IG0701007.Text, IG0701107.Text, IG0701207.Text, IG0701307.Text, IG0807.Text, IG0907.Text, IG01007.Text, chkMember8.Text, IG0408.Text, IG0508.Text, IG060108.Text, IG060208.Text, IG060308.Text, IG060408.Text, IG060508.Text, IG070108.Text, IG070208.Text, IG070308.Text, IG070408.Text, IG070508.Text, IG070608.Text, IG070708.Text, IG070808.Text, IG070908.Text, IG0701008.Text, IG0701108.Text, IG0701208.Text, IG0701308.Text, IG0808.Text, IG0908.Text, IG01008.Text, chkMember9.Text, IG0409.Text, IG0509.Text, IG060109.Text, IG060209.Text, IG060309.Text, IG060409.Text, IG060509.Text, IG070109.Text, IG070209.Text, IG070309.Text, IG070409.Text, IG070509.Text, IG070609.Text, IG070709.Text, IG070809.Text, IG070909.Text, IG0701009.Text, IG0701109.Text, IG0701209.Text, IG0701309.Text, IG0809.Text, IG0909.Text, IG01009.Text, chkMember10.Text, IG0410.Text, IG0510.Text, IG060110.Text, IG060210.Text, IG060310.Text, IG060410.Text, IG060510.Text, IG070110.Text, IG070210.Text, IG070310.Text, IG070410.Text, IG070510.Text, IG070610.Text, IG070710.Text, IG070810.Text, IG070910.Text, IG0701010.Text, IG0701110.Text, IG0701210.Text, IG0701310.Text, IG0810.Text, IG0910.Text, IG01010.Text, IG01106.Text, IG01206.Text, IG01306.Text, IG01406.Text, IG01506.Text, IG01107.Text, IG01207.Text, IG01307.Text, IG01407.Text, IG01507.Text, IG01108.Text, IG01208.Text, IG01308.Text, IG01408.Text, IG01508.Text, IG01109.Text, IG01209.Text, IG01309.Text, IG01409.Text, IG01509.Text, IG01110.Text, IG01210.Text, IG01310.Text, IG01410.Text, IG01510.Text, IG160106.Text, IG160206.Text, IG160306.Text, IG160406.Text, IG160506.Text, IG160606.Text, IG160706.Text, IG160806.Text, IG160906.Text, IG1601006.Text, IG1601106.Text, IG1601206.Text, IG160107.Text, IG160207.Text, IG160307.Text, IG160407.Text, IG160507.Text, IG160607.Text, IG160707.Text, IG160807.Text, IG160907.Text, IG1601007.Text, IG1601107.Text, IG1601207.Text, IG160108.Text, IG160208.Text, IG160308.Text, IG160408.Text, IG160508.Text, IG160608.Text, IG160708.Text, IG160808.Text, IG160908.Text, IG1601008.Text, IG1601108.Text, IG1601208.Text, IG160109.Text, IG160209.Text, IG160309.Text, IG160409.Text, IG160509.Text, IG160609.Text, IG160709.Text, IG160809.Text, IG160909.Text, IG1601009.Text, IG1601109.Text, IG1601209.Text, IG160110.Text, IG160210.Text, IG160310.Text, IG160410.Text, IG160510.Text, IG160610.Text, IG160710.Text, IG160810.Text, IG160910.Text, IG1601010.Text, IG1601110.Text, IG1601210.Text, chkMember11.Text, IG0411.Text, IG0511.Text, IG060111.Text, IG060211.Text, IG060311.Text, IG060411.Text, IG060511.Text, chkMember12.Text, IG0412.Text, IG0512.Text, IG060112.Text, IG060212.Text, IG060312.Text, IG060412.Text, IG060512.Text, chkMember13.Text, IG0413.Text, IG0513.Text, IG060113.Text, IG060213.Text, IG060313.Text, IG060413.Text, IG060513.Text, chkMember14.Text, IG0414.Text, IG0514.Text, IG060114.Text, IG060214.Text, IG060314.Text, IG060414.Text, IG060514.Text, chkMember15.Text, IG0415.Text, IG0515.Text, IG060115.Text, IG060215.Text, IG060315.Text, IG060415.Text, IG060515.Text, IG070111.Text, IG070211.Text, IG070311.Text, IG070411.Text, IG070511.Text, IG070611.Text, IG070711.Text, IG070811.Text, IG070911.Text, IG0701011.Text, IG0701111.Text, IG0701211.Text, IG0701311.Text, IG0811.Text, IG0911.Text, IG01011.Text, IG01111.Text, IG01211.Text, IG01311.Text, IG01411.Text, IG01511.Text, IG070112.Text, IG070212.Text, IG070312.Text, IG070412.Text, IG070512.Text, IG070612.Text, IG070712.Text, IG070812.Text, IG070912.Text, IG0701012.Text, IG0701112.Text, IG0701212.Text, IG0701312.Text, IG0812.Text, IG0912.Text, IG01012.Text, IG01112.Text, IG01212.Text, IG01312.Text, IG01412.Text, IG01512.Text, IG070113.Text, IG070213.Text, IG070313.Text, IG070413.Text, IG070513.Text, IG070613.Text, IG070713.Text, IG070813.Text, IG070913.Text, IG0701013.Text, IG0701113.Text, IG0701213.Text, IG0701313.Text, IG0813.Text, IG0913.Text, IG01013.Text, IG01113.Text, IG01213.Text, IG01313.Text, IG01413.Text, IG01513.Text, IG070114.Text, IG070214.Text, IG070314.Text, IG070414.Text, IG070514.Text, IG070614.Text, IG070714.Text, IG070814.Text, IG070914.Text, IG0701014.Text, IG0701114.Text, IG0701214.Text, IG0701314.Text, IG0814.Text, IG0914.Text, IG01014.Text, IG01114.Text, IG01214.Text, IG01314.Text, IG01414.Text, IG01514.Text, IG070115.Text, IG070215.Text, IG070315.Text, IG070415.Text, IG070515.Text, IG070615.Text, IG070715.Text, IG070815.Text, IG070915.Text, IG0701015.Text, IG0701115.Text, IG0701215.Text, IG0701315.Text, IG0815.Text, IG0915.Text, IG01015.Text, IG01115.Text, IG01215.Text, IG01315.Text, IG01415.Text, IG01515.Text, IG160111.Text, IG160211.Text, IG160311.Text, IG160411.Text, IG160511.Text, IG160611.Text, IG160711.Text, IG160811.Text, IG160911.Text, IG1601011.Text, IG1601111.Text, IG1601211.Text, IG160112.Text, IG160212.Text, IG160312.Text, IG160412.Text, IG160512.Text, IG160612.Text, IG160712.Text, IG160812.Text, IG160912.Text, IG1601012.Text, IG1601112.Text, IG1601212.Text, IG160113.Text, IG160213.Text, IG160313.Text, IG160413.Text, IG160513.Text, IG160613.Text, IG160713.Text, IG160813.Text, IG160913.Text, IG1601013.Text, IG1601113.Text, IG1601213.Text, IG160114.Text, IG160214.Text, IG160314.Text, IG160414.Text, IG160514.Text, IG160614.Text, IG160714.Text, IG160814.Text, IG160914.Text, IG1601014.Text, IG1601114.Text, IG1601214.Text, IG160115.Text, IG160215.Text, IG160315.Text, IG160415.Text, IG160515.Text, IG160615.Text, IG160715.Text, IG160815.Text, IG160915.Text, IG1601015.Text, IG1601115.Text, IG1601215.Text };




                string qry = "INSERT INTO " + tblname + " (" + "form_id," +
        "IA01," +
        "IA02," +
        "IA03," +
        "IA04," +
        "IA05," +
        "IB01," +
        "IB02," +
        "IB03," +
        "IB04," +
        "IB04a," +
        "IB05," +
        "IB06," +
        "IB07," +
        "IB08," +
        "IB0901," +
        "IB0902," +
        "IB0903," +
        "IB0996," +
        "IB010," +
        "IB011," +
        "IC01," +
        "IC02," +
        "IC03," +
        "IC04," +
        "IC05," +
        "chkBaby1," +
        "IC0601," +
        "IC0701," +
        "IC0801," +
        "IC0901," +
        "IC01001," +
        "IC01101," +
        "chkBaby2," +
        "IC0602," +
        "IC0702," +
        "IC0802," +
        "IC0902," +
        "IC01002," +
        "IC01102," +
        "chkBaby3," +
        "IC0603," +
        "IC0703," +
        "IC0803," +
        "IC0903," +
        "IC01003," +
        "IC01103," +
        "chkBaby4," +
        "IC0604," +
        "IC0704," +
        "IC0804," +
        "IC0904," +
        "IC01004," +
        "IC01104," +
        "ID01," +
        "ID02," +
        "ID03," +
        "ID04," +
        "IE01," +
        "IE02," +
        "IE03," +
        "IE04," +
        "chkHHMem1," +
        "IE0701," +
        "chkHHMem2," +
        "IE0702," +
        "chkHHMem3," +
        "IE0703," +
        "chkHHMem4," +
        "IE0704," +
        "IE0801," +
        "IE0901," +
        "IE0802," +
        "IE0902," +
        "IE0803," +
        "IE0903," +
        "IE0804," +
        "IE0904," +
        "IF01," +
        "IF02," +
        "IF03," +
        "IF04," +
        "chkPW1," +
        "IF0601," +
        "chkPW2," +
        "IF0602," +
        "chkPW3," +
        "IF0603," +
        "chkPW4," +
        "IF0604," +
        "IG01," +
        "IG02," +
        "IG0301," +
        "IG0302," +
        "IG0303," +
        "IG0304," +
        "IG0305," +
        "IG0306," +
        "IG0307," +
        "IG0308," +
        "IG0309," +
        "IG03010," +
        "chkMember1," +
        "IG0401," +
        "IG0501," +
        "IG060101," +
        "IG060201," +
        "IG060301," +
        "IG060401," +
        "IG060501," +
        "IG070101," +
        "IG070201," +
        "IG070301," +
        "IG070401," +
        "chkMember2," +
        "IG0402," +
        "IG0502," +
        "IG060102," +
        "IG060202," +
        "IG060302," +
        "IG060402," +
        "IG060502," +
        "IG070102," +
        "IG070202," +
        "IG070302," +
        "IG070402," +
        "chkMember3," +
        "IG0403," +
        "IG0503," +
        "IG060103," +
        "IG060203," +
        "IG060303," +
        "IG060403," +
        "IG060503," +
        "IG070103," +
        "IG070203," +
        "IG070303," +
        "IG070403," +
        "chkMember4," +
        "IG0404," +
        "IG0504," +
        "IG060104," +
        "IG060204," +
        "IG060304," +
        "IG060404," +
        "IG060504," +
        "IG070104," +
        "IG070204," +
        "IG070304," +
        "IG070404," +
        "chkMember5," +
        "IG0405," +
        "IG0505," +
        "IG060105," +
        "IG060205," +
        "IG060305," +
        "IG060405," +
        "IG060505," +
        "IG070105," +
        "IG070205," +
        "IG070305," +
        "IG070405," +
        "IG070501," +
        "IG070601," +
        "IG070701," +
        "IG070801," +
        "IG070901," +
        "IG0701001," +
        "IG0701101," +
        "IG0701201," +
        "IG0701301," +
        "IG0801," +
        "IG0901," +
        "IG01001," +
        "IG01101," +
        "IG01201," +
        "IG01301," +
        "IG01401," +
        "IG01501," +
        "IG160101," +
        "IG160201," +
        "IG160301," +
        "IG160401," +
        "IG160501," +
        "IG160601," +
        "IG160701," +
        "IG160801," +
        "IG160901," +
        "IG1601001," +
        "IG1601101," +
        "IG1601201," +
        "IG070502," +
        "IG070602," +
        "IG070702," +
        "IG070802," +
        "IG070902," +
        "IG0701002," +
        "IG0701102," +
        "IG0701202," +
        "IG0701302," +
        "IG0802," +
        "IG0902," +
        "IG01002," +
        "IG01102," +
        "IG01202," +
        "IG01302," +
        "IG01402," +
        "IG01502," +
        "IG160102," +
        "IG160202," +
        "IG160302," +
        "IG160402," +
        "IG160502," +
        "IG160602," +
        "IG160702," +
        "IG160802," +
        "IG160902," +
        "IG1601002," +
        "IG1601102," +
        "IG1601202," +
        "IG070503," +
        "IG070603," +
        "IG070703," +
        "IG070803," +
        "IG070903," +
        "IG0701003," +
        "IG0701103," +
        "IG0701203," +
        "IG0701303," +
        "IG0803," +
        "IG0903," +
        "IG01003," +
        "IG01103," +
        "IG01203," +
        "IG01303," +
        "IG01403," +
        "IG01503," +
        "IG160103," +
        "IG160203," +
        "IG160303," +
        "IG160403," +
        "IG160503," +
        "IG160603," +
        "IG160703," +
        "IG160803," +
        "IG160903," +
        "IG1601003," +
        "IG1601103," +
        "IG1601203," +
        "IG070504," +
        "IG070604," +
        "IG070704," +
        "IG070804," +
        "IG070904," +
        "IG0701004," +
        "IG0701104," +
        "IG0701204," +
        "IG0701304," +
        "IG0804," +
        "IG0904," +
        "IG01004," +
        "IG01104," +
        "IG01204," +
        "IG01304," +
        "IG01404," +
        "IG01504," +
        "IG160104," +
        "IG160204," +
        "IG160304," +
        "IG160404," +
        "IG160504," +
        "IG160604," +
        "IG160704," +
        "IG160804," +
        "IG160904," +
        "IG1601004," +
        "IG1601104," +
        "IG1601204," +
        "IG070505," +
        "IG070605," +
        "IG070705," +
        "IG070805," +
        "IG070905," +
        "IG0701005," +
        "IG0701105," +
        "IG0701205," +
        "IG0701305," +
        "IG0805," +
        "IG0905," +
        "IG01005," +
        "IG01105," +
        "IG01205," +
        "IG01305," +
        "IG01405," +
        "IG01505," +
        "IG160105," +
        "IG160205," +
        "IG160305," +
        "IG160405," +
        "IG160505," +
        "IG160605," +
        "IG160705," +
        "IG160805," +
        "IG160905," +
        "IG1601005," +
        "IG1601105," +
        "IG1601205," +
        "QCFUP02," +
        "QCFUP03," +
        "QCFUP04," +
        "QCFUP05," +
        "QCFUP06," +
        "QCFUP07," +
        "chkBaby5," +
        "IC0605," +
        "IC0705," +
        "IC0805," +
        "IC0905," +
        "IC01005," +
        "IC01105," +
        "chkBaby6," +
        "IC0606," +
        "IC0706," +
        "IC0806," +
        "IC0906," +
        "IC01006," +
        "IC01106," +
        "chkBaby7," +
        "IC0607," +
        "IC0707," +
        "IC0807," +
        "IC0907," +
        "IC01007," +
        "IC01107," +
        "chkBaby8," +
        "IC0608," +
        "IC0708," +
        "IC0808," +
        "IC0908," +
        "IC01008," +
        "IC01108," +
        "chkBaby9," +
        "IC0609," +
        "IC0709," +
        "IC0809," +
        "IC0909," +
        "IC01009," +
        "IC01109," +
        "chkBaby10," +
        "IC06010," +
        "IC07010," +
        "IC08010," +
        "IC09010," +
        "IC01010," +
        "IC01110," +
        "chkBaby11," +
        "IC06011," +
        "IC07011," +
        "IC08011," +
        "IC09011," +
        "IC01011," +
        "IC01111," +
        "chkMember6," +
        "IG0406," +
        "IG0506," +
        "IG060106," +
        "IG060206," +
        "IG060306," +
        "IG060406," +
        "IG060506," +
        "IG070106," +
        "IG070206," +
        "IG070306," +
        "IG070406," +
        "IG070506," +
        "IG070606," +
        "IG070706," +
        "IG070806," +
        "IG070906," +
        "IG0701006," +
        "IG0701106," +
        "IG0701206," +
        "IG0701306," +
        "IG0806," +
        "IG0906," +
        "IG01006," +
        "chkMember7," +
        "IG0407," +
        "IG0507," +
        "IG060107," +
        "IG060207," +
        "IG060307," +
        "IG060407," +
        "IG060507," +
        "IG070107," +
        "IG070207," +
        "IG070307," +
        "IG070407," +
        "IG070507," +
        "IG070607," +
        "IG070707," +
        "IG070807," +
        "IG070907," +
        "IG0701007," +
        "IG0701107," +
        "IG0701207," +
        "IG0701307," +
        "IG0807," +
        "IG0907," +
        "IG01007," +
        "chkMember8," +
        "IG0408," +
        "IG0508," +
        "IG060108," +
        "IG060208," +
        "IG060308," +
        "IG060408," +
        "IG060508," +
        "IG070108," +
        "IG070208," +
        "IG070308," +
        "IG070408," +
        "IG070508," +
        "IG070608," +
        "IG070708," +
        "IG070808," +
        "IG070908," +
        "IG0701008," +
        "IG0701108," +
        "IG0701208," +
        "IG0701308," +
        "IG0808," +
        "IG0908," +
        "IG01008," +
        "chkMember9," +
        "IG0409," +
        "IG0509," +
        "IG060109," +
        "IG060209," +
        "IG060309," +
        "IG060409," +
        "IG060509," +
        "IG070109," +
        "IG070209," +
        "IG070309," +
        "IG070409," +
        "IG070509," +
        "IG070609," +
        "IG070709," +
        "IG070809," +
        "IG070909," +
        "IG0701009," +
        "IG0701109," +
        "IG0701209," +
        "IG0701309," +
        "IG0809," +
        "IG0909," +
        "IG01009," +
        "chkMember10," +
        "IG0410," +
        "IG0510," +
        "IG060110," +
        "IG060210," +
        "IG060310," +
        "IG060410," +
        "IG060510," +
        "IG070110," +
        "IG070210," +
        "IG070310," +
        "IG070410," +
        "IG070510," +
        "IG070610," +
        "IG070710," +
        "IG070810," +
        "IG070910," +
        "IG0701010," +
        "IG0701110," +
        "IG0701210," +
        "IG0701310," +
        "IG0810," +
        "IG0910," +
        "IG01010," +
        "IG01106," +
        "IG01206," +
        "IG01306," +
        "IG01406," +
        "IG01506," +
        "IG01107," +
        "IG01207," +
        "IG01307," +
        "IG01407," +
        "IG01507," +
        "IG01108," +
        "IG01208," +
        "IG01308," +
        "IG01408," +
        "IG01508," +
        "IG01109," +
        "IG01209," +
        "IG01309," +
        "IG01409," +
        "IG01509," +
        "IG01110," +
        "IG01210," +
        "IG01310," +
        "IG01410," +
        "IG01510," +
        "IG160106," +
        "IG160206," +
        "IG160306," +
        "IG160406," +
        "IG160506," +
        "IG160606," +
        "IG160706," +
        "IG160806," +
        "IG160906," +
        "IG1601006," +
        "IG1601106," +
        "IG1601206," +
        "IG160107," +
        "IG160207," +
        "IG160307," +
        "IG160407," +
        "IG160507," +
        "IG160607," +
        "IG160707," +
        "IG160807," +
        "IG160907," +
        "IG1601007," +
        "IG1601107," +
        "IG1601207," +
        "IG160108," +
        "IG160208," +
        "IG160308," +
        "IG160408," +
        "IG160508," +
        "IG160608," +
        "IG160708," +
        "IG160808," +
        "IG160908," +
        "IG1601008," +
        "IG1601108," +
        "IG1601208," +
        "IG160109," +
        "IG160209," +
        "IG160309," +
        "IG160409," +
        "IG160509," +
        "IG160609," +
        "IG160709," +
        "IG160809," +
        "IG160909," +
        "IG1601009," +
        "IG1601109," +
        "IG1601209," +
        "IG160110," +
        "IG160210," +
        "IG160310," +
        "IG160410," +
        "IG160510," +
        "IG160610," +
        "IG160710," +
        "IG160810," +
        "IG160910," +
        "IG1601010," +
        "IG1601110," +
        "IG1601210," +
        "chkMember11," +
        "IG0411," +
        "IG0511," +
        "IG060111," +
        "IG060211," +
        "IG060311," +
        "IG060411," +
        "IG060511," +
        "chkMember12," +
        "IG0412," +
        "IG0512," +
        "IG060112," +
        "IG060212," +
        "IG060312," +
        "IG060412," +
        "IG060512," +
        "chkMember13," +
        "IG0413," +
        "IG0513," +
        "IG060113," +
        "IG060213," +
        "IG060313," +
        "IG060413," +
        "IG060513," +
        "chkMember14," +
        "IG0414," +
        "IG0514," +
        "IG060114," +
        "IG060214," +
        "IG060314," +
        "IG060414," +
        "IG060514," +
        "chkMember15," +
        "IG0415," +
        "IG0515," +
        "IG060115," +
        "IG060215," +
        "IG060315," +
        "IG060415," +
        "IG060515," +
        "IG070111," +
        "IG070211," +
        "IG070311," +
        "IG070411," +
        "IG070511," +
        "IG070611," +
        "IG070711," +
        "IG070811," +
        "IG070911," +
        "IG0701011," +
        "IG0701111," +
        "IG0701211," +
        "IG0701311," +
        "IG0811," +
        "IG0911," +
        "IG01011," +
        "IG01111," +
        "IG01211," +
        "IG01311," +
        "IG01411," +
        "IG01511," +
        "IG070112," +
        "IG070212," +
        "IG070312," +
        "IG070412," +
        "IG070512," +
        "IG070612," +
        "IG070712," +
        "IG070812," +
        "IG070912," +
        "IG0701012," +
        "IG0701112," +
        "IG0701212," +
        "IG0701312," +
        "IG0812," +
        "IG0912," +
        "IG01012," +
        "IG01112," +
        "IG01212," +
        "IG01312," +
        "IG01412," +
        "IG01512," +
        "IG070113," +
        "IG070213," +
        "IG070313," +
        "IG070413," +
        "IG070513," +
        "IG070613," +
        "IG070713," +
        "IG070813," +
        "IG070913," +
        "IG0701013," +
        "IG0701113," +
        "IG0701213," +
        "IG0701313," +
        "IG0813," +
        "IG0913," +
        "IG01013," +
        "IG01113," +
        "IG01213," +
        "IG01313," +
        "IG01413," +
        "IG01513," +
        "IG070114," +
        "IG070214," +
        "IG070314," +
        "IG070414," +
        "IG070514," +
        "IG070614," +
        "IG070714," +
        "IG070814," +
        "IG070914," +
        "IG0701014," +
        "IG0701114," +
        "IG0701214," +
        "IG0701314," +
        "IG0814," +
        "IG0914," +
        "IG01014," +
        "IG01114," +
        "IG01214," +
        "IG01314," +
        "IG01414," +
        "IG01514," +
        "IG070115," +
        "IG070215," +
        "IG070315," +
        "IG070415," +
        "IG070515," +
        "IG070615," +
        "IG070715," +
        "IG070815," +
        "IG070915," +
        "IG0701015," +
        "IG0701115," +
        "IG0701215," +
        "IG0701315," +
        "IG0815," +
        "IG0915," +
        "IG01015," +
        "IG01115," +
        "IG01215," +
        "IG01315," +
        "IG01415," +
        "IG01515," +
        "IG160111," +
        "IG160211," +
        "IG160311," +
        "IG160411," +
        "IG160511," +
        "IG160611," +
        "IG160711," +
        "IG160811," +
        "IG160911," +
        "IG1601011," +
        "IG1601111," +
        "IG1601211," +
        "IG160112," +
        "IG160212," +
        "IG160312," +
        "IG160412," +
        "IG160512," +
        "IG160612," +
        "IG160712," +
        "IG160812," +
        "IG160912," +
        "IG1601012," +
        "IG1601112," +
        "IG1601212," +
        "IG160113," +
        "IG160213," +
        "IG160313," +
        "IG160413," +
        "IG160513," +
        "IG160613," +
        "IG160713," +
        "IG160813," +
        "IG160913," +
        "IG1601013," +
        "IG1601113," +
        "IG1601213," +
        "IG160114," +
        "IG160214," +
        "IG160314," +
        "IG160414," +
        "IG160514," +
        "IG160614," +
        "IG160714," +
        "IG160814," +
        "IG160914," +
        "IG1601014," +
        "IG1601114," +
        "IG1601214," +
        "IG160115," +
        "IG160215," +
        "IG160315," +
        "IG160415," +
        "IG160515," +
        "IG160615," +
        "IG160715," +
        "IG160815," +
        "IG160915," +
        "IG1601015," +
        "IG1601115," +
        "IG1601215," +
        "entrydate," +
        "userid" +
        ") values ('" + FORM_ID.Text + "', '" +
        IA01.Text + "', '" +
        IA02.Text + "', '" +
        IA03.Text + "', '" +
        IA04.Text + "', '" +
        IA05.Text + "', '" +
        IB01.Text + "', '" +
        IB02.Text + "', '" +
        IB03.Text + "', '" +
        IB04.Text + "', '" +
        IB04a.Text + "', '" +
        IB05.Text + "', '" +
        IB06.Text + "', '" +
        IB07.Text + "', '" +
        IB08.Text + "', '" +
        IB0901.Text + "', '" +
        IB0902.Text + "', '" +
        IB0903.Text + "', '" +
        IB0996.Text + "', '" +
        IB010.Text + "', '" +
        IB011.Text + "', '" +
        IC01.Text + "', '" +
        IC02.Text + "', '" +
        IC03.Text + "', '" +
        IC04.Text + "', '" +
        IC05.Text + "', '" +
        chkBaby1.Text + "', '" +
        IC0601.Text + "', '" +
        IC0701.Text + "', '" +
        IC0801.Text + "', '" +
        IC0901.Text + "', '" +
        IC01001.Text + "', '" +
        IC01101.Text + "', '" +
        chkBaby2.Text + "', '" +
        IC0602.Text + "', '" +
        IC0702.Text + "', '" +
        IC0802.Text + "', '" +
        IC0902.Text + "', '" +
        IC01002.Text + "', '" +
        IC01102.Text + "', '" +
        chkBaby3.Text + "', '" +
        IC0603.Text + "', '" +
        IC0703.Text + "', '" +
        IC0803.Text + "', '" +
        IC0903.Text + "', '" +
        IC01003.Text + "', '" +
        IC01103.Text + "', '" +
        chkBaby4.Text + "', '" +
        IC0604.Text + "', '" +
        IC0704.Text + "', '" +
        IC0804.Text + "', '" +
        IC0904.Text + "', '" +
        IC01004.Text + "', '" +
        IC01104.Text + "', '" +
        ID01.Text + "', '" +
        ID02.Text + "', '" +
        ID03.Text + "', '" +
        ID04.Text + "', '" +
        IE01.Text + "', '" +
        IE02.Text + "', '" +
        IE03.Text + "', '" +
        IE04.Text + "', '" +
        chkHHMem1.Text + "', '" +
        IE0701.Text + "', '" +
        chkHHMem2.Text + "', '" +
        IE0702.Text + "', '" +
        chkHHMem3.Text + "', '" +
        IE0703.Text + "', '" +
        chkHHMem4.Text + "', '" +
        IE0704.Text + "', '" +
        IE0801.Text + "', '" +
        IE0901.Text + "', '" +
        IE0802.Text + "', '" +
        IE0902.Text + "', '" +
        IE0803.Text + "', '" +
        IE0903.Text + "', '" +
        IE0804.Text + "', '" +
        IE0904.Text + "', '" +
        IF01.Text + "', '" +
        IF02.Text + "', '" +
        IF03.Text + "', '" +
        IF04.Text + "', '" +
        chkPW1.Text + "', '" +
        IF0601.Text + "', '" +
        chkPW2.Text + "', '" +
        IF0602.Text + "', '" +
        chkPW3.Text + "', '" +
        IF0603.Text + "', '" +
        chkPW4.Text + "', '" +
        IF0604.Text + "', '" +
        IG01.Text + "', '" +
        IG02.Text + "', '" +
        IG0301.Text + "', '" +
        IG0302.Text + "', '" +
        IG0303.Text + "', '" +
        IG0304.Text + "', '" +
        IG0305.Text + "', '" +
        IG0306.Text + "', '" +
        IG0307.Text + "', '" +
        IG0308.Text + "', '" +
        IG0309.Text + "', '" +
        IG03010.Text + "', '" +
        chkMember1.Text + "', '" +
        IG0401.Text + "', '" +
        IG0501.Text + "', '" +
        IG060101.Text + "', '" +
        IG060201.Text + "', '" +
        IG060301.Text + "', '" +
        IG060401.Text + "', '" +
        IG060501.Text + "', '" +
        IG070101.Text + "', '" +
        IG070201.Text + "', '" +
        IG070301.Text + "', '" +
        IG070401.Text + "', '" +
        chkMember2.Text + "', '" +
        IG0402.Text + "', '" +
        IG0502.Text + "', '" +
        IG060102.Text + "', '" +
        IG060202.Text + "', '" +
        IG060302.Text + "', '" +
        IG060402.Text + "', '" +
        IG060502.Text + "', '" +
        IG070102.Text + "', '" +
        IG070202.Text + "', '" +
        IG070302.Text + "', '" +
        IG070402.Text + "', '" +
        chkMember3.Text + "', '" +
        IG0403.Text + "', '" +
        IG0503.Text + "', '" +
        IG060103.Text + "', '" +
        IG060203.Text + "', '" +
        IG060303.Text + "', '" +
        IG060403.Text + "', '" +
        IG060503.Text + "', '" +
        IG070103.Text + "', '" +
        IG070203.Text + "', '" +
        IG070303.Text + "', '" +
        IG070403.Text + "', '" +
        chkMember4.Text + "', '" +
        IG0404.Text + "', '" +
        IG0504.Text + "', '" +
        IG060104.Text + "', '" +
        IG060204.Text + "', '" +
        IG060304.Text + "', '" +
        IG060404.Text + "', '" +
        IG060504.Text + "', '" +
        IG070104.Text + "', '" +
        IG070204.Text + "', '" +
        IG070304.Text + "', '" +
        IG070404.Text + "', '" +
        chkMember5.Text + "', '" +
        IG0405.Text + "', '" +
        IG0505.Text + "', '" +
        IG060105.Text + "', '" +
        IG060205.Text + "', '" +
        IG060305.Text + "', '" +
        IG060405.Text + "', '" +
        IG060505.Text + "', '" +
        IG070105.Text + "', '" +
        IG070205.Text + "', '" +
        IG070305.Text + "', '" +
        IG070405.Text + "', '" +
        IG070501.Text + "', '" +
        IG070601.Text + "', '" +
        IG070701.Text + "', '" +
        IG070801.Text + "', '" +
        IG070901.Text + "', '" +
        IG0701001.Text + "', '" +
        IG0701101.Text + "', '" +
        IG0701201.Text + "', '" +
        IG0701301.Text + "', '" +
        IG0801.Text + "', '" +
        IG0901.Text + "', '" +
        IG01001.Text + "', '" +
        IG01101.Text + "', '" +
        IG01201.Text + "', '" +
        IG01301.Text + "', '" +
        IG01401.Text + "', '" +
        IG01501.Text + "', '" +
        IG160101.Text + "', '" +
        IG160201.Text + "', '" +
        IG160301.Text + "', '" +
        IG160401.Text + "', '" +
        IG160501.Text + "', '" +
        IG160601.Text + "', '" +
        IG160701.Text + "', '" +
        IG160801.Text + "', '" +
        IG160901.Text + "', '" +
        IG1601001.Text + "', '" +
        IG1601101.Text + "', '" +
        IG1601201.Text + "', '" +
        IG070502.Text + "', '" +
        IG070602.Text + "', '" +
        IG070702.Text + "', '" +
        IG070802.Text + "', '" +
        IG070902.Text + "', '" +
        IG0701002.Text + "', '" +
        IG0701102.Text + "', '" +
        IG0701202.Text + "', '" +
        IG0701302.Text + "', '" +
        IG0802.Text + "', '" +
        IG0902.Text + "', '" +
        IG01002.Text + "', '" +
        IG01102.Text + "', '" +
        IG01202.Text + "', '" +
        IG01302.Text + "', '" +
        IG01402.Text + "', '" +
        IG01502.Text + "', '" +
        IG160102.Text + "', '" +
        IG160202.Text + "', '" +
        IG160302.Text + "', '" +
        IG160402.Text + "', '" +
        IG160502.Text + "', '" +
        IG160602.Text + "', '" +
        IG160702.Text + "', '" +
        IG160802.Text + "', '" +
        IG160902.Text + "', '" +
        IG1601002.Text + "', '" +
        IG1601102.Text + "', '" +
        IG1601202.Text + "', '" +
        IG070503.Text + "', '" +
        IG070603.Text + "', '" +
        IG070703.Text + "', '" +
        IG070803.Text + "', '" +
        IG070903.Text + "', '" +
        IG0701003.Text + "', '" +
        IG0701103.Text + "', '" +
        IG0701203.Text + "', '" +
        IG0701303.Text + "', '" +
        IG0803.Text + "', '" +
        IG0903.Text + "', '" +
        IG01003.Text + "', '" +
        IG01103.Text + "', '" +
        IG01203.Text + "', '" +
        IG01303.Text + "', '" +
        IG01403.Text + "', '" +
        IG01503.Text + "', '" +
        IG160103.Text + "', '" +
        IG160203.Text + "', '" +
        IG160303.Text + "', '" +
        IG160403.Text + "', '" +
        IG160503.Text + "', '" +
        IG160603.Text + "', '" +
        IG160703.Text + "', '" +
        IG160803.Text + "', '" +
        IG160903.Text + "', '" +
        IG1601003.Text + "', '" +
        IG1601103.Text + "', '" +
        IG1601203.Text + "', '" +
        IG070504.Text + "', '" +
        IG070604.Text + "', '" +
        IG070704.Text + "', '" +
        IG070804.Text + "', '" +
        IG070904.Text + "', '" +
        IG0701004.Text + "', '" +
        IG0701104.Text + "', '" +
        IG0701204.Text + "', '" +
        IG0701304.Text + "', '" +
        IG0804.Text + "', '" +
        IG0904.Text + "', '" +
        IG01004.Text + "', '" +
        IG01104.Text + "', '" +
        IG01204.Text + "', '" +
        IG01304.Text + "', '" +
        IG01404.Text + "', '" +
        IG01504.Text + "', '" +
        IG160104.Text + "', '" +
        IG160204.Text + "', '" +
        IG160304.Text + "', '" +
        IG160404.Text + "', '" +
        IG160504.Text + "', '" +
        IG160604.Text + "', '" +
        IG160704.Text + "', '" +
        IG160804.Text + "', '" +
        IG160904.Text + "', '" +
        IG1601004.Text + "', '" +
        IG1601104.Text + "', '" +
        IG1601204.Text + "', '" +
        IG070505.Text + "', '" +
        IG070605.Text + "', '" +
        IG070705.Text + "', '" +
        IG070805.Text + "', '" +
        IG070905.Text + "', '" +
        IG0701005.Text + "', '" +
        IG0701105.Text + "', '" +
        IG0701205.Text + "', '" +
        IG0701305.Text + "', '" +
        IG0805.Text + "', '" +
        IG0905.Text + "', '" +
        IG01005.Text + "', '" +
        IG01105.Text + "', '" +
        IG01205.Text + "', '" +
        IG01305.Text + "', '" +
        IG01405.Text + "', '" +
        IG01505.Text + "', '" +
        IG160105.Text + "', '" +
        IG160205.Text + "', '" +
        IG160305.Text + "', '" +
        IG160405.Text + "', '" +
        IG160505.Text + "', '" +
        IG160605.Text + "', '" +
        IG160705.Text + "', '" +
        IG160805.Text + "', '" +
        IG160905.Text + "', '" +
        IG1601005.Text + "', '" +
        IG1601105.Text + "', '" +
        IG1601205.Text + "', '" +
        QCFUP02.Text + "', '" +
        QCFUP03.Text + "', '" +
        QCFUP04.Text + "', '" +
        QCFUP05.Text + "', '" +
        QCFUP06.Text + "', '" +
        QCFUP07.Text + "', '" +
        chkBaby5.Text + "', '" +
        IC0605.Text + "', '" +
        IC0705.Text + "', '" +
        IC0805.Text + "', '" +
        IC0905.Text + "', '" +
        IC01005.Text + "', '" +
        IC01105.Text + "', '" +
        chkBaby6.Text + "', '" +
        IC0606.Text + "', '" +
        IC0706.Text + "', '" +
        IC0806.Text + "', '" +
        IC0906.Text + "', '" +
        IC01006.Text + "', '" +
        IC01106.Text + "', '" +
        chkBaby7.Text + "', '" +
        IC0607.Text + "', '" +
        IC0707.Text + "', '" +
        IC0807.Text + "', '" +
        IC0907.Text + "', '" +
        IC01007.Text + "', '" +
        IC01107.Text + "', '" +
        chkBaby8.Text + "', '" +
        IC0608.Text + "', '" +
        IC0708.Text + "', '" +
        IC0808.Text + "', '" +
        IC0908.Text + "', '" +
        IC01008.Text + "', '" +
        IC01108.Text + "', '" +
        chkBaby9.Text + "', '" +
        IC0609.Text + "', '" +
        IC0709.Text + "', '" +
        IC0809.Text + "', '" +
        IC0909.Text + "', '" +
        IC01009.Text + "', '" +
        IC01109.Text + "', '" +
        chkBaby10.Text + "', '" +
        IC06010.Text + "', '" +
        IC07010.Text + "', '" +
        IC08010.Text + "', '" +
        IC09010.Text + "', '" +
        IC01010.Text + "', '" +
        IC01110.Text + "', '" +
        chkBaby11.Text + "', '" +
        IC06011.Text + "', '" +
        IC07011.Text + "', '" +
        IC08011.Text + "', '" +
        IC09011.Text + "', '" +
        IC01011.Text + "', '" +
        IC01111.Text + "', '" +
        chkMember6.Text + "', '" +
        IG0406.Text + "', '" +
        IG0506.Text + "', '" +
        IG060106.Text + "', '" +
        IG060206.Text + "', '" +
        IG060306.Text + "', '" +
        IG060406.Text + "', '" +
        IG060506.Text + "', '" +
        IG070106.Text + "', '" +
        IG070206.Text + "', '" +
        IG070306.Text + "', '" +
        IG070406.Text + "', '" +
        IG070506.Text + "', '" +
        IG070606.Text + "', '" +
        IG070706.Text + "', '" +
        IG070806.Text + "', '" +
        IG070906.Text + "', '" +
        IG0701006.Text + "', '" +
        IG0701106.Text + "', '" +
        IG0701206.Text + "', '" +
        IG0701306.Text + "', '" +
        IG0806.Text + "', '" +
        IG0906.Text + "', '" +
        IG01006.Text + "', '" +
        chkMember7.Text + "', '" +
        IG0407.Text + "', '" +
        IG0507.Text + "', '" +
        IG060107.Text + "', '" +
        IG060207.Text + "', '" +
        IG060307.Text + "', '" +
        IG060407.Text + "', '" +
        IG060507.Text + "', '" +
        IG070107.Text + "', '" +
        IG070207.Text + "', '" +
        IG070307.Text + "', '" +
        IG070407.Text + "', '" +
        IG070507.Text + "', '" +
        IG070607.Text + "', '" +
        IG070707.Text + "', '" +
        IG070807.Text + "', '" +
        IG070907.Text + "', '" +
        IG0701007.Text + "', '" +
        IG0701107.Text + "', '" +
        IG0701207.Text + "', '" +
        IG0701307.Text + "', '" +
        IG0807.Text + "', '" +
        IG0907.Text + "', '" +
        IG01007.Text + "', '" +
        chkMember8.Text + "', '" +
        IG0408.Text + "', '" +
        IG0508.Text + "', '" +
        IG060108.Text + "', '" +
        IG060208.Text + "', '" +
        IG060308.Text + "', '" +
        IG060408.Text + "', '" +
        IG060508.Text + "', '" +
        IG070108.Text + "', '" +
        IG070208.Text + "', '" +
        IG070308.Text + "', '" +
        IG070408.Text + "', '" +
        IG070508.Text + "', '" +
        IG070608.Text + "', '" +
        IG070708.Text + "', '" +
        IG070808.Text + "', '" +
        IG070908.Text + "', '" +
        IG0701008.Text + "', '" +
        IG0701108.Text + "', '" +
        IG0701208.Text + "', '" +
        IG0701308.Text + "', '" +
        IG0808.Text + "', '" +
        IG0908.Text + "', '" +
        IG01008.Text + "', '" +
        chkMember9.Text + "', '" +
        IG0409.Text + "', '" +
        IG0509.Text + "', '" +
        IG060109.Text + "', '" +
        IG060209.Text + "', '" +
        IG060309.Text + "', '" +
        IG060409.Text + "', '" +
        IG060509.Text + "', '" +
        IG070109.Text + "', '" +
        IG070209.Text + "', '" +
        IG070309.Text + "', '" +
        IG070409.Text + "', '" +
        IG070509.Text + "', '" +
        IG070609.Text + "', '" +
        IG070709.Text + "', '" +
        IG070809.Text + "', '" +
        IG070909.Text + "', '" +
        IG0701009.Text + "', '" +
        IG0701109.Text + "', '" +
        IG0701209.Text + "', '" +
        IG0701309.Text + "', '" +
        IG0809.Text + "', '" +
        IG0909.Text + "', '" +
        IG01009.Text + "', '" +
        chkMember10.Text + "', '" +
        IG0410.Text + "', '" +
        IG0510.Text + "', '" +
        IG060110.Text + "', '" +
        IG060210.Text + "', '" +
        IG060310.Text + "', '" +
        IG060410.Text + "', '" +
        IG060510.Text + "', '" +
        IG070110.Text + "', '" +
        IG070210.Text + "', '" +
        IG070310.Text + "', '" +
        IG070410.Text + "', '" +
        IG070510.Text + "', '" +
        IG070610.Text + "', '" +
        IG070710.Text + "', '" +
        IG070810.Text + "', '" +
        IG070910.Text + "', '" +
        IG0701010.Text + "', '" +
        IG0701110.Text + "', '" +
        IG0701210.Text + "', '" +
        IG0701310.Text + "', '" +
        IG0810.Text + "', '" +
        IG0910.Text + "', '" +
        IG01010.Text + "', '" +
        IG01106.Text + "', '" +
        IG01206.Text + "', '" +
        IG01306.Text + "', '" +
        IG01406.Text + "', '" +
        IG01506.Text + "', '" +
        IG01107.Text + "', '" +
        IG01207.Text + "', '" +
        IG01307.Text + "', '" +
        IG01407.Text + "', '" +
        IG01507.Text + "', '" +
        IG01108.Text + "', '" +
        IG01208.Text + "', '" +
        IG01308.Text + "', '" +
        IG01408.Text + "', '" +
        IG01508.Text + "', '" +
        IG01109.Text + "', '" +
        IG01209.Text + "', '" +
        IG01309.Text + "', '" +
        IG01409.Text + "', '" +
        IG01509.Text + "', '" +
        IG01110.Text + "', '" +
        IG01210.Text + "', '" +
        IG01310.Text + "', '" +
        IG01410.Text + "', '" +
        IG01510.Text + "', '" +
        IG160106.Text + "', '" +
        IG160206.Text + "', '" +
        IG160306.Text + "', '" +
        IG160406.Text + "', '" +
        IG160506.Text + "', '" +
        IG160606.Text + "', '" +
        IG160706.Text + "', '" +
        IG160806.Text + "', '" +
        IG160906.Text + "', '" +
        IG1601006.Text + "', '" +
        IG1601106.Text + "', '" +
        IG1601206.Text + "', '" +
        IG160107.Text + "', '" +
        IG160207.Text + "', '" +
        IG160307.Text + "', '" +
        IG160407.Text + "', '" +
        IG160507.Text + "', '" +
        IG160607.Text + "', '" +
        IG160707.Text + "', '" +
        IG160807.Text + "', '" +
        IG160907.Text + "', '" +
        IG1601007.Text + "', '" +
        IG1601107.Text + "', '" +
        IG1601207.Text + "', '" +
        IG160108.Text + "', '" +
        IG160208.Text + "', '" +
        IG160308.Text + "', '" +
        IG160408.Text + "', '" +
        IG160508.Text + "', '" +
        IG160608.Text + "', '" +
        IG160708.Text + "', '" +
        IG160808.Text + "', '" +
        IG160908.Text + "', '" +
        IG1601008.Text + "', '" +
        IG1601108.Text + "', '" +
        IG1601208.Text + "', '" +
        IG160109.Text + "', '" +
        IG160209.Text + "', '" +
        IG160309.Text + "', '" +
        IG160409.Text + "', '" +
        IG160509.Text + "', '" +
        IG160609.Text + "', '" +
        IG160709.Text + "', '" +
        IG160809.Text + "', '" +
        IG160909.Text + "', '" +
        IG1601009.Text + "', '" +
        IG1601109.Text + "', '" +
        IG1601209.Text + "', '" +
        IG160110.Text + "', '" +
        IG160210.Text + "', '" +
        IG160310.Text + "', '" +
        IG160410.Text + "', '" +
        IG160510.Text + "', '" +
        IG160610.Text + "', '" +
        IG160710.Text + "', '" +
        IG160810.Text + "', '" +
        IG160910.Text + "', '" +
        IG1601010.Text + "', '" +
        IG1601110.Text + "', '" +
        IG1601210.Text + "', '" +
        chkMember11.Text + "', '" +
        IG0411.Text + "', '" +
        IG0511.Text + "', '" +
        IG060111.Text + "', '" +
        IG060211.Text + "', '" +
        IG060311.Text + "', '" +
        IG060411.Text + "', '" +
        IG060511.Text + "', '" +
        chkMember12.Text + "', '" +
        IG0412.Text + "', '" +
        IG0512.Text + "', '" +
        IG060112.Text + "', '" +
        IG060212.Text + "', '" +
        IG060312.Text + "', '" +
        IG060412.Text + "', '" +
        IG060512.Text + "', '" +
        chkMember13.Text + "', '" +
        IG0413.Text + "', '" +
        IG0513.Text + "', '" +
        IG060113.Text + "', '" +
        IG060213.Text + "', '" +
        IG060313.Text + "', '" +
        IG060413.Text + "', '" +
        IG060513.Text + "', '" +
        chkMember14.Text + "', '" +
        IG0414.Text + "', '" +
        IG0514.Text + "', '" +
        IG060114.Text + "', '" +
        IG060214.Text + "', '" +
        IG060314.Text + "', '" +
        IG060414.Text + "', '" +
        IG060514.Text + "', '" +
        chkMember15.Text + "', '" +
        IG0415.Text + "', '" +
        IG0515.Text + "', '" +
        IG060115.Text + "', '" +
        IG060215.Text + "', '" +
        IG060315.Text + "', '" +
        IG060415.Text + "', '" +
        IG060515.Text + "', '" +
        IG070111.Text + "', '" +
        IG070211.Text + "', '" +
        IG070311.Text + "', '" +
        IG070411.Text + "', '" +
        IG070511.Text + "', '" +
        IG070611.Text + "', '" +
        IG070711.Text + "', '" +
        IG070811.Text + "', '" +
        IG070911.Text + "', '" +
        IG0701011.Text + "', '" +
        IG0701111.Text + "', '" +
        IG0701211.Text + "', '" +
        IG0701311.Text + "', '" +
        IG0811.Text + "', '" +
        IG0911.Text + "', '" +
        IG01011.Text + "', '" +
        IG01111.Text + "', '" +
        IG01211.Text + "', '" +
        IG01311.Text + "', '" +
        IG01411.Text + "', '" +
        IG01511.Text + "', '" +
        IG070112.Text + "', '" +
        IG070212.Text + "', '" +
        IG070312.Text + "', '" +
        IG070412.Text + "', '" +
        IG070512.Text + "', '" +
        IG070612.Text + "', '" +
        IG070712.Text + "', '" +
        IG070812.Text + "', '" +
        IG070912.Text + "', '" +
        IG0701012.Text + "', '" +
        IG0701112.Text + "', '" +
        IG0701212.Text + "', '" +
        IG0701312.Text + "', '" +
        IG0812.Text + "', '" +
        IG0912.Text + "', '" +
        IG01012.Text + "', '" +
        IG01112.Text + "', '" +
        IG01212.Text + "', '" +
        IG01312.Text + "', '" +
        IG01412.Text + "', '" +
        IG01512.Text + "', '" +
        IG070113.Text + "', '" +
        IG070213.Text + "', '" +
        IG070313.Text + "', '" +
        IG070413.Text + "', '" +
        IG070513.Text + "', '" +
        IG070613.Text + "', '" +
        IG070713.Text + "', '" +
        IG070813.Text + "', '" +
        IG070913.Text + "', '" +
        IG0701013.Text + "', '" +
        IG0701113.Text + "', '" +
        IG0701213.Text + "', '" +
        IG0701313.Text + "', '" +
        IG0813.Text + "', '" +
        IG0913.Text + "', '" +
        IG01013.Text + "', '" +
        IG01113.Text + "', '" +
        IG01213.Text + "', '" +
        IG01313.Text + "', '" +
        IG01413.Text + "', '" +
        IG01513.Text + "', '" +
        IG070114.Text + "', '" +
        IG070214.Text + "', '" +
        IG070314.Text + "', '" +
        IG070414.Text + "', '" +
        IG070514.Text + "', '" +
        IG070614.Text + "', '" +
        IG070714.Text + "', '" +
        IG070814.Text + "', '" +
        IG070914.Text + "', '" +
        IG0701014.Text + "', '" +
        IG0701114.Text + "', '" +
        IG0701214.Text + "', '" +
        IG0701314.Text + "', '" +
        IG0814.Text + "', '" +
        IG0914.Text + "', '" +
        IG01014.Text + "', '" +
        IG01114.Text + "', '" +
        IG01214.Text + "', '" +
        IG01314.Text + "', '" +
        IG01414.Text + "', '" +
        IG01514.Text + "', '" +
        IG070115.Text + "', '" +
        IG070215.Text + "', '" +
        IG070315.Text + "', '" +
        IG070415.Text + "', '" +
        IG070515.Text + "', '" +
        IG070615.Text + "', '" +
        IG070715.Text + "', '" +
        IG070815.Text + "', '" +
        IG070915.Text + "', '" +
        IG0701015.Text + "', '" +
        IG0701115.Text + "', '" +
        IG0701215.Text + "', '" +
        IG0701315.Text + "', '" +
        IG0815.Text + "', '" +
        IG0915.Text + "', '" +
        IG01015.Text + "', '" +
        IG01115.Text + "', '" +
        IG01215.Text + "', '" +
        IG01315.Text + "', '" +
        IG01415.Text + "', '" +
        IG01515.Text + "', '" +
        IG160111.Text + "', '" +
        IG160211.Text + "', '" +
        IG160311.Text + "', '" +
        IG160411.Text + "', '" +
        IG160511.Text + "', '" +
        IG160611.Text + "', '" +
        IG160711.Text + "', '" +
        IG160811.Text + "', '" +
        IG160911.Text + "', '" +
        IG1601011.Text + "', '" +
        IG1601111.Text + "', '" +
        IG1601211.Text + "', '" +
        IG160112.Text + "', '" +
        IG160212.Text + "', '" +
        IG160312.Text + "', '" +
        IG160412.Text + "', '" +
        IG160512.Text + "', '" +
        IG160612.Text + "', '" +
        IG160712.Text + "', '" +
        IG160812.Text + "', '" +
        IG160912.Text + "', '" +
        IG1601012.Text + "', '" +
        IG1601112.Text + "', '" +
        IG1601212.Text + "', '" +
        IG160113.Text + "', '" +
        IG160213.Text + "', '" +
        IG160313.Text + "', '" +
        IG160413.Text + "', '" +
        IG160513.Text + "', '" +
        IG160613.Text + "', '" +
        IG160713.Text + "', '" +
        IG160813.Text + "', '" +
        IG160913.Text + "', '" +
        IG1601013.Text + "', '" +
        IG1601113.Text + "', '" +
        IG1601213.Text + "', '" +
        IG160114.Text + "', '" +
        IG160214.Text + "', '" +
        IG160314.Text + "', '" +
        IG160414.Text + "', '" +
        IG160514.Text + "', '" +
        IG160614.Text + "', '" +
        IG160714.Text + "', '" +
        IG160814.Text + "', '" +
        IG160914.Text + "', '" +
        IG1601014.Text + "', '" +
        IG1601114.Text + "', '" +
        IG1601214.Text + "', '" +
        IG160115.Text + "', '" +
        IG160215.Text + "', '" +
        IG160315.Text + "', '" +
        IG160415.Text + "', '" +
        IG160515.Text + "', '" +
        IG160615.Text + "', '" +
        IG160715.Text + "', '" +
        IG160815.Text + "', '" +
        IG160915.Text + "', '" +
        IG1601015.Text + "', '" +
        IG1601115.Text + "', '" +
        IG1601215.Text + "', '" +
        EntryDate.ToShortDateString() + "', '" +
        CVariables.UserName + "')";


                obj_op = new CDBOperations();
                obj_op.ExecuteNonQuery_Casi(fldname, fldvalue, qry);

                MessageBox.Show("Record saved successfully ", "Message", MessageBoxButtons.OK, MessageBoxIcon.Information);

                FORM_ID.Text = "";
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }
        }




        private void UpdateRecord(string tblname)
        {
            string[] my_dt;


            CDBOperations obj_op = null;
            string form_id = null;

            try
            {
                my_dt = DateTime.Now.Date.ToString().Split('/');

                DateTime EntryDate = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                EntryDate = Convert.ToDateTime(DateTime.Now.Date);


                DateTime dt_IB04 = new DateTime();

                if (IB04.Text != "  /  /")
                {
                    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                    dt_IB04 = Convert.ToDateTime(IB04.Text);
                }



                DateTime dt_QCFUP05 = new DateTime();

                if (QCFUP05.Text != "  /  /")
                {
                    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                    dt_QCFUP05 = Convert.ToDateTime(QCFUP05.Text);
                }



                if (maskedTextBox1.Text == "")
                {
                    form_id = FORM_ID.Text;
                }
                else
                {
                    form_id = maskedTextBox1.Text;
                }

                string[] fldname = { };
                string[] fldvalue = { };

                //string[] fldname = { "IA01", "IA02", "IA03", "IA04", "IA05", "IB01", "IB02", "IB03", "IB04", "IB05", "IB06", "IB07", "IB08", "IB09", "IB0901", "IB0902", "IB0903", "IB0996", "IC01", "IC02", "IC03", "IC04", "IC05", "ckkBaby1", "IC0601", "IC0701", "IC0801", "IC0901", "IC01001", "IC01101", "ckkBaby2", "IC0602", "IC0702", "IC0802", "IC0902", "IC01002", "IC01102", "ckkBaby3", "IC0603", "IC0703", "IC0803", "IC0903", "IC01003", "IC01103", "ckkBaby4", "IC0604", "IC0704", "IC0804", "IC0904", "IC01004", "IC01104", "ID01", "ID02", "ID03", "ID04", "IE01", "IE02", "IE03", "IE04", "chkHHMem1", "IE0701", "chkHHMem2", "IE0702", "chkHHMem3", "IE0703", "chkHHMem4", "IE0704", "IE0801", "IE0901", "IE0802", "IE0902", "IE0803", "IE0903", "IE0804", "IE0904", "IF01", "IF02", "IF03", "IF04", "chkPW1", "IF0601", "chkPW2", "IF0602", "chkPW3", "IF0603", "chkPW4", "IF0604", "IG01", "IG02", "IG0301", "IG0302", "IG0303", "IG0304", "IG0305", "IG0306", "IG0307", "IG0308", "IG0309", "IG03010", "chkMember1", "IG0401", "IG0501", "IG060101", "IG060201", "IG060301", "IG060401", "IG060501", "IG070101", "IG070201", "IG070301", "IG070401", "chkMember2", "IG0402", "IG0502", "IG060102", "IG060202", "IG060302", "IG060402", "IG060502", "IG070102", "IG070202", "IG070302", "IG070402", "chkMember3", "IG0403", "IG0503", "IG060103", "IG060203", "IG060303", "IG060403", "IG060503", "IG070103", "IG070203", "IG070303", "IG070403", "chkMember4", "IG0404", "IG0504", "IG060104", "IG060204", "IG060304", "IG060404", "IG060504", "IG070104", "IG070204", "IG070304", "IG070404", "chkMember5", "IG0405", "IG0505", "IG060105", "IG060205", "IG060305", "IG060405", "IG060505", "IG070105", "IG070205", "IG070305", "IG070405", "IG070501", "IG070601", "IG070701", "IG070801", "IG070901", "IG0701001", "IG0701101", "IG0701201", "IG0701301", "IG0801", "IG0901", "IG01001", "IG01101", "IG01201", "IG01301", "IG01401", "IG01501", "IG160101", "IG160201", "IG160301", "IG160401", "IG160501", "IG070502", "IG070602", "IG070702", "IG070802", "IG070902", "IG0701002", "IG0701102", "IG0701202", "IG0701302", "IG0802", "IG0902", "IG01002", "IG01102", "IG01202", "IG01302", "IG01402", "IG01502", "IG160102", "IG160202", "IG160302", "IG160402", "IG160502", "IG070503", "IG070603", "IG070703", "IG070803", "IG070903", "IG0701003", "IG0701103", "IG0701203", "IG0701303", "IG0803", "IG0903", "IG01003", "IG01103", "IG01203", "IG01303", "IG01403", "IG01503", "IG160103", "IG160203", "IG160303", "IG160403", "IG160503", "IG070504", "IG070604", "IG070704", "IG070804", "IG070904", "IG0701004", "IG0701104", "IG0701204", "IG0701304", "IG0804", "IG0904", "IG01004", "IG01104", "IG01204", "IG01304", "IG01404", "IG01504", "IG160104", "IG160204", "IG160304", "IG160404", "IG160504", "IG070505", "IG070605", "IG070705", "IG070805", "IG070905", "IG0701005", "IG0701105", "IG0701205", "IG0701305", "IG0805", "IG0905", "IG01005", "IG01105", "IG01205", "IG01305", "IG01405", "IG01505", "IG160105", "IG160205", "IG160305", "IG160405", "IG160505", "IG160601", "IG160701", "IG160801", "IG160901", "IG1601001", "IG1601101", "IG1601201", "IG160602", "IG160702", "IG160802", "IG160902", "IG1601002", "IG1601102", "IG1601202", "IG160603", "IG160703", "IG160803", "IG160903", "IG1601003", "IG1601103", "IG1601203", "IG160604", "IG160704", "IG160804", "IG160904", "IG1601004", "IG1601104", "IG1601204", "IG160605", "IG160705", "IG160805", "IG160905", "IG1601005", "IG1601105", "IG1601205", "QCFUP01", "QCFUP02", "QCFUP03", "QCFUP04", "QCFUP05", "QCFUP06", "QCFUP07", "ckkBaby5", "IC0605", "IC0705", "IC0805", "IC0905", "IC01005", "IC01105", "ckkBaby6", "IC0606", "IC0706", "IC0806", "IC0906", "IC01006", "IC01106", "ckkBaby7", "IC0607", "IC0707", "IC0807", "IC0907", "IC01007", "IC01107", "ckkBaby8", "IC0608", "IC0708", "IC0808", "IC0908", "IC01008", "IC01108", "ckkBaby9", "IC0609", "IC0709", "IC0809", "IC0909", "IC01009", "IC01109", "ckkBaby10", "IC06010", "IC07010", "IC08010", "IC09010", "IC01010", "IC01110", "ckkBaby11", "IC06011", "IC07011", "IC08011", "IC09011", "IC01011", "IC01111", "chkMember6", "IG0406", "IG0506", "IG060106", "IG060206", "IG060306", "IG060406", "IG060506", "IG070106", "IG070206", "IG070306", "IG070406", "IG070506", "IG070606", "IG070706", "IG070806", "IG070906", "IG0701006", "IG0701106", "IG0701206", "IG0701306", "IG0806", "IG0906", "IG01006", "chkMember7", "IG0407", "IG0507", "IG060107", "IG060207", "IG060307", "IG060407", "IG060507", "IG070107", "IG070207", "IG070307", "IG070407", "IG070507", "IG070607", "IG070707", "IG070807", "IG070907", "IG0701007", "IG0701107", "IG0701207", "IG0701307", "IG0807", "IG0907", "IG01007", "chkMember8", "IG0408", "IG0508", "IG060108", "IG060208", "IG060308", "IG060408", "IG060508", "IG070108", "IG070208", "IG070308", "IG070408", "IG070508", "IG070608", "IG070708", "IG070808", "IG070908", "IG0701008", "IG0701108", "IG0701208", "IG0701308", "IG0808", "IG0908", "IG01008", "chkMember9", "IG0409", "IG0509", "IG060109", "IG060209", "IG060309", "IG060409", "IG060509", "IG070109", "IG070209", "IG070309", "IG070409", "IG070509", "IG070609", "IG070709", "IG070809", "IG070909", "IG0701009", "IG0701109", "IG0701209", "IG0701309", "IG0809", "IG0909", "IG01009", "chkMember10", "IG0410", "IG0510", "IG060110", "IG060210", "IG060310", "IG060410", "IG060510", "IG070110", "IG070210", "IG070310", "IG070410", "IG070510", "IG070610", "IG070710", "IG070810", "IG070910", "IG0701010", "IG0701110", "IG0701210", "IG0701310", "IG0810", "IG0910", "IG01010", "IG01106", "IG01206", "IG01306", "IG01406", "IG01506", "IG01107", "IG01207", "IG01307", "IG01407", "IG01507", "IG01108", "IG01208", "IG01308", "IG01408", "IG01508", "IG01109", "IG01209", "IG01309", "IG01409", "IG01509", "IG01110", "IG01210", "IG01310", "IG01410", "IG01510", "IG160106", "IG160206", "IG160306", "IG160406", "IG160506", "IG160606", "IG160706", "IG160806", "IG160906", "IG1601006", "IG1601106", "IG1601206", "IG160107", "IG160207", "IG160307", "IG160407", "IG160507", "IG160607", "IG160707", "IG160807", "IG160907", "IG1601007", "IG1601107", "IG1601207", "IG160108", "IG160208", "IG160308", "IG160408", "IG160508", "IG160608", "IG160708", "IG160808", "IG160908", "IG1601008", "IG1601108", "IG1601208", "IG160109", "IG160209", "IG160309", "IG160409", "IG160509", "IG160609", "IG160709", "IG160809", "IG160909", "IG1601009", "IG1601109", "IG1601209", "IG160110", "IG160210", "IG160310", "IG160410", "IG160510", "IG160610", "IG160710", "IG160810", "IG160910", "IG1601010", "IG1601110", "IG1601210", "chkMember11", "IG0411", "IG0511", "IG060111", "IG060211", "IG060311", "IG060411", "IG060511", "chkMember12", "IG0412", "IG0512", "IG060112", "IG060212", "IG060312", "IG060412", "IG060512", "chkMember13", "IG0413", "IG0513", "IG060113", "IG060213", "IG060313", "IG060413", "IG060513", "chkMember14", "IG0414", "IG0514", "IG060114", "IG060214", "IG060314", "IG060414", "IG060514", "chkMember15", "IG0415", "IG0515", "IG060115", "IG060215", "IG060315", "IG060415", "IG060515", "IG070111", "IG070211", "IG070311", "IG070411", "IG070511", "IG070611", "IG070711", "IG070811", "IG070911", "IG0701011", "IG0701111", "IG0701211", "IG0701311", "IG0811", "IG0911", "IG01011", "IG01111", "IG01211", "IG01311", "IG01411", "IG01511", "IG070112", "IG070212", "IG070312", "IG070412", "IG070512", "IG070612", "IG070712", "IG070812", "IG070912", "IG0701012", "IG0701112", "IG0701212", "IG0701312", "IG0812", "IG0912", "IG01012", "IG01112", "IG01212", "IG01312", "IG01412", "IG01512", "IG070113", "IG070213", "IG070313", "IG070413", "IG070513", "IG070613", "IG070713", "IG070813", "IG070913", "IG0701013", "IG0701113", "IG0701213", "IG0701313", "IG0813", "IG0913", "IG01013", "IG01113", "IG01213", "IG01313", "IG01413", "IG01513", "IG070114", "IG070214", "IG070314", "IG070414", "IG070514", "IG070614", "IG070714", "IG070814", "IG070914", "IG0701014", "IG0701114", "IG0701214", "IG0701314", "IG0814", "IG0914", "IG01014", "IG01114", "IG01214", "IG01314", "IG01414", "IG01514", "IG070115", "IG070215", "IG070315", "IG070415", "IG070515", "IG070615", "IG070715", "IG070815", "IG070915", "IG0701015", "IG0701115", "IG0701215", "IG0701315", "IG0815", "IG0915", "IG01015", "IG01115", "IG01215", "IG01315", "IG01415", "IG01515", "IG160111", "IG160211", "IG160311", "IG160411", "IG160511", "IG160611", "IG160711", "IG160811", "IG160911", "IG1601011", "IG1601111", "IG1601211", "IG160112", "IG160212", "IG160312", "IG160412", "IG160512", "IG160612", "IG160712", "IG160812", "IG160912", "IG1601012", "IG1601112", "IG1601212", "IG160113", "IG160213", "IG160313", "IG160413", "IG160513", "IG160613", "IG160713", "IG160813", "IG160913", "IG1601013", "IG1601113", "IG1601213", "IG160114", "IG160214", "IG160314", "IG160414", "IG160514", "IG160614", "IG160714", "IG160814", "IG160914", "IG1601014", "IG1601114", "IG1601214", "IG160115", "IG160215", "IG160315", "IG160415", "IG160515", "IG160615", "IG160715", "IG160815", "IG160915", "IG1601015", "IG1601115", "IG1601215" };
                //string[] fldvalue = { IA01.Text, IA02.Text, IA03.Text, IA04.Text, IA05.Text, IB01.Text, IB02.Text, IB03.Text, IB04.Text, IB05.Text, IB06.Text, IB07.Text, IB08.Text, IB09.Text, IB0901.Text, IB0902.Text, IB0903.Text, IB0996.Text, IC01.Text, IC02.Text, IC03.Text, IC04.Text, IC05.Text, ckkBaby1.Text, IC0601.Text, IC0701.Text, IC0801.Text, IC0901.Text, IC01001.Text, IC01101.Text, ckkBaby2.Text, IC0602.Text, IC0702.Text, IC0802.Text, IC0902.Text, IC01002.Text, IC01102.Text, ckkBaby3.Text, IC0603.Text, IC0703.Text, IC0803.Text, IC0903.Text, IC01003.Text, IC01103.Text, ckkBaby4.Text, IC0604.Text, IC0704.Text, IC0804.Text, IC0904.Text, IC01004.Text, IC01104.Text, ID01.Text, ID02.Text, ID03.Text, ID04.Text, IE01.Text, IE02.Text, IE03.Text, IE04.Text, chkHHMem1.Text, IE0701.Text, chkHHMem2.Text, IE0702.Text, chkHHMem3.Text, IE0703.Text, chkHHMem4.Text, IE0704.Text, IE0801.Text, IE0901.Text, IE0802.Text, IE0902.Text, IE0803.Text, IE0903.Text, IE0804.Text, IE0904.Text, IF01.Text, IF02.Text, IF03.Text, IF04.Text, chkPW1.Text, IF0601.Text, chkPW2.Text, IF0602.Text, chkPW3.Text, IF0603.Text, chkPW4.Text, IF0604.Text, IG01.Text, IG02.Text, IG0301.Text, IG0302.Text, IG0303.Text, IG0304.Text, IG0305.Text, IG0306.Text, IG0307.Text, IG0308.Text, IG0309.Text, IG03010.Text, chkMember1.Text, IG0401.Text, IG0501.Text, IG060101.Text, IG060201.Text, IG060301.Text, IG060401.Text, IG060501.Text, IG070101.Text, IG070201.Text, IG070301.Text, IG070401.Text, chkMember2.Text, IG0402.Text, IG0502.Text, IG060102.Text, IG060202.Text, IG060302.Text, IG060402.Text, IG060502.Text, IG070102.Text, IG070202.Text, IG070302.Text, IG070402.Text, chkMember3.Text, IG0403.Text, IG0503.Text, IG060103.Text, IG060203.Text, IG060303.Text, IG060403.Text, IG060503.Text, IG070103.Text, IG070203.Text, IG070303.Text, IG070403.Text, chkMember4.Text, IG0404.Text, IG0504.Text, IG060104.Text, IG060204.Text, IG060304.Text, IG060404.Text, IG060504.Text, IG070104.Text, IG070204.Text, IG070304.Text, IG070404.Text, chkMember5.Text, IG0405.Text, IG0505.Text, IG060105.Text, IG060205.Text, IG060305.Text, IG060405.Text, IG060505.Text, IG070105.Text, IG070205.Text, IG070305.Text, IG070405.Text, IG070501.Text, IG070601.Text, IG070701.Text, IG070801.Text, IG070901.Text, IG0701001.Text, IG0701101.Text, IG0701201.Text, IG0701301.Text, IG0801.Text, IG0901.Text, IG01001.Text, IG01101.Text, IG01201.Text, IG01301.Text, IG01401.Text, IG01501.Text, IG160101.Text, IG160201.Text, IG160301.Text, IG160401.Text, IG160501.Text, IG070502.Text, IG070602.Text, IG070702.Text, IG070802.Text, IG070902.Text, IG0701002.Text, IG0701102.Text, IG0701202.Text, IG0701302.Text, IG0802.Text, IG0902.Text, IG01002.Text, IG01102.Text, IG01202.Text, IG01302.Text, IG01402.Text, IG01502.Text, IG160102.Text, IG160202.Text, IG160302.Text, IG160402.Text, IG160502.Text, IG070503.Text, IG070603.Text, IG070703.Text, IG070803.Text, IG070903.Text, IG0701003.Text, IG0701103.Text, IG0701203.Text, IG0701303.Text, IG0803.Text, IG0903.Text, IG01003.Text, IG01103.Text, IG01203.Text, IG01303.Text, IG01403.Text, IG01503.Text, IG160103.Text, IG160203.Text, IG160303.Text, IG160403.Text, IG160503.Text, IG070504.Text, IG070604.Text, IG070704.Text, IG070804.Text, IG070904.Text, IG0701004.Text, IG0701104.Text, IG0701204.Text, IG0701304.Text, IG0804.Text, IG0904.Text, IG01004.Text, IG01104.Text, IG01204.Text, IG01304.Text, IG01404.Text, IG01504.Text, IG160104.Text, IG160204.Text, IG160304.Text, IG160404.Text, IG160504.Text, IG070505.Text, IG070605.Text, IG070705.Text, IG070805.Text, IG070905.Text, IG0701005.Text, IG0701105.Text, IG0701205.Text, IG0701305.Text, IG0805.Text, IG0905.Text, IG01005.Text, IG01105.Text, IG01205.Text, IG01305.Text, IG01405.Text, IG01505.Text, IG160105.Text, IG160205.Text, IG160305.Text, IG160405.Text, IG160505.Text, IG160601.Text, IG160701.Text, IG160801.Text, IG160901.Text, IG1601001.Text, IG1601101.Text, IG1601201.Text, IG160602.Text, IG160702.Text, IG160802.Text, IG160902.Text, IG1601002.Text, IG1601102.Text, IG1601202.Text, IG160603.Text, IG160703.Text, IG160803.Text, IG160903.Text, IG1601003.Text, IG1601103.Text, IG1601203.Text, IG160604.Text, IG160704.Text, IG160804.Text, IG160904.Text, IG1601004.Text, IG1601104.Text, IG1601204.Text, IG160605.Text, IG160705.Text, IG160805.Text, IG160905.Text, IG1601005.Text, IG1601105.Text, IG1601205.Text, QCFUP01.Text, QCFUP02.Text, QCFUP03.Text, QCFUP04.Text, QCFUP05.Text, QCFUP06.Text, QCFUP07.Text, ckkBaby5.Text, IC0605.Text, IC0705.Text, IC0805.Text, IC0905.Text, IC01005.Text, IC01105.Text, ckkBaby6.Text, IC0606.Text, IC0706.Text, IC0806.Text, IC0906.Text, IC01006.Text, IC01106.Text, ckkBaby7.Text, IC0607.Text, IC0707.Text, IC0807.Text, IC0907.Text, IC01007.Text, IC01107.Text, ckkBaby8.Text, IC0608.Text, IC0708.Text, IC0808.Text, IC0908.Text, IC01008.Text, IC01108.Text, ckkBaby9.Text, IC0609.Text, IC0709.Text, IC0809.Text, IC0909.Text, IC01009.Text, IC01109.Text, ckkBaby10.Text, IC06010.Text, IC07010.Text, IC08010.Text, IC09010.Text, IC01010.Text, IC01110.Text, ckkBaby11.Text, IC06011.Text, IC07011.Text, IC08011.Text, IC09011.Text, IC01011.Text, IC01111.Text, chkMember6.Text, IG0406.Text, IG0506.Text, IG060106.Text, IG060206.Text, IG060306.Text, IG060406.Text, IG060506.Text, IG070106.Text, IG070206.Text, IG070306.Text, IG070406.Text, IG070506.Text, IG070606.Text, IG070706.Text, IG070806.Text, IG070906.Text, IG0701006.Text, IG0701106.Text, IG0701206.Text, IG0701306.Text, IG0806.Text, IG0906.Text, IG01006.Text, chkMember7.Text, IG0407.Text, IG0507.Text, IG060107.Text, IG060207.Text, IG060307.Text, IG060407.Text, IG060507.Text, IG070107.Text, IG070207.Text, IG070307.Text, IG070407.Text, IG070507.Text, IG070607.Text, IG070707.Text, IG070807.Text, IG070907.Text, IG0701007.Text, IG0701107.Text, IG0701207.Text, IG0701307.Text, IG0807.Text, IG0907.Text, IG01007.Text, chkMember8.Text, IG0408.Text, IG0508.Text, IG060108.Text, IG060208.Text, IG060308.Text, IG060408.Text, IG060508.Text, IG070108.Text, IG070208.Text, IG070308.Text, IG070408.Text, IG070508.Text, IG070608.Text, IG070708.Text, IG070808.Text, IG070908.Text, IG0701008.Text, IG0701108.Text, IG0701208.Text, IG0701308.Text, IG0808.Text, IG0908.Text, IG01008.Text, chkMember9.Text, IG0409.Text, IG0509.Text, IG060109.Text, IG060209.Text, IG060309.Text, IG060409.Text, IG060509.Text, IG070109.Text, IG070209.Text, IG070309.Text, IG070409.Text, IG070509.Text, IG070609.Text, IG070709.Text, IG070809.Text, IG070909.Text, IG0701009.Text, IG0701109.Text, IG0701209.Text, IG0701309.Text, IG0809.Text, IG0909.Text, IG01009.Text, chkMember10.Text, IG0410.Text, IG0510.Text, IG060110.Text, IG060210.Text, IG060310.Text, IG060410.Text, IG060510.Text, IG070110.Text, IG070210.Text, IG070310.Text, IG070410.Text, IG070510.Text, IG070610.Text, IG070710.Text, IG070810.Text, IG070910.Text, IG0701010.Text, IG0701110.Text, IG0701210.Text, IG0701310.Text, IG0810.Text, IG0910.Text, IG01010.Text, IG01106.Text, IG01206.Text, IG01306.Text, IG01406.Text, IG01506.Text, IG01107.Text, IG01207.Text, IG01307.Text, IG01407.Text, IG01507.Text, IG01108.Text, IG01208.Text, IG01308.Text, IG01408.Text, IG01508.Text, IG01109.Text, IG01209.Text, IG01309.Text, IG01409.Text, IG01509.Text, IG01110.Text, IG01210.Text, IG01310.Text, IG01410.Text, IG01510.Text, IG160106.Text, IG160206.Text, IG160306.Text, IG160406.Text, IG160506.Text, IG160606.Text, IG160706.Text, IG160806.Text, IG160906.Text, IG1601006.Text, IG1601106.Text, IG1601206.Text, IG160107.Text, IG160207.Text, IG160307.Text, IG160407.Text, IG160507.Text, IG160607.Text, IG160707.Text, IG160807.Text, IG160907.Text, IG1601007.Text, IG1601107.Text, IG1601207.Text, IG160108.Text, IG160208.Text, IG160308.Text, IG160408.Text, IG160508.Text, IG160608.Text, IG160708.Text, IG160808.Text, IG160908.Text, IG1601008.Text, IG1601108.Text, IG1601208.Text, IG160109.Text, IG160209.Text, IG160309.Text, IG160409.Text, IG160509.Text, IG160609.Text, IG160709.Text, IG160809.Text, IG160909.Text, IG1601009.Text, IG1601109.Text, IG1601209.Text, IG160110.Text, IG160210.Text, IG160310.Text, IG160410.Text, IG160510.Text, IG160610.Text, IG160710.Text, IG160810.Text, IG160910.Text, IG1601010.Text, IG1601110.Text, IG1601210.Text, chkMember11.Text, IG0411.Text, IG0511.Text, IG060111.Text, IG060211.Text, IG060311.Text, IG060411.Text, IG060511.Text, chkMember12.Text, IG0412.Text, IG0512.Text, IG060112.Text, IG060212.Text, IG060312.Text, IG060412.Text, IG060512.Text, chkMember13.Text, IG0413.Text, IG0513.Text, IG060113.Text, IG060213.Text, IG060313.Text, IG060413.Text, IG060513.Text, chkMember14.Text, IG0414.Text, IG0514.Text, IG060114.Text, IG060214.Text, IG060314.Text, IG060414.Text, IG060514.Text, chkMember15.Text, IG0415.Text, IG0515.Text, IG060115.Text, IG060215.Text, IG060315.Text, IG060415.Text, IG060515.Text, IG070111.Text, IG070211.Text, IG070311.Text, IG070411.Text, IG070511.Text, IG070611.Text, IG070711.Text, IG070811.Text, IG070911.Text, IG0701011.Text, IG0701111.Text, IG0701211.Text, IG0701311.Text, IG0811.Text, IG0911.Text, IG01011.Text, IG01111.Text, IG01211.Text, IG01311.Text, IG01411.Text, IG01511.Text, IG070112.Text, IG070212.Text, IG070312.Text, IG070412.Text, IG070512.Text, IG070612.Text, IG070712.Text, IG070812.Text, IG070912.Text, IG0701012.Text, IG0701112.Text, IG0701212.Text, IG0701312.Text, IG0812.Text, IG0912.Text, IG01012.Text, IG01112.Text, IG01212.Text, IG01312.Text, IG01412.Text, IG01512.Text, IG070113.Text, IG070213.Text, IG070313.Text, IG070413.Text, IG070513.Text, IG070613.Text, IG070713.Text, IG070813.Text, IG070913.Text, IG0701013.Text, IG0701113.Text, IG0701213.Text, IG0701313.Text, IG0813.Text, IG0913.Text, IG01013.Text, IG01113.Text, IG01213.Text, IG01313.Text, IG01413.Text, IG01513.Text, IG070114.Text, IG070214.Text, IG070314.Text, IG070414.Text, IG070514.Text, IG070614.Text, IG070714.Text, IG070814.Text, IG070914.Text, IG0701014.Text, IG0701114.Text, IG0701214.Text, IG0701314.Text, IG0814.Text, IG0914.Text, IG01014.Text, IG01114.Text, IG01214.Text, IG01314.Text, IG01414.Text, IG01514.Text, IG070115.Text, IG070215.Text, IG070315.Text, IG070415.Text, IG070515.Text, IG070615.Text, IG070715.Text, IG070815.Text, IG070915.Text, IG0701015.Text, IG0701115.Text, IG0701215.Text, IG0701315.Text, IG0815.Text, IG0915.Text, IG01015.Text, IG01115.Text, IG01215.Text, IG01315.Text, IG01415.Text, IG01515.Text, IG160111.Text, IG160211.Text, IG160311.Text, IG160411.Text, IG160511.Text, IG160611.Text, IG160711.Text, IG160811.Text, IG160911.Text, IG1601011.Text, IG1601111.Text, IG1601211.Text, IG160112.Text, IG160212.Text, IG160312.Text, IG160412.Text, IG160512.Text, IG160612.Text, IG160712.Text, IG160812.Text, IG160912.Text, IG1601012.Text, IG1601112.Text, IG1601212.Text, IG160113.Text, IG160213.Text, IG160313.Text, IG160413.Text, IG160513.Text, IG160613.Text, IG160713.Text, IG160813.Text, IG160913.Text, IG1601013.Text, IG1601113.Text, IG1601213.Text, IG160114.Text, IG160214.Text, IG160314.Text, IG160414.Text, IG160514.Text, IG160614.Text, IG160714.Text, IG160814.Text, IG160914.Text, IG1601014.Text, IG1601114.Text, IG1601214.Text, IG160115.Text, IG160215.Text, IG160315.Text, IG160415.Text, IG160515.Text, IG160615.Text, IG160715.Text, IG160815.Text, IG160915.Text, IG1601015.Text, IG1601115.Text, IG1601215.Text };



                string qry = "UPDATE " + tblname + " set " +
        "IA01 = '" + IA01.Text + "', " +
        "IA02 = '" + IA02.Text + "', " +
        "IA03 = '" + IA03.Text + "', " +
        "IA04 = '" + IA04.Text + "', " +
        "IA05 = '" + IA05.Text + "', " +
        "IB01 = '" + IB01.Text + "', " +
        "IB02 = '" + IB02.Text + "', " +
        "IB03 = '" + IB03.Text + "', " +
        "IB04 = '" + IB04.Text + "', " +
        "IB04a = '" + IB04a.Text + "', " +
        "IB05 = '" + IB05.Text + "', " +
        "IB06 = '" + IB06.Text + "', " +
        "IB07 = '" + IB07.Text + "', " +
        "IB08 = '" + IB08.Text + "', " +
        "IB0901 = '" + IB0901.Text + "', " +
        "IB0902 = '" + IB0902.Text + "', " +
        "IB0903 = '" + IB0903.Text + "', " +
        "IB0996 = '" + IB0996.Text + "', " +
        "IB010 = '" + IB010.Text + "', " +
        "IB011 = '" + IB011.Text + "', " +
        "IC01 = '" + IC01.Text + "', " +
        "IC02 = '" + IC02.Text + "', " +
        "IC03 = '" + IC03.Text + "', " +
        "IC04 = '" + IC04.Text + "', " +
        "IC05 = '" + IC05.Text + "', " +
        "chkBaby1 = '" + chkBaby1.Text + "', " +
        "IC0601 = '" + IC0601.Text + "', " +
        "IC0701 = '" + IC0701.Text + "', " +
        "IC0801 = '" + IC0801.Text + "', " +
        "IC0901 = '" + IC0901.Text + "', " +
        "IC01001 = '" + IC01001.Text + "', " +
        "IC01101 = '" + IC01101.Text + "', " +
        "chkBaby2 = '" + chkBaby2.Text + "', " +
        "IC0602 = '" + IC0602.Text + "', " +
        "IC0702 = '" + IC0702.Text + "', " +
        "IC0802 = '" + IC0802.Text + "', " +
        "IC0902 = '" + IC0902.Text + "', " +
        "IC01002 = '" + IC01002.Text + "', " +
        "IC01102 = '" + IC01102.Text + "', " +
        "chkBaby3 = '" + chkBaby3.Text + "', " +
        "IC0603 = '" + IC0603.Text + "', " +
        "IC0703 = '" + IC0703.Text + "', " +
        "IC0803 = '" + IC0803.Text + "', " +
        "IC0903 = '" + IC0903.Text + "', " +
        "IC01003 = '" + IC01003.Text + "', " +
        "IC01103 = '" + IC01103.Text + "', " +
        "chkBaby4 = '" + chkBaby4.Text + "', " +
        "IC0604 = '" + IC0604.Text + "', " +
        "IC0704 = '" + IC0704.Text + "', " +
        "IC0804 = '" + IC0804.Text + "', " +
        "IC0904 = '" + IC0904.Text + "', " +
        "IC01004 = '" + IC01004.Text + "', " +
        "IC01104 = '" + IC01104.Text + "', " +
        "ID01 = '" + ID01.Text + "', " +
        "ID02 = '" + ID02.Text + "', " +
        "ID03 = '" + ID03.Text + "', " +
        "ID04 = '" + ID04.Text + "', " +
        "IE01 = '" + IE01.Text + "', " +
        "IE02 = '" + IE02.Text + "', " +
        "IE03 = '" + IE03.Text + "', " +
        "IE04 = '" + IE04.Text + "', " +
        "chkHHMem1 = '" + chkHHMem1.Text + "', " +
        "IE0701 = '" + IE0701.Text + "', " +
        "chkHHMem2 = '" + chkHHMem2.Text + "', " +
        "IE0702 = '" + IE0702.Text + "', " +
        "chkHHMem3 = '" + chkHHMem3.Text + "', " +
        "IE0703 = '" + IE0703.Text + "', " +
        "chkHHMem4 = '" + chkHHMem4.Text + "', " +
        "IE0704 = '" + IE0704.Text + "', " +
        "IE0801 = '" + IE0801.Text + "', " +
        "IE0901 = '" + IE0901.Text + "', " +
        "IE0802 = '" + IE0802.Text + "', " +
        "IE0902 = '" + IE0902.Text + "', " +
        "IE0803 = '" + IE0803.Text + "', " +
        "IE0903 = '" + IE0903.Text + "', " +
        "IE0804 = '" + IE0804.Text + "', " +
        "IE0904 = '" + IE0904.Text + "', " +
        "IF01 = '" + IF01.Text + "', " +
        "IF02 = '" + IF02.Text + "', " +
        "IF03 = '" + IF03.Text + "', " +
        "IF04 = '" + IF04.Text + "', " +
        "chkPW1 = '" + chkPW1.Text + "', " +
        "IF0601 = '" + IF0601.Text + "', " +
        "chkPW2 = '" + chkPW2.Text + "', " +
        "IF0602 = '" + IF0602.Text + "', " +
        "chkPW3 = '" + chkPW3.Text + "', " +
        "IF0603 = '" + IF0603.Text + "', " +
        "chkPW4 = '" + chkPW4.Text + "', " +
        "IF0604 = '" + IF0604.Text + "', " +
        "IG01 = '" + IG01.Text + "', " +
        "IG02 = '" + IG02.Text + "', " +
        "IG0301 = '" + IG0301.Text + "', " +
        "IG0302 = '" + IG0302.Text + "', " +
        "IG0303 = '" + IG0303.Text + "', " +
        "IG0304 = '" + IG0304.Text + "', " +
        "IG0305 = '" + IG0305.Text + "', " +
        "IG0306 = '" + IG0306.Text + "', " +
        "IG0307 = '" + IG0307.Text + "', " +
        "IG0308 = '" + IG0308.Text + "', " +
        "IG0309 = '" + IG0309.Text + "', " +
        "IG03010 = '" + IG03010.Text + "', " +
        "chkMember1 = '" + chkMember1.Text + "', " +
        "IG0401 = '" + IG0401.Text + "', " +
        "IG0501 = '" + IG0501.Text + "', " +
        "IG060101 = '" + IG060101.Text + "', " +
        "IG060201 = '" + IG060201.Text + "', " +
        "IG060301 = '" + IG060301.Text + "', " +
        "IG060401 = '" + IG060401.Text + "', " +
        "IG060501 = '" + IG060501.Text + "', " +
        "IG070101 = '" + IG070101.Text + "', " +
        "IG070201 = '" + IG070201.Text + "', " +
        "IG070301 = '" + IG070301.Text + "', " +
        "IG070401 = '" + IG070401.Text + "', " +
        "chkMember2 = '" + chkMember2.Text + "', " +
        "IG0402 = '" + IG0402.Text + "', " +
        "IG0502 = '" + IG0502.Text + "', " +
        "IG060102 = '" + IG060102.Text + "', " +
        "IG060202 = '" + IG060202.Text + "', " +
        "IG060302 = '" + IG060302.Text + "', " +
        "IG060402 = '" + IG060402.Text + "', " +
        "IG060502 = '" + IG060502.Text + "', " +
        "IG070102 = '" + IG070102.Text + "', " +
        "IG070202 = '" + IG070202.Text + "', " +
        "IG070302 = '" + IG070302.Text + "', " +
        "IG070402 = '" + IG070402.Text + "', " +
        "chkMember3 = '" + chkMember3.Text + "', " +
        "IG0403 = '" + IG0403.Text + "', " +
        "IG0503 = '" + IG0503.Text + "', " +
        "IG060103 = '" + IG060103.Text + "', " +
        "IG060203 = '" + IG060203.Text + "', " +
        "IG060303 = '" + IG060303.Text + "', " +
        "IG060403 = '" + IG060403.Text + "', " +
        "IG060503 = '" + IG060503.Text + "', " +
        "IG070103 = '" + IG070103.Text + "', " +
        "IG070203 = '" + IG070203.Text + "', " +
        "IG070303 = '" + IG070303.Text + "', " +
        "IG070403 = '" + IG070403.Text + "', " +
        "chkMember4 = '" + chkMember4.Text + "', " +
        "IG0404 = '" + IG0404.Text + "', " +
        "IG0504 = '" + IG0504.Text + "', " +
        "IG060104 = '" + IG060104.Text + "', " +
        "IG060204 = '" + IG060204.Text + "', " +
        "IG060304 = '" + IG060304.Text + "', " +
        "IG060404 = '" + IG060404.Text + "', " +
        "IG060504 = '" + IG060504.Text + "', " +
        "IG070104 = '" + IG070104.Text + "', " +
        "IG070204 = '" + IG070204.Text + "', " +
        "IG070304 = '" + IG070304.Text + "', " +
        "IG070404 = '" + IG070404.Text + "', " +
        "chkMember5 = '" + chkMember5.Text + "', " +
        "IG0405 = '" + IG0405.Text + "', " +
        "IG0505 = '" + IG0505.Text + "', " +
        "IG060105 = '" + IG060105.Text + "', " +
        "IG060205 = '" + IG060205.Text + "', " +
        "IG060305 = '" + IG060305.Text + "', " +
        "IG060405 = '" + IG060405.Text + "', " +
        "IG060505 = '" + IG060505.Text + "', " +
        "IG070105 = '" + IG070105.Text + "', " +
        "IG070205 = '" + IG070205.Text + "', " +
        "IG070305 = '" + IG070305.Text + "', " +
        "IG070405 = '" + IG070405.Text + "', " +
        "IG070501 = '" + IG070501.Text + "', " +
        "IG070601 = '" + IG070601.Text + "', " +
        "IG070701 = '" + IG070701.Text + "', " +
        "IG070801 = '" + IG070801.Text + "', " +
        "IG070901 = '" + IG070901.Text + "', " +
        "IG0701001 = '" + IG0701001.Text + "', " +
        "IG0701101 = '" + IG0701101.Text + "', " +
        "IG0701201 = '" + IG0701201.Text + "', " +
        "IG0701301 = '" + IG0701301.Text + "', " +
        "IG0801 = '" + IG0801.Text + "', " +
        "IG0901 = '" + IG0901.Text + "', " +
        "IG01001 = '" + IG01001.Text + "', " +
        "IG01101 = '" + IG01101.Text + "', " +
        "IG01201 = '" + IG01201.Text + "', " +
        "IG01301 = '" + IG01301.Text + "', " +
        "IG01401 = '" + IG01401.Text + "', " +
        "IG01501 = '" + IG01501.Text + "', " +
        "IG160101 = '" + IG160101.Text + "', " +
        "IG160201 = '" + IG160201.Text + "', " +
        "IG160301 = '" + IG160301.Text + "', " +
        "IG160401 = '" + IG160401.Text + "', " +
        "IG160501 = '" + IG160501.Text + "', " +
        "IG160601 = '" + IG160601.Text + "', " +
        "IG160701 = '" + IG160701.Text + "', " +
        "IG160801 = '" + IG160801.Text + "', " +
        "IG160901 = '" + IG160901.Text + "', " +
        "IG1601001 = '" + IG1601001.Text + "', " +
        "IG1601101 = '" + IG1601101.Text + "', " +
        "IG1601201 = '" + IG1601201.Text + "', " +
        "IG070502 = '" + IG070502.Text + "', " +
        "IG070602 = '" + IG070602.Text + "', " +
        "IG070702 = '" + IG070702.Text + "', " +
        "IG070802 = '" + IG070802.Text + "', " +
        "IG070902 = '" + IG070902.Text + "', " +
        "IG0701002 = '" + IG0701002.Text + "', " +
        "IG0701102 = '" + IG0701102.Text + "', " +
        "IG0701202 = '" + IG0701202.Text + "', " +
        "IG0701302 = '" + IG0701302.Text + "', " +
        "IG0802 = '" + IG0802.Text + "', " +
        "IG0902 = '" + IG0902.Text + "', " +
        "IG01002 = '" + IG01002.Text + "', " +
        "IG01102 = '" + IG01102.Text + "', " +
        "IG01202 = '" + IG01202.Text + "', " +
        "IG01302 = '" + IG01302.Text + "', " +
        "IG01402 = '" + IG01402.Text + "', " +
        "IG01502 = '" + IG01502.Text + "', " +
        "IG160102 = '" + IG160102.Text + "', " +
        "IG160202 = '" + IG160202.Text + "', " +
        "IG160302 = '" + IG160302.Text + "', " +
        "IG160402 = '" + IG160402.Text + "', " +
        "IG160502 = '" + IG160502.Text + "', " +
        "IG160602 = '" + IG160602.Text + "', " +
        "IG160702 = '" + IG160702.Text + "', " +
        "IG160802 = '" + IG160802.Text + "', " +
        "IG160902 = '" + IG160902.Text + "', " +
        "IG1601002 = '" + IG1601002.Text + "', " +
        "IG1601102 = '" + IG1601102.Text + "', " +
        "IG1601202 = '" + IG1601202.Text + "', " +
        "IG070503 = '" + IG070503.Text + "', " +
        "IG070603 = '" + IG070603.Text + "', " +
        "IG070703 = '" + IG070703.Text + "', " +
        "IG070803 = '" + IG070803.Text + "', " +
        "IG070903 = '" + IG070903.Text + "', " +
        "IG0701003 = '" + IG0701003.Text + "', " +
        "IG0701103 = '" + IG0701103.Text + "', " +
        "IG0701203 = '" + IG0701203.Text + "', " +
        "IG0701303 = '" + IG0701303.Text + "', " +
        "IG0803 = '" + IG0803.Text + "', " +
        "IG0903 = '" + IG0903.Text + "', " +
        "IG01003 = '" + IG01003.Text + "', " +
        "IG01103 = '" + IG01103.Text + "', " +
        "IG01203 = '" + IG01203.Text + "', " +
        "IG01303 = '" + IG01303.Text + "', " +
        "IG01403 = '" + IG01403.Text + "', " +
        "IG01503 = '" + IG01503.Text + "', " +
        "IG160103 = '" + IG160103.Text + "', " +
        "IG160203 = '" + IG160203.Text + "', " +
        "IG160303 = '" + IG160303.Text + "', " +
        "IG160403 = '" + IG160403.Text + "', " +
        "IG160503 = '" + IG160503.Text + "', " +
        "IG160603 = '" + IG160603.Text + "', " +
        "IG160703 = '" + IG160703.Text + "', " +
        "IG160803 = '" + IG160803.Text + "', " +
        "IG160903 = '" + IG160903.Text + "', " +
        "IG1601003 = '" + IG1601003.Text + "', " +
        "IG1601103 = '" + IG1601103.Text + "', " +
        "IG1601203 = '" + IG1601203.Text + "', " +
        "IG070504 = '" + IG070504.Text + "', " +
        "IG070604 = '" + IG070604.Text + "', " +
        "IG070704 = '" + IG070704.Text + "', " +
        "IG070804 = '" + IG070804.Text + "', " +
        "IG070904 = '" + IG070904.Text + "', " +
        "IG0701004 = '" + IG0701004.Text + "', " +
        "IG0701104 = '" + IG0701104.Text + "', " +
        "IG0701204 = '" + IG0701204.Text + "', " +
        "IG0701304 = '" + IG0701304.Text + "', " +
        "IG0804 = '" + IG0804.Text + "', " +
        "IG0904 = '" + IG0904.Text + "', " +
        "IG01004 = '" + IG01004.Text + "', " +
        "IG01104 = '" + IG01104.Text + "', " +
        "IG01204 = '" + IG01204.Text + "', " +
        "IG01304 = '" + IG01304.Text + "', " +
        "IG01404 = '" + IG01404.Text + "', " +
        "IG01504 = '" + IG01504.Text + "', " +
        "IG160104 = '" + IG160104.Text + "', " +
        "IG160204 = '" + IG160204.Text + "', " +
        "IG160304 = '" + IG160304.Text + "', " +
        "IG160404 = '" + IG160404.Text + "', " +
        "IG160504 = '" + IG160504.Text + "', " +
        "IG160604 = '" + IG160604.Text + "', " +
        "IG160704 = '" + IG160704.Text + "', " +
        "IG160804 = '" + IG160804.Text + "', " +
        "IG160904 = '" + IG160904.Text + "', " +
        "IG1601004 = '" + IG1601004.Text + "', " +
        "IG1601104 = '" + IG1601104.Text + "', " +
        "IG1601204 = '" + IG1601204.Text + "', " +
        "IG070505 = '" + IG070505.Text + "', " +
        "IG070605 = '" + IG070605.Text + "', " +
        "IG070705 = '" + IG070705.Text + "', " +
        "IG070805 = '" + IG070805.Text + "', " +
        "IG070905 = '" + IG070905.Text + "', " +
        "IG0701005 = '" + IG0701005.Text + "', " +
        "IG0701105 = '" + IG0701105.Text + "', " +
        "IG0701205 = '" + IG0701205.Text + "', " +
        "IG0701305 = '" + IG0701305.Text + "', " +
        "IG0805 = '" + IG0805.Text + "', " +
        "IG0905 = '" + IG0905.Text + "', " +
        "IG01005 = '" + IG01005.Text + "', " +
        "IG01105 = '" + IG01105.Text + "', " +
        "IG01205 = '" + IG01205.Text + "', " +
        "IG01305 = '" + IG01305.Text + "', " +
        "IG01405 = '" + IG01405.Text + "', " +
        "IG01505 = '" + IG01505.Text + "', " +
        "IG160105 = '" + IG160105.Text + "', " +
        "IG160205 = '" + IG160205.Text + "', " +
        "IG160305 = '" + IG160305.Text + "', " +
        "IG160405 = '" + IG160405.Text + "', " +
        "IG160505 = '" + IG160505.Text + "', " +
        "IG160605 = '" + IG160605.Text + "', " +
        "IG160705 = '" + IG160705.Text + "', " +
        "IG160805 = '" + IG160805.Text + "', " +
        "IG160905 = '" + IG160905.Text + "', " +
        "IG1601005 = '" + IG1601005.Text + "', " +
        "IG1601105 = '" + IG1601105.Text + "', " +
        "IG1601205 = '" + IG1601205.Text + "', " +
        "QCFUP02 = '" + QCFUP02.Text + "', " +
        "QCFUP03 = '" + QCFUP03.Text + "', " +
        "QCFUP04 = '" + QCFUP04.Text + "', " +
        "QCFUP05 = '" + QCFUP05.Text + "', " +
        "QCFUP06 = '" + QCFUP06.Text + "', " +
        "QCFUP07 = '" + QCFUP07.Text + "', " +
        "chkBaby5 = '" + chkBaby5.Text + "', " +
        "IC0605 = '" + IC0605.Text + "', " +
        "IC0705 = '" + IC0705.Text + "', " +
        "IC0805 = '" + IC0805.Text + "', " +
        "IC0905 = '" + IC0905.Text + "', " +
        "IC01005 = '" + IC01005.Text + "', " +
        "IC01105 = '" + IC01105.Text + "', " +
        "chkBaby6 = '" + chkBaby6.Text + "', " +
        "IC0606 = '" + IC0606.Text + "', " +
        "IC0706 = '" + IC0706.Text + "', " +
        "IC0806 = '" + IC0806.Text + "', " +
        "IC0906 = '" + IC0906.Text + "', " +
        "IC01006 = '" + IC01006.Text + "', " +
        "IC01106 = '" + IC01106.Text + "', " +
        "chkBaby7 = '" + chkBaby7.Text + "', " +
        "IC0607 = '" + IC0607.Text + "', " +
        "IC0707 = '" + IC0707.Text + "', " +
        "IC0807 = '" + IC0807.Text + "', " +
        "IC0907 = '" + IC0907.Text + "', " +
        "IC01007 = '" + IC01007.Text + "', " +
        "IC01107 = '" + IC01107.Text + "', " +
        "chkBaby8 = '" + chkBaby8.Text + "', " +
        "IC0608 = '" + IC0608.Text + "', " +
        "IC0708 = '" + IC0708.Text + "', " +
        "IC0808 = '" + IC0808.Text + "', " +
        "IC0908 = '" + IC0908.Text + "', " +
        "IC01008 = '" + IC01008.Text + "', " +
        "IC01108 = '" + IC01108.Text + "', " +
        "chkBaby9 = '" + chkBaby9.Text + "', " +
        "IC0609 = '" + IC0609.Text + "', " +
        "IC0709 = '" + IC0709.Text + "', " +
        "IC0809 = '" + IC0809.Text + "', " +
        "IC0909 = '" + IC0909.Text + "', " +
        "IC01009 = '" + IC01009.Text + "', " +
        "IC01109 = '" + IC01109.Text + "', " +
        "chkBaby10 = '" + chkBaby10.Text + "', " +
        "IC06010 = '" + IC06010.Text + "', " +
        "IC07010 = '" + IC07010.Text + "', " +
        "IC08010 = '" + IC08010.Text + "', " +
        "IC09010 = '" + IC09010.Text + "', " +
        "IC01010 = '" + IC01010.Text + "', " +
        "IC01110 = '" + IC01110.Text + "', " +
        "chkBaby11 = '" + chkBaby11.Text + "', " +
        "IC06011 = '" + IC06011.Text + "', " +
        "IC07011 = '" + IC07011.Text + "', " +
        "IC08011 = '" + IC08011.Text + "', " +
        "IC09011 = '" + IC09011.Text + "', " +
        "IC01011 = '" + IC01011.Text + "', " +
        "IC01111 = '" + IC01111.Text + "', " +
        "chkMember6 = '" + chkMember6.Text + "', " +
        "IG0406 = '" + IG0406.Text + "', " +
        "IG0506 = '" + IG0506.Text + "', " +
        "IG060106 = '" + IG060106.Text + "', " +
        "IG060206 = '" + IG060206.Text + "', " +
        "IG060306 = '" + IG060306.Text + "', " +
        "IG060406 = '" + IG060406.Text + "', " +
        "IG060506 = '" + IG060506.Text + "', " +
        "IG070106 = '" + IG070106.Text + "', " +
        "IG070206 = '" + IG070206.Text + "', " +
        "IG070306 = '" + IG070306.Text + "', " +
        "IG070406 = '" + IG070406.Text + "', " +
        "IG070506 = '" + IG070506.Text + "', " +
        "IG070606 = '" + IG070606.Text + "', " +
        "IG070706 = '" + IG070706.Text + "', " +
        "IG070806 = '" + IG070806.Text + "', " +
        "IG070906 = '" + IG070906.Text + "', " +
        "IG0701006 = '" + IG0701006.Text + "', " +
        "IG0701106 = '" + IG0701106.Text + "', " +
        "IG0701206 = '" + IG0701206.Text + "', " +
        "IG0701306 = '" + IG0701306.Text + "', " +
        "IG0806 = '" + IG0806.Text + "', " +
        "IG0906 = '" + IG0906.Text + "', " +
        "IG01006 = '" + IG01006.Text + "', " +
        "chkMember7 = '" + chkMember7.Text + "', " +
        "IG0407 = '" + IG0407.Text + "', " +
        "IG0507 = '" + IG0507.Text + "', " +
        "IG060107 = '" + IG060107.Text + "', " +
        "IG060207 = '" + IG060207.Text + "', " +
        "IG060307 = '" + IG060307.Text + "', " +
        "IG060407 = '" + IG060407.Text + "', " +
        "IG060507 = '" + IG060507.Text + "', " +
        "IG070107 = '" + IG070107.Text + "', " +
        "IG070207 = '" + IG070207.Text + "', " +
        "IG070307 = '" + IG070307.Text + "', " +
        "IG070407 = '" + IG070407.Text + "', " +
        "IG070507 = '" + IG070507.Text + "', " +
        "IG070607 = '" + IG070607.Text + "', " +
        "IG070707 = '" + IG070707.Text + "', " +
        "IG070807 = '" + IG070807.Text + "', " +
        "IG070907 = '" + IG070907.Text + "', " +
        "IG0701007 = '" + IG0701007.Text + "', " +
        "IG0701107 = '" + IG0701107.Text + "', " +
        "IG0701207 = '" + IG0701207.Text + "', " +
        "IG0701307 = '" + IG0701307.Text + "', " +
        "IG0807 = '" + IG0807.Text + "', " +
        "IG0907 = '" + IG0907.Text + "', " +
        "IG01007 = '" + IG01007.Text + "', " +
        "chkMember8 = '" + chkMember8.Text + "', " +
        "IG0408 = '" + IG0408.Text + "', " +
        "IG0508 = '" + IG0508.Text + "', " +
        "IG060108 = '" + IG060108.Text + "', " +
        "IG060208 = '" + IG060208.Text + "', " +
        "IG060308 = '" + IG060308.Text + "', " +
        "IG060408 = '" + IG060408.Text + "', " +
        "IG060508 = '" + IG060508.Text + "', " +
        "IG070108 = '" + IG070108.Text + "', " +
        "IG070208 = '" + IG070208.Text + "', " +
        "IG070308 = '" + IG070308.Text + "', " +
        "IG070408 = '" + IG070408.Text + "', " +
        "IG070508 = '" + IG070508.Text + "', " +
        "IG070608 = '" + IG070608.Text + "', " +
        "IG070708 = '" + IG070708.Text + "', " +
        "IG070808 = '" + IG070808.Text + "', " +
        "IG070908 = '" + IG070908.Text + "', " +
        "IG0701008 = '" + IG0701008.Text + "', " +
        "IG0701108 = '" + IG0701108.Text + "', " +
        "IG0701208 = '" + IG0701208.Text + "', " +
        "IG0701308 = '" + IG0701308.Text + "', " +
        "IG0808 = '" + IG0808.Text + "', " +
        "IG0908 = '" + IG0908.Text + "', " +
        "IG01008 = '" + IG01008.Text + "', " +
        "chkMember9 = '" + chkMember9.Text + "', " +
        "IG0409 = '" + IG0409.Text + "', " +
        "IG0509 = '" + IG0509.Text + "', " +
        "IG060109 = '" + IG060109.Text + "', " +
        "IG060209 = '" + IG060209.Text + "', " +
        "IG060309 = '" + IG060309.Text + "', " +
        "IG060409 = '" + IG060409.Text + "', " +
        "IG060509 = '" + IG060509.Text + "', " +
        "IG070109 = '" + IG070109.Text + "', " +
        "IG070209 = '" + IG070209.Text + "', " +
        "IG070309 = '" + IG070309.Text + "', " +
        "IG070409 = '" + IG070409.Text + "', " +
        "IG070509 = '" + IG070509.Text + "', " +
        "IG070609 = '" + IG070609.Text + "', " +
        "IG070709 = '" + IG070709.Text + "', " +
        "IG070809 = '" + IG070809.Text + "', " +
        "IG070909 = '" + IG070909.Text + "', " +
        "IG0701009 = '" + IG0701009.Text + "', " +
        "IG0701109 = '" + IG0701109.Text + "', " +
        "IG0701209 = '" + IG0701209.Text + "', " +
        "IG0701309 = '" + IG0701309.Text + "', " +
        "IG0809 = '" + IG0809.Text + "', " +
        "IG0909 = '" + IG0909.Text + "', " +
        "IG01009 = '" + IG01009.Text + "', " +
        "chkMember10 = '" + chkMember10.Text + "', " +
        "IG0410 = '" + IG0410.Text + "', " +
        "IG0510 = '" + IG0510.Text + "', " +
        "IG060110 = '" + IG060110.Text + "', " +
        "IG060210 = '" + IG060210.Text + "', " +
        "IG060310 = '" + IG060310.Text + "', " +
        "IG060410 = '" + IG060410.Text + "', " +
        "IG060510 = '" + IG060510.Text + "', " +
        "IG070110 = '" + IG070110.Text + "', " +
        "IG070210 = '" + IG070210.Text + "', " +
        "IG070310 = '" + IG070310.Text + "', " +
        "IG070410 = '" + IG070410.Text + "', " +
        "IG070510 = '" + IG070510.Text + "', " +
        "IG070610 = '" + IG070610.Text + "', " +
        "IG070710 = '" + IG070710.Text + "', " +
        "IG070810 = '" + IG070810.Text + "', " +
        "IG070910 = '" + IG070910.Text + "', " +
        "IG0701010 = '" + IG0701010.Text + "', " +
        "IG0701110 = '" + IG0701110.Text + "', " +
        "IG0701210 = '" + IG0701210.Text + "', " +
        "IG0701310 = '" + IG0701310.Text + "', " +
        "IG0810 = '" + IG0810.Text + "', " +
        "IG0910 = '" + IG0910.Text + "', " +
        "IG01010 = '" + IG01010.Text + "', " +
        "IG01106 = '" + IG01106.Text + "', " +
        "IG01206 = '" + IG01206.Text + "', " +
        "IG01306 = '" + IG01306.Text + "', " +
        "IG01406 = '" + IG01406.Text + "', " +
        "IG01506 = '" + IG01506.Text + "', " +
        "IG01107 = '" + IG01107.Text + "', " +
        "IG01207 = '" + IG01207.Text + "', " +
        "IG01307 = '" + IG01307.Text + "', " +
        "IG01407 = '" + IG01407.Text + "', " +
        "IG01507 = '" + IG01507.Text + "', " +
        "IG01108 = '" + IG01108.Text + "', " +
        "IG01208 = '" + IG01208.Text + "', " +
        "IG01308 = '" + IG01308.Text + "', " +
        "IG01408 = '" + IG01408.Text + "', " +
        "IG01508 = '" + IG01508.Text + "', " +
        "IG01109 = '" + IG01109.Text + "', " +
        "IG01209 = '" + IG01209.Text + "', " +
        "IG01309 = '" + IG01309.Text + "', " +
        "IG01409 = '" + IG01409.Text + "', " +
        "IG01509 = '" + IG01509.Text + "', " +
        "IG01110 = '" + IG01110.Text + "', " +
        "IG01210 = '" + IG01210.Text + "', " +
        "IG01310 = '" + IG01310.Text + "', " +
        "IG01410 = '" + IG01410.Text + "', " +
        "IG01510 = '" + IG01510.Text + "', " +
        "IG160106 = '" + IG160106.Text + "', " +
        "IG160206 = '" + IG160206.Text + "', " +
        "IG160306 = '" + IG160306.Text + "', " +
        "IG160406 = '" + IG160406.Text + "', " +
        "IG160506 = '" + IG160506.Text + "', " +
        "IG160606 = '" + IG160606.Text + "', " +
        "IG160706 = '" + IG160706.Text + "', " +
        "IG160806 = '" + IG160806.Text + "', " +
        "IG160906 = '" + IG160906.Text + "', " +
        "IG1601006 = '" + IG1601006.Text + "', " +
        "IG1601106 = '" + IG1601106.Text + "', " +
        "IG1601206 = '" + IG1601206.Text + "', " +
        "IG160107 = '" + IG160107.Text + "', " +
        "IG160207 = '" + IG160207.Text + "', " +
        "IG160307 = '" + IG160307.Text + "', " +
        "IG160407 = '" + IG160407.Text + "', " +
        "IG160507 = '" + IG160507.Text + "', " +
        "IG160607 = '" + IG160607.Text + "', " +
        "IG160707 = '" + IG160707.Text + "', " +
        "IG160807 = '" + IG160807.Text + "', " +
        "IG160907 = '" + IG160907.Text + "', " +
        "IG1601007 = '" + IG1601007.Text + "', " +
        "IG1601107 = '" + IG1601107.Text + "', " +
        "IG1601207 = '" + IG1601207.Text + "', " +
        "IG160108 = '" + IG160108.Text + "', " +
        "IG160208 = '" + IG160208.Text + "', " +
        "IG160308 = '" + IG160308.Text + "', " +
        "IG160408 = '" + IG160408.Text + "', " +
        "IG160508 = '" + IG160508.Text + "', " +
        "IG160608 = '" + IG160608.Text + "', " +
        "IG160708 = '" + IG160708.Text + "', " +
        "IG160808 = '" + IG160808.Text + "', " +
        "IG160908 = '" + IG160908.Text + "', " +
        "IG1601008 = '" + IG1601008.Text + "', " +
        "IG1601108 = '" + IG1601108.Text + "', " +
        "IG1601208 = '" + IG1601208.Text + "', " +
        "IG160109 = '" + IG160109.Text + "', " +
        "IG160209 = '" + IG160209.Text + "', " +
        "IG160309 = '" + IG160309.Text + "', " +
        "IG160409 = '" + IG160409.Text + "', " +
        "IG160509 = '" + IG160509.Text + "', " +
        "IG160609 = '" + IG160609.Text + "', " +
        "IG160709 = '" + IG160709.Text + "', " +
        "IG160809 = '" + IG160809.Text + "', " +
        "IG160909 = '" + IG160909.Text + "', " +
        "IG1601009 = '" + IG1601009.Text + "', " +
        "IG1601109 = '" + IG1601109.Text + "', " +
        "IG1601209 = '" + IG1601209.Text + "', " +
        "IG160110 = '" + IG160110.Text + "', " +
        "IG160210 = '" + IG160210.Text + "', " +
        "IG160310 = '" + IG160310.Text + "', " +
        "IG160410 = '" + IG160410.Text + "', " +
        "IG160510 = '" + IG160510.Text + "', " +
        "IG160610 = '" + IG160610.Text + "', " +
        "IG160710 = '" + IG160710.Text + "', " +
        "IG160810 = '" + IG160810.Text + "', " +
        "IG160910 = '" + IG160910.Text + "', " +
        "IG1601010 = '" + IG1601010.Text + "', " +
        "IG1601110 = '" + IG1601110.Text + "', " +
        "IG1601210 = '" + IG1601210.Text + "', " +
        "chkMember11 = '" + chkMember11.Text + "', " +
        "IG0411 = '" + IG0411.Text + "', " +
        "IG0511 = '" + IG0511.Text + "', " +
        "IG060111 = '" + IG060111.Text + "', " +
        "IG060211 = '" + IG060211.Text + "', " +
        "IG060311 = '" + IG060311.Text + "', " +
        "IG060411 = '" + IG060411.Text + "', " +
        "IG060511 = '" + IG060511.Text + "', " +
        "chkMember12 = '" + chkMember12.Text + "', " +
        "IG0412 = '" + IG0412.Text + "', " +
        "IG0512 = '" + IG0512.Text + "', " +
        "IG060112 = '" + IG060112.Text + "', " +
        "IG060212 = '" + IG060212.Text + "', " +
        "IG060312 = '" + IG060312.Text + "', " +
        "IG060412 = '" + IG060412.Text + "', " +
        "IG060512 = '" + IG060512.Text + "', " +
        "chkMember13 = '" + chkMember13.Text + "', " +
        "IG0413 = '" + IG0413.Text + "', " +
        "IG0513 = '" + IG0513.Text + "', " +
        "IG060113 = '" + IG060113.Text + "', " +
        "IG060213 = '" + IG060213.Text + "', " +
        "IG060313 = '" + IG060313.Text + "', " +
        "IG060413 = '" + IG060413.Text + "', " +
        "IG060513 = '" + IG060513.Text + "', " +
        "chkMember14 = '" + chkMember14.Text + "', " +
        "IG0414 = '" + IG0414.Text + "', " +
        "IG0514 = '" + IG0514.Text + "', " +
        "IG060114 = '" + IG060114.Text + "', " +
        "IG060214 = '" + IG060214.Text + "', " +
        "IG060314 = '" + IG060314.Text + "', " +
        "IG060414 = '" + IG060414.Text + "', " +
        "IG060514 = '" + IG060514.Text + "', " +
        "chkMember15 = '" + chkMember15.Text + "', " +
        "IG0415 = '" + IG0415.Text + "', " +
        "IG0515 = '" + IG0515.Text + "', " +
        "IG060115 = '" + IG060115.Text + "', " +
        "IG060215 = '" + IG060215.Text + "', " +
        "IG060315 = '" + IG060315.Text + "', " +
        "IG060415 = '" + IG060415.Text + "', " +
        "IG060515 = '" + IG060515.Text + "', " +
        "IG070111 = '" + IG070111.Text + "', " +
        "IG070211 = '" + IG070211.Text + "', " +
        "IG070311 = '" + IG070311.Text + "', " +
        "IG070411 = '" + IG070411.Text + "', " +
        "IG070511 = '" + IG070511.Text + "', " +
        "IG070611 = '" + IG070611.Text + "', " +
        "IG070711 = '" + IG070711.Text + "', " +
        "IG070811 = '" + IG070811.Text + "', " +
        "IG070911 = '" + IG070911.Text + "', " +
        "IG0701011 = '" + IG0701011.Text + "', " +
        "IG0701111 = '" + IG0701111.Text + "', " +
        "IG0701211 = '" + IG0701211.Text + "', " +
        "IG0701311 = '" + IG0701311.Text + "', " +
        "IG0811 = '" + IG0811.Text + "', " +
        "IG0911 = '" + IG0911.Text + "', " +
        "IG01011 = '" + IG01011.Text + "', " +
        "IG01111 = '" + IG01111.Text + "', " +
        "IG01211 = '" + IG01211.Text + "', " +
        "IG01311 = '" + IG01311.Text + "', " +
        "IG01411 = '" + IG01411.Text + "', " +
        "IG01511 = '" + IG01511.Text + "', " +
        "IG070112 = '" + IG070112.Text + "', " +
        "IG070212 = '" + IG070212.Text + "', " +
        "IG070312 = '" + IG070312.Text + "', " +
        "IG070412 = '" + IG070412.Text + "', " +
        "IG070512 = '" + IG070512.Text + "', " +
        "IG070612 = '" + IG070612.Text + "', " +
        "IG070712 = '" + IG070712.Text + "', " +
        "IG070812 = '" + IG070812.Text + "', " +
        "IG070912 = '" + IG070912.Text + "', " +
        "IG0701012 = '" + IG0701012.Text + "', " +
        "IG0701112 = '" + IG0701112.Text + "', " +
        "IG0701212 = '" + IG0701212.Text + "', " +
        "IG0701312 = '" + IG0701312.Text + "', " +
        "IG0812 = '" + IG0812.Text + "', " +
        "IG0912 = '" + IG0912.Text + "', " +
        "IG01012 = '" + IG01012.Text + "', " +
        "IG01112 = '" + IG01112.Text + "', " +
        "IG01212 = '" + IG01212.Text + "', " +
        "IG01312 = '" + IG01312.Text + "', " +
        "IG01412 = '" + IG01412.Text + "', " +
        "IG01512 = '" + IG01512.Text + "', " +
        "IG070113 = '" + IG070113.Text + "', " +
        "IG070213 = '" + IG070213.Text + "', " +
        "IG070313 = '" + IG070313.Text + "', " +
        "IG070413 = '" + IG070413.Text + "', " +
        "IG070513 = '" + IG070513.Text + "', " +
        "IG070613 = '" + IG070613.Text + "', " +
        "IG070713 = '" + IG070713.Text + "', " +
        "IG070813 = '" + IG070813.Text + "', " +
        "IG070913 = '" + IG070913.Text + "', " +
        "IG0701013 = '" + IG0701013.Text + "', " +
        "IG0701113 = '" + IG0701113.Text + "', " +
        "IG0701213 = '" + IG0701213.Text + "', " +
        "IG0701313 = '" + IG0701313.Text + "', " +
        "IG0813 = '" + IG0813.Text + "', " +
        "IG0913 = '" + IG0913.Text + "', " +
        "IG01013 = '" + IG01013.Text + "', " +
        "IG01113 = '" + IG01113.Text + "', " +
        "IG01213 = '" + IG01213.Text + "', " +
        "IG01313 = '" + IG01313.Text + "', " +
        "IG01413 = '" + IG01413.Text + "', " +
        "IG01513 = '" + IG01513.Text + "', " +
        "IG070114 = '" + IG070114.Text + "', " +
        "IG070214 = '" + IG070214.Text + "', " +
        "IG070314 = '" + IG070314.Text + "', " +
        "IG070414 = '" + IG070414.Text + "', " +
        "IG070514 = '" + IG070514.Text + "', " +
        "IG070614 = '" + IG070614.Text + "', " +
        "IG070714 = '" + IG070714.Text + "', " +
        "IG070814 = '" + IG070814.Text + "', " +
        "IG070914 = '" + IG070914.Text + "', " +
        "IG0701014 = '" + IG0701014.Text + "', " +
        "IG0701114 = '" + IG0701114.Text + "', " +
        "IG0701214 = '" + IG0701214.Text + "', " +
        "IG0701314 = '" + IG0701314.Text + "', " +
        "IG0814 = '" + IG0814.Text + "', " +
        "IG0914 = '" + IG0914.Text + "', " +
        "IG01014 = '" + IG01014.Text + "', " +
        "IG01114 = '" + IG01114.Text + "', " +
        "IG01214 = '" + IG01214.Text + "', " +
        "IG01314 = '" + IG01314.Text + "', " +
        "IG01414 = '" + IG01414.Text + "', " +
        "IG01514 = '" + IG01514.Text + "', " +
        "IG070115 = '" + IG070115.Text + "', " +
        "IG070215 = '" + IG070215.Text + "', " +
        "IG070315 = '" + IG070315.Text + "', " +
        "IG070415 = '" + IG070415.Text + "', " +
        "IG070515 = '" + IG070515.Text + "', " +
        "IG070615 = '" + IG070615.Text + "', " +
        "IG070715 = '" + IG070715.Text + "', " +
        "IG070815 = '" + IG070815.Text + "', " +
        "IG070915 = '" + IG070915.Text + "', " +
        "IG0701015 = '" + IG0701015.Text + "', " +
        "IG0701115 = '" + IG0701115.Text + "', " +
        "IG0701215 = '" + IG0701215.Text + "', " +
        "IG0701315 = '" + IG0701315.Text + "', " +
        "IG0815 = '" + IG0815.Text + "', " +
        "IG0915 = '" + IG0915.Text + "', " +
        "IG01015 = '" + IG01015.Text + "', " +
        "IG01115 = '" + IG01115.Text + "', " +
        "IG01215 = '" + IG01215.Text + "', " +
        "IG01315 = '" + IG01315.Text + "', " +
        "IG01415 = '" + IG01415.Text + "', " +
        "IG01515 = '" + IG01515.Text + "', " +
        "IG160111 = '" + IG160111.Text + "', " +
        "IG160211 = '" + IG160211.Text + "', " +
        "IG160311 = '" + IG160311.Text + "', " +
        "IG160411 = '" + IG160411.Text + "', " +
        "IG160511 = '" + IG160511.Text + "', " +
        "IG160611 = '" + IG160611.Text + "', " +
        "IG160711 = '" + IG160711.Text + "', " +
        "IG160811 = '" + IG160811.Text + "', " +
        "IG160911 = '" + IG160911.Text + "', " +
        "IG1601011 = '" + IG1601011.Text + "', " +
        "IG1601111 = '" + IG1601111.Text + "', " +
        "IG1601211 = '" + IG1601211.Text + "', " +
        "IG160112 = '" + IG160112.Text + "', " +
        "IG160212 = '" + IG160212.Text + "', " +
        "IG160312 = '" + IG160312.Text + "', " +
        "IG160412 = '" + IG160412.Text + "', " +
        "IG160512 = '" + IG160512.Text + "', " +
        "IG160612 = '" + IG160612.Text + "', " +
        "IG160712 = '" + IG160712.Text + "', " +
        "IG160812 = '" + IG160812.Text + "', " +
        "IG160912 = '" + IG160912.Text + "', " +
        "IG1601012 = '" + IG1601012.Text + "', " +
        "IG1601112 = '" + IG1601112.Text + "', " +
        "IG1601212 = '" + IG1601212.Text + "', " +
        "IG160113 = '" + IG160113.Text + "', " +
        "IG160213 = '" + IG160213.Text + "', " +
        "IG160313 = '" + IG160313.Text + "', " +
        "IG160413 = '" + IG160413.Text + "', " +
        "IG160513 = '" + IG160513.Text + "', " +
        "IG160613 = '" + IG160613.Text + "', " +
        "IG160713 = '" + IG160713.Text + "', " +
        "IG160813 = '" + IG160813.Text + "', " +
        "IG160913 = '" + IG160913.Text + "', " +
        "IG1601013 = '" + IG1601013.Text + "', " +
        "IG1601113 = '" + IG1601113.Text + "', " +
        "IG1601213 = '" + IG1601213.Text + "', " +
        "IG160114 = '" + IG160114.Text + "', " +
        "IG160214 = '" + IG160214.Text + "', " +
        "IG160314 = '" + IG160314.Text + "', " +
        "IG160414 = '" + IG160414.Text + "', " +
        "IG160514 = '" + IG160514.Text + "', " +
        "IG160614 = '" + IG160614.Text + "', " +
        "IG160714 = '" + IG160714.Text + "', " +
        "IG160814 = '" + IG160814.Text + "', " +
        "IG160914 = '" + IG160914.Text + "', " +
        "IG1601014 = '" + IG1601014.Text + "', " +
        "IG1601114 = '" + IG1601114.Text + "', " +
        "IG1601214 = '" + IG1601214.Text + "', " +
        "IG160115 = '" + IG160115.Text + "', " +
        "IG160215 = '" + IG160215.Text + "', " +
        "IG160315 = '" + IG160315.Text + "', " +
        "IG160415 = '" + IG160415.Text + "', " +
        "IG160515 = '" + IG160515.Text + "', " +
        "IG160615 = '" + IG160615.Text + "', " +
        "IG160715 = '" + IG160715.Text + "', " +
        "IG160815 = '" + IG160815.Text + "', " +
        "IG160915 = '" + IG160915.Text + "', " +
        "IG1601015 = '" + IG1601015.Text + "', " +
        "IG1601115 = '" + IG1601115.Text + "', " +
        "IG1601215 = '" + IG1601215.Text + "' WHERE form_id ='" + FORM_ID.Text + "'";


                obj_op = new CDBOperations();
                obj_op.ExecuteNonQuery_Casi(fldname, fldvalue, qry);

                MessageBox.Show("Record saved successfully ", "Message", MessageBoxButtons.OK, MessageBoxIcon.Information);

                FORM_ID.Text = "";
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }
        }




        private void GetTotalForms()
        {
            CDBOperations obj_op = null;
            CConnection cn = new CConnection();


            try
            {
                obj_op = new CDBOperations();

                SQLiteDataAdapter da = new SQLiteDataAdapter("select count(*) count1 from form1bl", cn.cn);
                DataSet ds = new DataSet();
                da.Fill(ds);


                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        if (ds.Tables[0].Rows[0]["count1"].ToString() == "0")
                        {
                            label51.Text = "1";
                        }
                        else
                        {
                            label51.Text = ds.Tables[0].Rows[0]["count1"].ToString();
                        }

                    }
                }

            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }
        }


        private void Form1BL_Load(object sender, EventArgs e)
        {
            GetTotalForms();



            if (CVariables.dualisperforming == true)
            {
                CVariables.dual_normal_update = false;

                this.Text = this.Text + "  -  Performing dual entry - " + CVariables.dual_whichentry;

                FORM_ID.Text = CVariables.dual_form_id;

                FORM_ID.Enabled = false;
                FORM_ID.BackColor = Color.LightGray;

                SearchRecord();
                //DisableAllControls();

                FORM_ID.Focus();
            }
            else
            {
                CVariables.dual_normal_update = true;
                CVariables.dualisupdate = false;
            }
        }

        private void cmdSave_Click(object sender, EventArgs e)
        {
            //if (Validate_Fields_New())
            //{
            //    SaveData();
            //}

            Validate_Fields();
        }


        private bool Validate_Fields_New()
        {

            if (string.IsNullOrEmpty(IA01.Text) && IA01.Enabled == true) { MessageBox.Show("سُپروائیزر کا نام is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IA01.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IA02.Text) && IA02.Enabled == true) { MessageBox.Show("سُپروائیزر کا شناختی نمبر is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IA02.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IA03.Text) && IA03.Enabled == true) { MessageBox.Show("گائوں کا نام is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IA03.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IA04.Text) && IA04.Enabled == true) { MessageBox.Show("یونین کونسل کا نام is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IA04.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IA05.Text) && IA05.Enabled == true) { MessageBox.Show("کلسٹرآئی ڈی نمبر is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IA05.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB01.Text) && IB01.Enabled == true) { MessageBox.Show("فارم دینے والے کا نام is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB01.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB02.Text) && IB02.Enabled == true) { MessageBox.Show("فارم دینے والے کا آئی ڈی نمبر is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB02.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB03.Text) && IB03.Enabled == true) { MessageBox.Show("گھرانے کا نمبر(لائن لسٹنگ کے دوران دیئے گئے نمبر کا استعمال کریں۔ گھرانے کا نمبر گھرانے کی فہرست کے فارم سے کاپی کریں) is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB03.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB04.Text) && IB04.Enabled == true) { MessageBox.Show("(تاریخ کو دونوںفارمیٹ میں درج کریں) دورے کی تاریخ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB04.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB05.Text) && IB05.Enabled == true) { MessageBox.Show("زبانی اجازت : ہم اس کمیونٹی کے گھرانوں میں ایک سروے کا انعقاد کر رہے ہیں تاکہ گلگت بلتستان کے کچھ علاقوں میں تولیدی معلومات ، نوزائیدہ بچوں کی صحت ، ہجرت کے طریقوں اور ٹیلیفون کی دستیابی کے بارے میں جان سکیں۔ اس انٹرویوکو مکمل ہونے میں تقریباً 15 منٹس لگیں گے۔آپ سے حاصل کردہ تمام معلومات ہمارے پاس انتہائی خفیہ اور گمنام رہیں گی (یعنی آپ کا نام یا آپ کے خاندان کے کسی فرد کا نام کبھی بھی ظاہر نہیں کیا جائے گا) اور ان کو مستقبل کے ریسرچ پروگرام میں آگاہی کے لئے استعمال کیا جائے گا ۔ کیا میں اب انٹرویو شروع کرسکتا/سکتی ہوں؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB05.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB06.Text) && IB06.Enabled == true) { MessageBox.Show("سوالنامہ کے آغاز کا وقت is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB06.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB07.Text) && IB07.Enabled == true) { MessageBox.Show("(گھر کے افراد کی تعداد)اس وقت اس گھر میں کتنے افراد رہتے ہیں،اپنے آپ کو شامل کریں؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB07.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB08.Text) && IB08.Enabled == true) { MessageBox.Show("کیا گھر میں فون / لینڈ لائن ، سیل فون ، یاان دونوں میں سے کوئی ایک موجود ہیں؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB08.BackColor = Color.Red; return false; }

            if (string.IsNullOrEmpty(IB0901.Text) && IB0901.Enabled == true) { MessageBox.Show("صبح is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB0901.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB0902.Text) && IB0902.Enabled == true) { MessageBox.Show("دوپہر is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB0902.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB0903.Text) && IB0903.Enabled == true) { MessageBox.Show("شام is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB0903.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IB0996.Text) && IB0996.Enabled == true) { MessageBox.Show("دیگر(برائے مہربانی وضاحت کریں) is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IB0996.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IC01.Text) && IC01.Enabled == true) { MessageBox.Show("کیا گزشتہ5 سالوں میں ، اس گھر کی کوئی خاتون حاملہ ہوئی تھیں؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IC01.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IC02.Text) && IC02.Enabled == true) { MessageBox.Show("گزشتہ 5 برس میں،ان عورتوں میں سے کتنی عورتوں نے بچوں کو جنم دیا تھا(اس بات سے قطع نظر کہ بچہ زندہ پیدا ہوا تھا یا مردہ )؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IC02.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IC03.Text) && IC03.Enabled == true) { MessageBox.Show("گزشتہ5سالوں میں،ان میں سے ایسی کتنی خواتین تھیں(یعنی جن کے بچوں کی پیدائش ہوئی)ہو اور ان کو بچے کی پیدائش کے بعد پہلے 24 گھنٹوں کے دوران اندام نہانی سے خون کا غیر معمولی اخراج ہواہو؟ (مندرجہ ذیل مثالیں دے کر اشارہ دیں) is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IC03.BackColor = Color.Red; return false; }
            if (string.IsNullOrEmpty(IC04.Text) && IC04.Enabled == true) { MessageBox.Show("گزشتہ5 سالوں میں ، اس گھر میں پیدا ہونے والے کتنے بچوں کی مردہ پیدائش ہوئی (یعنی مردہ پیدا ہوئے تھے)؟ is required ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error); IC04.BackColor = Color.Red; return false; }




            return true;
        }


        private void Validate_Fields()
        {
            CDBOperations obj_op = new CDBOperations();
            //DataSet ds_new = obj_op.GetFormData_VisitID1("sp_GetRecords1", "0", "0", "0", "Ultrasound_Scan");
            DataSet ds_new = obj_op.GetFormData_VisitID1("select * from tbldict where tabname = 'Form1BL' order by var_seq", "0", "0", "0", "");


            for (int b = 0; b <= ds_new.Tables[0].Rows.Count - 1; b++)
            {

                if (ds_new.Tables[0].Rows[b]["var_id"].ToString() != "form_id" && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "QCFUP01"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060102"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060103"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060104"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060105"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060201"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060202"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060203"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060204"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060205"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060301"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060302"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060303"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060304"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060305"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060401"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060402"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060403"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060404"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060405"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060501"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060502"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060503"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060504"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060505"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060107"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060108"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060109"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060110"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060206"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060207"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060208"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060209"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060210"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060306"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060307"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060308"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060309"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060310"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060406"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060407"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060408"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060409"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060410"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060506"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060507"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060508"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060509"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060510"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060112"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060113"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060114"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060115"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060211"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060212"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060213"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060214"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060215"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060311"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060312"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060313"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060314"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060315"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060411"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060412"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060413"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060414"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060415"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060511"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060512"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060513"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060514"
                    && ds_new.Tables[0].Rows[b]["var_id"].ToString() != "IG060515"
                    )
                {
                    if (tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"])].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB05")
                    {
                        if (IB05.Text == "1")
                        {

                            #region IB05

                            if (IB06.Text == "  :" && IB06.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB06", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB06"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB06"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB07.Text == "" && IB07.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB07", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB07"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB07"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB08.Text == "" && IB08.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB08", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB08"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB08"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB0901.Text == "" && IB0901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB0901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB0901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB0901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB0902.Text == "" && IB0902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB0902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB0902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB0902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB0903.Text == "" && IB0903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB0903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB0903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB0903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IB0996.Text == "" && IB0996.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IB0996", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IB0996"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IB0996"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01.Text == "" && IC01.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC02.Text == "" && IC02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC03.Text == "" && IC03.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC03", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC03"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC03"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC04.Text == "" && IC04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC04"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC05.Text == "" && IC05.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC05", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC05"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC05"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby1.Text == "" && chkBaby1.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby1", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby1"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby1"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0601.Text == "" && IC0601.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0601", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0601"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0601"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0701.Text == "" && IC0701.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0701", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0701"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0701"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0801.Text == "" && IC0801.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0801", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0801"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0801"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0901.Text == "" && IC0901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01001.Text == "" && IC01001.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01001", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01001"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01001"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01101.Text == "" && IC01101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby2.Text == "" && chkBaby2.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby2", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby2"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby2"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0602.Text == "" && IC0602.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0602", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0602"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0602"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0702.Text == "" && IC0702.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0702", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0702"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0702"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0802.Text == "" && IC0802.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0802", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0802"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0802"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0902.Text == "" && IC0902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01002.Text == "" && IC01002.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01002", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01002"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01002"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01102.Text == "" && IC01102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby3.Text == "" && chkBaby3.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby3", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby3"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby3"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0603.Text == "" && IC0603.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0603", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0603"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0603"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0703.Text == "" && IC0703.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0703", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0703"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0703"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0803.Text == "" && IC0803.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0803", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0803"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0803"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0903.Text == "" && IC0903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01003.Text == "" && IC01003.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01003", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01003"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01003"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01103.Text == "" && IC01103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby4.Text == "" && chkBaby4.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby4", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby4"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby4"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0604.Text == "" && IC0604.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0604", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0604"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0604"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0704.Text == "" && IC0704.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0704", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0704"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0704"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0804.Text == "" && IC0804.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0804", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0804"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0804"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0904.Text == "" && IC0904.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0904", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0904"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0904"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01004.Text == "" && IC01004.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01004", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01004"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01004"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01104.Text == "" && IC01104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (ID01.Text == "" && ID01.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "ID01", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["ID01"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["ID01"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (ID02.Text == "" && ID02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "ID02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["ID02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["ID02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (ID03.Text == "" && ID03.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "ID03", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["ID03"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["ID03"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (ID04.Text == "" && ID04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "ID04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["ID04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["ID04"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE01.Text == "" && IE01.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE01", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE01"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE01"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE02.Text == "" && IE02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE03.Text == "" && IE03.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE03", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE03"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE03"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE04.Text == "" && IE04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE04"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkHHMem1.Text == "" && chkHHMem1.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkHHMem1", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkHHMem1"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkHHMem1"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0701.Text == "" && IE0701.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0701", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0701"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0701"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkHHMem2.Text == "" && chkHHMem2.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkHHMem2", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkHHMem2"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkHHMem2"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0702.Text == "" && IE0702.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0702", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0702"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0702"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkHHMem3.Text == "" && chkHHMem3.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkHHMem3", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkHHMem3"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkHHMem3"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0703.Text == "" && IE0703.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0703", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0703"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0703"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkHHMem4.Text == "" && chkHHMem4.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkHHMem4", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkHHMem4"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkHHMem4"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0704.Text == "" && IE0704.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0704", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0704"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0704"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0801.Text == "" && IE0801.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0801", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0801"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0801"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0901.Text == "" && IE0901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0802.Text == "" && IE0802.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0802", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0802"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0802"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0902.Text == "" && IE0902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0803.Text == "" && IE0803.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0803", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0803"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0803"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0903.Text == "" && IE0903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0804.Text == "" && IE0804.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0804", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0804"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0804"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IE0904.Text == "" && IE0904.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IE0904", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IE0904"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IE0904"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF01.Text == "" && IF01.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF01", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF01"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF01"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF02.Text == "" && IF02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF03.Text == "" && IF03.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF03", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF03"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF03"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF04.Text == "" && IF04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF04"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkPW1.Text == "" && chkPW1.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkPW1", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkPW1"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkPW1"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF0601.Text == "" && IF0601.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF0601", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF0601"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF0601"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkPW2.Text == "" && chkPW2.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkPW2", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkPW2"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkPW2"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF0602.Text == "" && IF0602.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF0602", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF0602"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF0602"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkPW3.Text == "" && chkPW3.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkPW3", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkPW3"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkPW3"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF0603.Text == "" && IF0603.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF0603", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF0603"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF0603"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkPW4.Text == "" && chkPW4.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkPW4", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkPW4"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkPW4"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IF0604.Text == "" && IF0604.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IF0604", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IF0604"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IF0604"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01.Text == "" && IG01.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG02.Text == "" && IG02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0301.Text == "" && IG0301.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0301", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0301"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0301"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0302.Text == "" && IG0302.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0302", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0302"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0302"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0303.Text == "" && IG0303.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0303", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0303"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0303"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0304.Text == "" && IG0304.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0304", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0304"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0304"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0305.Text == "" && IG0305.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0305", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0305"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0305"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0306.Text == "" && IG0306.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0306", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0306"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0306"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0307.Text == "" && IG0307.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0307", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0307"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0307"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0308.Text == "" && IG0308.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0308", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0308"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0308"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0309.Text == "" && IG0309.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0309", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0309"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0309"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG03010.Text == "" && IG03010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG03010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG03010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG03010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember1.Text == "" && chkMember1.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember1", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember1"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember1"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0401.Text == "" && IG0401.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0401", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0401"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0401"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0501.Text == "" && IG0501.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0501", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0501"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0501"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG060101.Text == "" && IG060101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG060101"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060201.Text == "" && IG060201.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060201", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060201"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060201"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060301.Text == "" && IG060301.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060301", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060301"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060301"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060401.Text == "" && IG060401.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060401", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060401"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060401"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060501.Text == "" && IG060501.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060501", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060501"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060501"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070101.Text == "" && IG070101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070201.Text == "" && IG070201.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070201", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070201"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070201"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070301.Text == "" && IG070301.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070301", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070301"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070301"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070401.Text == "" && IG070401.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070401", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070401"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070401"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember2.Text == "" && chkMember2.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember2", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember2"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember2"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0402.Text == "" && IG0402.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0402", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0402"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0402"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0502.Text == "" && IG0502.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0502", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0502"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0502"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060102.Text == "" && IG060102.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060102", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060102"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060102"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060202.Text == "" && IG060202.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060202", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060202"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060202"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060302.Text == "" && IG060302.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060302", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060302"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060302"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060402.Text == "" && IG060402.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060402", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060402"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060402"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060502.Text == "" && IG060502.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060502", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060502"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060502"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070102.Text == "" && IG070102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070202.Text == "" && IG070202.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070202", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070202"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070202"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070302.Text == "" && IG070302.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070302", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070302"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070302"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070402.Text == "" && IG070402.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070402", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070402"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070402"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember3.Text == "" && chkMember3.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember3", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember3"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember3"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0403.Text == "" && IG0403.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0403", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0403"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0403"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0503.Text == "" && IG0503.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0503", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0503"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0503"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060103.Text == "" && IG060103.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060103", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060103"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060103"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060203.Text == "" && IG060203.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060203", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060203"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060203"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060303.Text == "" && IG060303.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060303", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060303"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060303"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060403.Text == "" && IG060403.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060403", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060403"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060403"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060503.Text == "" && IG060503.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060503", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060503"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060503"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070103.Text == "" && IG070103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070203.Text == "" && IG070203.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070203", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070203"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070203"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070303.Text == "" && IG070303.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070303", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070303"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070303"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070403.Text == "" && IG070403.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070403", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070403"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070403"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember4.Text == "" && chkMember4.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember4", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember4"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember4"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0404.Text == "" && IG0404.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0404", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0404"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0404"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0504.Text == "" && IG0504.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0504", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0504"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0504"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060104.Text == "" && IG060104.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060104", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060104"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060104"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060204.Text == "" && IG060204.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060204", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060204"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060204"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060304.Text == "" && IG060304.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060304", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060304"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060304"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060404.Text == "" && IG060404.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060404", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060404"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060404"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060504.Text == "" && IG060504.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060504", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060504"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060504"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070104.Text == "" && IG070104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070204.Text == "" && IG070204.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070204", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070204"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070204"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070304.Text == "" && IG070304.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070304", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070304"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070304"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070404.Text == "" && IG070404.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070404", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070404"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070404"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember5.Text == "" && chkMember5.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember5", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember5"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember5"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0405.Text == "" && IG0405.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0405", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0405"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0405"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0505.Text == "" && IG0505.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0505", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0505"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0505"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060105.Text == "" && IG060105.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060105", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060105"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060105"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060205.Text == "" && IG060205.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060205", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060205"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060205"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060305.Text == "" && IG060305.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060305", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060305"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060305"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060405.Text == "" && IG060405.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060405", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060405"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060405"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060505.Text == "" && IG060505.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060505", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060505"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060505"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070105.Text == "" && IG070105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070205.Text == "" && IG070205.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070205", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070205"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070205"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070305.Text == "" && IG070305.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070305", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070305"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070305"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070405.Text == "" && IG070405.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070405", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070405"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070405"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070501.Text == "" && IG070501.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070501", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070501"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070501"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070601.Text == "" && IG070601.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070601", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070601"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070601"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070701.Text == "" && IG070701.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070701", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070701"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070701"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070801.Text == "" && IG070801.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070801", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070801"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070801"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070901.Text == "" && IG070901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701001.Text == "" && IG0701001.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701001", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701001"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701001"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701101.Text == "" && IG0701101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701201.Text == "" && IG0701201.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701201", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701201"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701201"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701301.Text == "" && IG0701301.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701301", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701301"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701301"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0801.Text == "" && IG0801.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0801", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0801"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0801"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0901.Text == "" && IG0901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01001.Text == "" && IG01001.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01001", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01001"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01001"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01101.Text == "" && IG01101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01201.Text == "" && IG01201.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01201", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01201"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01201"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01301.Text == "" && IG01301.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01301", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01301"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01301"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01401.Text == "" && IG01401.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01401", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01401"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01401"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01501.Text == "" && IG01501.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01501", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01501"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01501"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160101.Text == "" && IG160101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160201.Text == "" && IG160201.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160201", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160201"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160201"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160301.Text == "" && IG160301.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160301", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160301"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160301"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160401.Text == "" && IG160401.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160401", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160401"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160401"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160501.Text == "" && IG160501.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160501", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160501"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160501"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160601.Text == "" && IG160601.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160601", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160601"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160601"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160701.Text == "" && IG160701.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160701", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160701"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160701"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160801.Text == "" && IG160801.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160801", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160801"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160801"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160901.Text == "" && IG160901.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160901", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160901"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160901"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601001.Text == "" && IG1601001.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601001", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601001"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601001"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601101.Text == "" && IG1601101.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601101", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601101"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601101"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601201.Text == "" && IG1601201.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601201", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601201"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601201"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070502.Text == "" && IG070502.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070502", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070502"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070502"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070602.Text == "" && IG070602.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070602", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070602"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070602"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070702.Text == "" && IG070702.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070702", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070702"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070702"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070802.Text == "" && IG070802.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070802", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070802"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070802"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070902.Text == "" && IG070902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701002.Text == "" && IG0701002.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701002", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701002"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701002"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701102.Text == "" && IG0701102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701202.Text == "" && IG0701202.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701202", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701202"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701202"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701302.Text == "" && IG0701302.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701302", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701302"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701302"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0802.Text == "" && IG0802.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0802", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0802"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0802"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0902.Text == "" && IG0902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01002.Text == "" && IG01002.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01002", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01002"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01002"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01102.Text == "" && IG01102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01202.Text == "" && IG01202.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01202", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01202"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01202"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01302.Text == "" && IG01302.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01302", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01302"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01302"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01402.Text == "" && IG01402.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01402", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01402"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01402"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01502.Text == "" && IG01502.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01502", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01502"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01502"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160102.Text == "" && IG160102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160202.Text == "" && IG160202.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160202", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160202"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160202"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160302.Text == "" && IG160302.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160302", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160302"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160302"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160402.Text == "" && IG160402.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160402", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160402"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160402"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160502.Text == "" && IG160502.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160502", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160502"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160502"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160602.Text == "" && IG160602.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160602", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160602"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160602"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160702.Text == "" && IG160702.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160702", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160702"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160702"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160802.Text == "" && IG160802.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160802", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160802"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160802"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160902.Text == "" && IG160902.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160902", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160902"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160902"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601002.Text == "" && IG1601002.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601002", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601002"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601002"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601102.Text == "" && IG1601102.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601102", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601102"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601102"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601202.Text == "" && IG1601202.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601202", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601202"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601202"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070503.Text == "" && IG070503.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070503", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070503"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070503"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070603.Text == "" && IG070603.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070603", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070603"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070603"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070703.Text == "" && IG070703.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070703", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070703"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070703"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070803.Text == "" && IG070803.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070803", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070803"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070803"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070903.Text == "" && IG070903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701003.Text == "" && IG0701003.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701003", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701003"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701003"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701103.Text == "" && IG0701103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701203.Text == "" && IG0701203.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701203", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701203"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701203"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701303.Text == "" && IG0701303.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701303", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701303"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701303"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0803.Text == "" && IG0803.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0803", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0803"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0803"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0903.Text == "" && IG0903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01003.Text == "" && IG01003.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01003", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01003"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01003"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01103.Text == "" && IG01103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01203.Text == "" && IG01203.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01203", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01203"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01203"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01303.Text == "" && IG01303.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01303", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01303"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01303"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01403.Text == "" && IG01403.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01403", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01403"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01403"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01503.Text == "" && IG01503.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01503", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01503"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01503"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160103.Text == "" && IG160103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160203.Text == "" && IG160203.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160203", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160203"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160203"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160303.Text == "" && IG160303.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160303", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160303"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160303"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160403.Text == "" && IG160403.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160403", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160403"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160403"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160503.Text == "" && IG160503.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160503", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160503"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160503"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160603.Text == "" && IG160603.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160603", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160603"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160603"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160703.Text == "" && IG160703.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160703", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160703"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160703"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160803.Text == "" && IG160803.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160803", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160803"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160803"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160903.Text == "" && IG160903.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160903", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160903"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160903"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601003.Text == "" && IG1601003.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601003", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601003"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601003"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601103.Text == "" && IG1601103.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601103", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601103"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601103"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601203.Text == "" && IG1601203.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601203", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601203"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601203"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070504.Text == "" && IG070504.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070504", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070504"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070504"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070604.Text == "" && IG070604.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070604", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070604"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070604"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070704.Text == "" && IG070704.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070704", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070704"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070704"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070804.Text == "" && IG070804.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070804", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070804"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070804"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070904.Text == "" && IG070904.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070904", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070904"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070904"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701004.Text == "" && IG0701004.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701004", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701004"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701004"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701104.Text == "" && IG0701104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701204.Text == "" && IG0701204.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701204", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701204"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701204"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701304.Text == "" && IG0701304.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701304", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701304"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701304"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0804.Text == "" && IG0804.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0804", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0804"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0804"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0904.Text == "" && IG0904.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0904", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0904"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0904"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01004.Text == "" && IG01004.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01004", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01004"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01004"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01104.Text == "" && IG01104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01204.Text == "" && IG01204.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01204", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01204"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01204"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01304.Text == "" && IG01304.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01304", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01304"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01304"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01404.Text == "" && IG01404.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01404", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01404"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01404"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01504.Text == "" && IG01504.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01504", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01504"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01504"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160104.Text == "" && IG160104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160204.Text == "" && IG160204.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160204", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160204"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160204"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160304.Text == "" && IG160304.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160304", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160304"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160304"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160404.Text == "" && IG160404.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160404", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160404"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160404"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160504.Text == "" && IG160504.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160504", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160504"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160504"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160604.Text == "" && IG160604.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160604", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160604"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160604"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160704.Text == "" && IG160704.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160704", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160704"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160704"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160804.Text == "" && IG160804.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160804", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160804"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160804"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160904.Text == "" && IG160904.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160904", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160904"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160904"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601004.Text == "" && IG1601004.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601004", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601004"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601004"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601104.Text == "" && IG1601104.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601104", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601104"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601104"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601204.Text == "" && IG1601204.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601204", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601204"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601204"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070505.Text == "" && IG070505.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070505", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070505"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070505"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070605.Text == "" && IG070605.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070605", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070605"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070605"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070705.Text == "" && IG070705.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070705", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070705"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070705"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070805.Text == "" && IG070805.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070805", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070805"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070805"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070905.Text == "" && IG070905.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070905", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070905"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070905"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701005.Text == "" && IG0701005.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701005", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701005"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701005"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701105.Text == "" && IG0701105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701205.Text == "" && IG0701205.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701205", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701205"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701205"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701305.Text == "" && IG0701305.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701305", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701305"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701305"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0805.Text == "" && IG0805.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0805", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0805"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0805"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0905.Text == "" && IG0905.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0905", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0905"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0905"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01005.Text == "" && IG01005.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01005", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01005"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01005"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01105.Text == "" && IG01105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01205.Text == "" && IG01205.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01205", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01205"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01205"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01305.Text == "" && IG01305.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01305", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01305"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01305"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01405.Text == "" && IG01405.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01405", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01405"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01405"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01505.Text == "" && IG01505.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01505", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01505"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01505"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160105.Text == "" && IG160105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160205.Text == "" && IG160205.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160205", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160205"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160205"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160305.Text == "" && IG160305.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160305", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160305"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160305"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160405.Text == "" && IG160405.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160405", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160405"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160405"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160505.Text == "" && IG160505.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160505", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160505"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160505"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160605.Text == "" && IG160605.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160605", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160605"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160605"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160705.Text == "" && IG160705.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160705", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160705"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160705"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160805.Text == "" && IG160805.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160805", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160805"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160805"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160905.Text == "" && IG160905.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160905", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160905"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160905"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601005.Text == "" && IG1601005.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601005", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601005"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601005"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601105.Text == "" && IG1601105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601205.Text == "" && IG1601205.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601205", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601205"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601205"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (QCFUP01.Text == "" && QCFUP01.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP01", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP01"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["QCFUP01"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (QCFUP02.Text == "  :" && QCFUP02.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP02", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP02"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["QCFUP02"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (QCFUP03.Text == "" && QCFUP03.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP03", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP03"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["QCFUP03"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (QCFUP04.Text == "" && QCFUP04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["QCFUP04"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (QCFUP05.Text == "  /  /" && QCFUP05.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP05", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP05"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["QCFUP05"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (QCFUP06.Text == "  :" && QCFUP06.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP06", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP06"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["QCFUP06"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (QCFUP07.Text == "" && QCFUP07.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP07", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP07"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["QCFUP07"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (chkBaby5.Text == "" && chkBaby5.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby5", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby5"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby5"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0605.Text == "" && IC0605.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0605", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0605"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0605"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0705.Text == "" && IC0705.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0705", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0705"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0705"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0805.Text == "" && IC0805.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0805", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0805"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0805"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0905.Text == "" && IC0905.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0905", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0905"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0905"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01005.Text == "" && IC01005.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01005", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01005"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01005"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01105.Text == "" && IC01105.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01105", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01105"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01105"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby6.Text == "" && chkBaby6.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby6", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby6"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby6"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0606.Text == "" && IC0606.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0606", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0606"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0606"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0706.Text == "" && IC0706.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0706", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0706"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0706"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0806.Text == "" && IC0806.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0806", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0806"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0806"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0906.Text == "" && IC0906.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0906", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0906"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0906"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01006.Text == "" && IC01006.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01006", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01006"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01006"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01106.Text == "" && IC01106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby7.Text == "" && chkBaby7.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby7", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby7"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby7"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0607.Text == "" && IC0607.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0607", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0607"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0607"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0707.Text == "" && IC0707.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0707", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0707"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0707"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0807.Text == "" && IC0807.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0807", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0807"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0807"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0907.Text == "" && IC0907.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0907", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0907"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0907"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01007.Text == "" && IC01007.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01007", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01007"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01007"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01107.Text == "" && IC01107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby8.Text == "" && chkBaby8.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby8", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby8"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby8"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0608.Text == "" && IC0608.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0608", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0608"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0608"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0708.Text == "" && IC0708.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0708", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0708"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0708"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0808.Text == "" && IC0808.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0808", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0808"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0808"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0908.Text == "" && IC0908.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0908", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0908"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0908"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01008.Text == "" && IC01008.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01008", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01008"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01008"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01108.Text == "" && IC01108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby9.Text == "" && chkBaby9.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby9", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby9"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby9"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0609.Text == "" && IC0609.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0609", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0609"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0609"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0709.Text == "" && IC0709.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0709", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0709"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0709"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0809.Text == "" && IC0809.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0809", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0809"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0809"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC0909.Text == "" && IC0909.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC0909", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC0909"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC0909"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01009.Text == "" && IC01009.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01009", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01009"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01009"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01109.Text == "" && IC01109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby10.Text == "" && chkBaby10.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby10", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby10"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby10"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC06010.Text == "" && IC06010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC06010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC06010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC06010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC07010.Text == "" && IC07010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC07010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC07010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC07010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC08010.Text == "" && IC08010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC08010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC08010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC08010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC09010.Text == "" && IC09010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC09010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC09010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC09010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01010.Text == "" && IC01010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01110.Text == "" && IC01110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkBaby11.Text == "" && chkBaby11.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkBaby11", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkBaby11"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkBaby11"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC06011.Text == "" && IC06011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC06011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC06011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC06011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC07011.Text == "" && IC07011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC07011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC07011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC07011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC08011.Text == "" && IC08011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC08011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC08011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC08011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC09011.Text == "" && IC09011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC09011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC09011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC09011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01011.Text == "" && IC01011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IC01111.Text == "" && IC01111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IC01111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IC01111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IC01111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember6.Text == "" && chkMember6.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember6", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember6"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember6"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0406.Text == "" && IG0406.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0406", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0406"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0406"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0506.Text == "" && IG0506.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0506", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0506"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0506"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG060106.Text == "" && IG060106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG060106"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060206.Text == "" && IG060206.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060206", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060206"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060206"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060306.Text == "" && IG060306.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060306", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060306"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060306"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060406.Text == "" && IG060406.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060406", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060406"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060406"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060506.Text == "" && IG060506.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060506", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060506"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060506"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070106.Text == "" && IG070106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070206.Text == "" && IG070206.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070206", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070206"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070206"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070306.Text == "" && IG070306.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070306", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070306"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070306"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070406.Text == "" && IG070406.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070406", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070406"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070406"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070506.Text == "" && IG070506.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070506", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070506"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070506"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070606.Text == "" && IG070606.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070606", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070606"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070606"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070706.Text == "" && IG070706.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070706", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070706"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070706"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070806.Text == "" && IG070806.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070806", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070806"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070806"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070906.Text == "" && IG070906.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070906", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070906"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070906"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701006.Text == "" && IG0701006.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701006", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701006"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701006"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701106.Text == "" && IG0701106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701206.Text == "" && IG0701206.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701206", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701206"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701206"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701306.Text == "" && IG0701306.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701306", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701306"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701306"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0806.Text == "" && IG0806.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0806", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0806"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0806"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0906.Text == "" && IG0906.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0906", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0906"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0906"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01006.Text == "" && IG01006.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01006", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01006"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01006"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember7.Text == "" && chkMember7.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember7", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember7"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember7"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0407.Text == "" && IG0407.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0407", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0407"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0407"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0507.Text == "" && IG0507.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0507", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0507"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0507"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060107.Text == "" && IG060107.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060107", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060107"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060107"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060207.Text == "" && IG060207.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060207", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060207"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060207"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060307.Text == "" && IG060307.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060307", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060307"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060307"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060407.Text == "" && IG060407.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060407", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060407"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060407"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060507.Text == "" && IG060507.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060507", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060507"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060507"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070107.Text == "" && IG070107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070207.Text == "" && IG070207.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070207", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070207"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070207"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070307.Text == "" && IG070307.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070307", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070307"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070307"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070407.Text == "" && IG070407.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070407", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070407"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070407"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070507.Text == "" && IG070507.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070507", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070507"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070507"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070607.Text == "" && IG070607.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070607", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070607"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070607"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070707.Text == "" && IG070707.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070707", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070707"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070707"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070807.Text == "" && IG070807.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070807", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070807"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070807"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070907.Text == "" && IG070907.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070907", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070907"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070907"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701007.Text == "" && IG0701007.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701007", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701007"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701007"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701107.Text == "" && IG0701107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701207.Text == "" && IG0701207.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701207", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701207"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701207"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701307.Text == "" && IG0701307.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701307", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701307"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701307"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0807.Text == "" && IG0807.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0807", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0807"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0807"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0907.Text == "" && IG0907.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0907", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0907"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0907"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01007.Text == "" && IG01007.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01007", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01007"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01007"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember8.Text == "" && chkMember8.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember8", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember8"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember8"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0408.Text == "" && IG0408.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0408", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0408"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0408"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0508.Text == "" && IG0508.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0508", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0508"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0508"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060108.Text == "" && IG060108.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060108", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060108"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060108"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060208.Text == "" && IG060208.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060208", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060208"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060208"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060308.Text == "" && IG060308.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060308", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060308"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060308"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060408.Text == "" && IG060408.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060408", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060408"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060408"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060508.Text == "" && IG060508.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060508", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060508"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060508"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070108.Text == "" && IG070108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070208.Text == "" && IG070208.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070208", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070208"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070208"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070308.Text == "" && IG070308.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070308", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070308"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070308"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070408.Text == "" && IG070408.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070408", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070408"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070408"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070508.Text == "" && IG070508.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070508", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070508"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070508"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070608.Text == "" && IG070608.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070608", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070608"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070608"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070708.Text == "" && IG070708.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070708", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070708"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070708"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070808.Text == "" && IG070808.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070808", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070808"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070808"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070908.Text == "" && IG070908.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070908", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070908"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070908"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701008.Text == "" && IG0701008.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701008", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701008"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701008"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701108.Text == "" && IG0701108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701208.Text == "" && IG0701208.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701208", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701208"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701208"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701308.Text == "" && IG0701308.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701308", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701308"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701308"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0808.Text == "" && IG0808.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0808", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0808"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0808"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0908.Text == "" && IG0908.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0908", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0908"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0908"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01008.Text == "" && IG01008.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01008", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01008"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01008"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember9.Text == "" && chkMember9.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember9", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember9"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember9"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0409.Text == "" && IG0409.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0409", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0409"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0409"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0509.Text == "" && IG0509.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0509", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0509"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0509"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060109.Text == "" && IG060109.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060109", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060109"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060109"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060209.Text == "" && IG060209.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060209", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060209"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060209"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060309.Text == "" && IG060309.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060309", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060309"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060309"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060409.Text == "" && IG060409.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060409", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060409"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060409"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060509.Text == "" && IG060509.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060509", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060509"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060509"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070109.Text == "" && IG070109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070209.Text == "" && IG070209.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070209", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070209"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070209"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070309.Text == "" && IG070309.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070309", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070309"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070309"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070409.Text == "" && IG070409.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070409", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070409"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070409"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070509.Text == "" && IG070509.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070509", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070509"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070509"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070609.Text == "" && IG070609.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070609", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070609"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070609"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070709.Text == "" && IG070709.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070709", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070709"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070709"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070809.Text == "" && IG070809.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070809", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070809"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070809"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070909.Text == "" && IG070909.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070909", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070909"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070909"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701009.Text == "" && IG0701009.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701009", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701009"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701009"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701109.Text == "" && IG0701109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701209.Text == "" && IG0701209.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701209", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701209"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701209"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701309.Text == "" && IG0701309.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701309", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701309"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701309"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0809.Text == "" && IG0809.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0809", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0809"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0809"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0909.Text == "" && IG0909.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0909", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0909"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0909"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01009.Text == "" && IG01009.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01009", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01009"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01009"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember10.Text == "" && chkMember10.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember10", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember10"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember10"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0410.Text == "" && IG0410.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0410", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0410"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0410"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0510.Text == "" && IG0510.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0510", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0510"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0510"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060110.Text == "" && IG060110.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060110", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060110"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060110"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060210.Text == "" && IG060210.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060210", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060210"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060210"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060310.Text == "" && IG060310.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060310", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060310"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060310"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060410.Text == "" && IG060410.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060410", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060410"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060410"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060510.Text == "" && IG060510.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060510", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060510"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060510"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070110.Text == "" && IG070110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070210.Text == "" && IG070210.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070210", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070210"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070210"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070310.Text == "" && IG070310.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070310", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070310"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070310"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070410.Text == "" && IG070410.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070410", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070410"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070410"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070510.Text == "" && IG070510.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070510", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070510"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070510"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070610.Text == "" && IG070610.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070610", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070610"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070610"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070710.Text == "" && IG070710.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070710", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070710"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070710"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070810.Text == "" && IG070810.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070810", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070810"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070810"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070910.Text == "" && IG070910.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070910", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070910"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070910"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701010.Text == "" && IG0701010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701110.Text == "" && IG0701110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701210.Text == "" && IG0701210.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701210", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701210"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701210"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701310.Text == "" && IG0701310.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701310", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701310"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701310"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0810.Text == "" && IG0810.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0810", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0810"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0810"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0910.Text == "" && IG0910.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0910", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0910"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0910"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01010.Text == "" && IG01010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01106.Text == "" && IG01106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01206.Text == "" && IG01206.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01206", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01206"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01206"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01306.Text == "" && IG01306.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01306", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01306"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01306"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01406.Text == "" && IG01406.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01406", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01406"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01406"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01506.Text == "" && IG01506.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01506", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01506"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01506"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01107.Text == "" && IG01107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01207.Text == "" && IG01207.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01207", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01207"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01207"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01307.Text == "" && IG01307.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01307", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01307"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01307"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01407.Text == "" && IG01407.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01407", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01407"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01407"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01507.Text == "" && IG01507.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01507", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01507"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01507"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01108.Text == "" && IG01108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01208.Text == "" && IG01208.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01208", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01208"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01208"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01308.Text == "" && IG01308.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01308", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01308"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01308"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01408.Text == "" && IG01408.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01408", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01408"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01408"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01508.Text == "" && IG01508.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01508", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01508"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01508"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01109.Text == "" && IG01109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01209.Text == "" && IG01209.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01209", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01209"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01209"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01309.Text == "" && IG01309.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01309", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01309"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01309"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01409.Text == "" && IG01409.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01409", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01409"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01409"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01509.Text == "" && IG01509.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01509", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01509"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01509"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01110.Text == "" && IG01110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01210.Text == "" && IG01210.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01210", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01210"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01210"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01310.Text == "" && IG01310.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01310", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01310"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01310"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01410.Text == "" && IG01410.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01410", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01410"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01410"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01510.Text == "" && IG01510.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01510", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01510"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01510"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160106.Text == "" && IG160106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160206.Text == "" && IG160206.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160206", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160206"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160206"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160306.Text == "" && IG160306.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160306", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160306"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160306"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160406.Text == "" && IG160406.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160406", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160406"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160406"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160506.Text == "" && IG160506.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160506", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160506"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160506"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160606.Text == "" && IG160606.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160606", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160606"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160606"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160706.Text == "" && IG160706.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160706", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160706"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160706"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160806.Text == "" && IG160806.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160806", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160806"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160806"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160906.Text == "" && IG160906.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160906", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160906"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160906"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601006.Text == "" && IG1601006.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601006", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601006"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601006"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601106.Text == "" && IG1601106.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601106", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601106"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601106"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601206.Text == "" && IG1601206.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601206", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601206"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601206"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160107.Text == "" && IG160107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160207.Text == "" && IG160207.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160207", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160207"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160207"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160307.Text == "" && IG160307.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160307", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160307"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160307"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160407.Text == "" && IG160407.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160407", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160407"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160407"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160507.Text == "" && IG160507.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160507", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160507"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160507"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160607.Text == "" && IG160607.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160607", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160607"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160607"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160707.Text == "" && IG160707.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160707", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160707"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160707"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160807.Text == "" && IG160807.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160807", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160807"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160807"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160907.Text == "" && IG160907.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160907", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160907"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160907"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601007.Text == "" && IG1601007.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601007", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601007"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601007"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601107.Text == "" && IG1601107.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601107", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601107"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601107"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601207.Text == "" && IG1601207.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601207", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601207"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601207"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160108.Text == "" && IG160108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160208.Text == "" && IG160208.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160208", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160208"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160208"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160308.Text == "" && IG160308.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160308", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160308"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160308"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160408.Text == "" && IG160408.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160408", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160408"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160408"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160508.Text == "" && IG160508.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160508", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160508"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160508"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160608.Text == "" && IG160608.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160608", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160608"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160608"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160708.Text == "" && IG160708.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160708", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160708"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160708"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160808.Text == "" && IG160808.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160808", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160808"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160808"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160908.Text == "" && IG160908.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160908", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160908"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160908"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601008.Text == "" && IG1601008.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601008", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601008"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601008"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601108.Text == "" && IG1601108.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601108", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601108"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601108"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601208.Text == "" && IG1601208.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601208", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601208"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601208"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160109.Text == "" && IG160109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160209.Text == "" && IG160209.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160209", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160209"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160209"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160309.Text == "" && IG160309.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160309", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160309"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160309"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160409.Text == "" && IG160409.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160409", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160409"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160409"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160509.Text == "" && IG160509.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160509", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160509"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160509"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160609.Text == "" && IG160609.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160609", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160609"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160609"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160709.Text == "" && IG160709.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160709", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160709"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160709"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160809.Text == "" && IG160809.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160809", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160809"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160809"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160909.Text == "" && IG160909.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160909", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160909"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160909"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601009.Text == "" && IG1601009.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601009", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601009"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601009"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601109.Text == "" && IG1601109.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601109", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601109"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601109"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601209.Text == "" && IG1601209.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601209", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601209"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601209"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160110.Text == "" && IG160110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160210.Text == "" && IG160210.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160210", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160210"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160210"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160310.Text == "" && IG160310.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160310", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160310"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160310"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160410.Text == "" && IG160410.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160410", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160410"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160410"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160510.Text == "" && IG160510.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160510", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160510"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160510"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160610.Text == "" && IG160610.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160610", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160610"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160610"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160710.Text == "" && IG160710.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160710", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160710"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160710"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160810.Text == "" && IG160810.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160810", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160810"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160810"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160910.Text == "" && IG160910.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160910", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160910"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160910"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601010.Text == "" && IG1601010.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601010", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601010"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601010"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601110.Text == "" && IG1601110.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601110", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601110"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601110"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601210.Text == "" && IG1601210.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601210", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601210"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601210"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (chkMember11.Text == "" && chkMember11.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember11", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember11"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember11"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0411.Text == "" && IG0411.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0411", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0411"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0411"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0511.Text == "" && IG0511.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0511", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0511"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0511"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG060111.Text == "" && IG060111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG060111"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060211.Text == "" && IG060211.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060211", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060211"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060211"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060311.Text == "" && IG060311.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060311", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060311"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060311"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060411.Text == "" && IG060411.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060411", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060411"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060411"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060511.Text == "" && IG060511.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060511", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060511"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060511"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (chkMember12.Text == "" && chkMember12.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember12", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember12"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember12"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0412.Text == "" && IG0412.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0412", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0412"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0412"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0512.Text == "" && IG0512.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0512", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0512"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0512"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060112.Text == "" && IG060112.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060112", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060112"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060112"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060212.Text == "" && IG060212.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060212", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060212"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060212"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060312.Text == "" && IG060312.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060312", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060312"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060312"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060412.Text == "" && IG060412.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060412", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060412"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060412"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060512.Text == "" && IG060512.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060512", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060512"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060512"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (chkMember13.Text == "" && chkMember13.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember13", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember13"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember13"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0413.Text == "" && IG0413.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0413", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0413"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0413"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0513.Text == "" && IG0513.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0513", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0513"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0513"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060113.Text == "" && IG060113.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060113", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060113"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060113"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060213.Text == "" && IG060213.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060213", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060213"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060213"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060313.Text == "" && IG060313.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060313", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060313"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060313"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060413.Text == "" && IG060413.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060413", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060413"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060413"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060513.Text == "" && IG060513.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060513", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060513"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060513"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (chkMember14.Text == "" && chkMember14.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember14", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember14"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember14"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0414.Text == "" && IG0414.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0414", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0414"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0414"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0514.Text == "" && IG0514.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0514", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0514"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0514"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060114.Text == "" && IG060114.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060114", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060114"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060114"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060214.Text == "" && IG060214.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060214", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060214"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060214"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060314.Text == "" && IG060314.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060314", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060314"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060314"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060414.Text == "" && IG060414.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060414", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060414"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060414"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060514.Text == "" && IG060514.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060514", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060514"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060514"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (chkMember15.Text == "" && chkMember15.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "chkMember15", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["chkMember15"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["chkMember15"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0415.Text == "" && IG0415.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0415", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0415"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0415"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0515.Text == "" && IG0515.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0515", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0515"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0515"].Focus();
                                IsError = true;
                                return;
                            }
                            //else if (IG060115.Text == "" && IG060115.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060115", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060115"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060115"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060215.Text == "" && IG060215.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060215", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060215"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060215"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060315.Text == "" && IG060315.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060315", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060315"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060315"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060415.Text == "" && IG060415.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060415", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060415"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060415"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            //else if (IG060515.Text == "" && IG060515.Enabled == true)
                            //{
                            //    IsError = true;
                            //    int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG060515", "TabPageNo"));
                            //    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            //    error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG060515"].Name;
                            //    tabControl1.SelectedIndex = tab_page_no;
                            //    tabControl1.TabPages[tab_page_no].Controls["IG060515"].Focus();
                            //    IsError = true;
                            //    return;
                            //}
                            else if (IG070111.Text == "" && IG070111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070211.Text == "" && IG070211.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070211", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070211"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070211"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070311.Text == "" && IG070311.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070311", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070311"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070311"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070411.Text == "" && IG070411.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070411", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070411"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070411"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070511.Text == "" && IG070511.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070511", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070511"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070511"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070611.Text == "" && IG070611.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070611", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070611"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070611"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070711.Text == "" && IG070711.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070711", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070711"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070711"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070811.Text == "" && IG070811.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070811", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070811"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070811"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070911.Text == "" && IG070911.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070911", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070911"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070911"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701011.Text == "" && IG0701011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701111.Text == "" && IG0701111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701211.Text == "" && IG0701211.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701211", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701211"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701211"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701311.Text == "" && IG0701311.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701311", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701311"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701311"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0811.Text == "" && IG0811.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0811", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0811"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0811"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0911.Text == "" && IG0911.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0911", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0911"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0911"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01011.Text == "" && IG01011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01111.Text == "" && IG01111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01211.Text == "" && IG01211.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01211", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01211"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01211"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01311.Text == "" && IG01311.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01311", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01311"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01311"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01411.Text == "" && IG01411.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01411", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01411"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01411"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01511.Text == "" && IG01511.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01511", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01511"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01511"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070112.Text == "" && IG070112.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070112", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070112"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070112"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070212.Text == "" && IG070212.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070212", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070212"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070212"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070312.Text == "" && IG070312.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070312", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070312"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070312"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070412.Text == "" && IG070412.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070412", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070412"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070412"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070512.Text == "" && IG070512.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070512", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070512"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070512"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070612.Text == "" && IG070612.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070612", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070612"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070612"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070712.Text == "" && IG070712.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070712", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070712"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070712"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070812.Text == "" && IG070812.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070812", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070812"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070812"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070912.Text == "" && IG070912.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070912", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070912"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070912"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701012.Text == "" && IG0701012.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701012", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701012"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701012"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701112.Text == "" && IG0701112.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701112", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701112"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701112"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701212.Text == "" && IG0701212.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701212", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701212"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701212"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701312.Text == "" && IG0701312.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701312", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701312"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701312"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0812.Text == "" && IG0812.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0812", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0812"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0812"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0912.Text == "" && IG0912.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0912", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0912"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0912"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01012.Text == "" && IG01012.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01012", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01012"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01012"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01112.Text == "" && IG01112.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01112", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01112"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01112"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01212.Text == "" && IG01212.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01212", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01212"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01212"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01312.Text == "" && IG01312.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01312", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01312"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01312"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01412.Text == "" && IG01412.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01412", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01412"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01412"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01512.Text == "" && IG01512.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01512", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01512"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01512"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070113.Text == "" && IG070113.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070113", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070113"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070113"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070213.Text == "" && IG070213.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070213", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070213"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070213"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070313.Text == "" && IG070313.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070313", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070313"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070313"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070413.Text == "" && IG070413.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070413", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070413"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070413"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070513.Text == "" && IG070513.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070513", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070513"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070513"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070613.Text == "" && IG070613.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070613", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070613"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070613"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070713.Text == "" && IG070713.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070713", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070713"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070713"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070813.Text == "" && IG070813.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070813", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070813"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070813"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070913.Text == "" && IG070913.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070913", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070913"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070913"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701013.Text == "" && IG0701013.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701013", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701013"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701013"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701113.Text == "" && IG0701113.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701113", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701113"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701113"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701213.Text == "" && IG0701213.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701213", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701213"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701213"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701313.Text == "" && IG0701313.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701313", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701313"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701313"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0813.Text == "" && IG0813.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0813", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0813"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0813"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0913.Text == "" && IG0913.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0913", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0913"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0913"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01013.Text == "" && IG01013.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01013", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01013"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01013"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01113.Text == "" && IG01113.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01113", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01113"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01113"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01213.Text == "" && IG01213.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01213", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01213"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01213"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01313.Text == "" && IG01313.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01313", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01313"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01313"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01413.Text == "" && IG01413.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01413", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01413"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01413"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01513.Text == "" && IG01513.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01513", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01513"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01513"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070114.Text == "" && IG070114.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070114", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070114"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070114"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070214.Text == "" && IG070214.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070214", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070214"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070214"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070314.Text == "" && IG070314.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070314", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070314"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070314"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070414.Text == "" && IG070414.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070414", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070414"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070414"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070514.Text == "" && IG070514.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070514", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070514"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070514"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070614.Text == "" && IG070614.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070614", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070614"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070614"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070714.Text == "" && IG070714.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070714", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070714"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070714"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070814.Text == "" && IG070814.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070814", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070814"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070814"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070914.Text == "" && IG070914.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070914", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070914"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070914"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701014.Text == "" && IG0701014.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701014", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701014"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701014"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701114.Text == "" && IG0701114.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701114", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701114"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701114"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701214.Text == "" && IG0701214.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701214", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701214"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701214"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701314.Text == "" && IG0701314.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701314", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701314"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701314"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0814.Text == "" && IG0814.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0814", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0814"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0814"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0914.Text == "" && IG0914.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0914", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0914"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0914"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01014.Text == "" && IG01014.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01014", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01014"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01014"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01114.Text == "" && IG01114.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01114", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01114"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01114"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01214.Text == "" && IG01214.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01214", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01214"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01214"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01314.Text == "" && IG01314.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01314", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01314"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01314"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01414.Text == "" && IG01414.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01414", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01414"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01414"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01514.Text == "" && IG01514.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01514", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01514"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01514"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070115.Text == "" && IG070115.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070115", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070115"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070115"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070215.Text == "" && IG070215.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070215", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070215"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070215"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070315.Text == "" && IG070315.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070315", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070315"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070315"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070415.Text == "" && IG070415.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070415", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070415"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070415"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070515.Text == "" && IG070515.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070515", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070515"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070515"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070615.Text == "" && IG070615.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070615", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070615"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070615"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070715.Text == "" && IG070715.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070715", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070715"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070715"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070815.Text == "" && IG070815.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070815", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070815"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070815"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG070915.Text == "" && IG070915.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG070915", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG070915"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG070915"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701015.Text == "" && IG0701015.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701015", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701015"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701015"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701115.Text == "" && IG0701115.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701115", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701115"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701115"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701215.Text == "" && IG0701215.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701215", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701215"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701215"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0701315.Text == "" && IG0701315.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0701315", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0701315"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0701315"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0815.Text == "" && IG0815.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0815", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0815"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0815"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG0915.Text == "" && IG0915.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG0915", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG0915"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG0915"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01015.Text == "" && IG01015.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01015", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01015"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01015"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01115.Text == "" && IG01115.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01115", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01115"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01115"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01215.Text == "" && IG01215.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01215", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01215"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01215"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01315.Text == "" && IG01315.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01315", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01315"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01315"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01415.Text == "" && IG01415.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01415", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01415"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01415"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG01515.Text == "" && IG01515.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG01515", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG01515"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG01515"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160111.Text == "" && IG160111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160211.Text == "" && IG160211.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160211", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160211"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160211"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160311.Text == "" && IG160311.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160311", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160311"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160311"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160411.Text == "" && IG160411.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160411", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160411"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160411"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160511.Text == "" && IG160511.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160511", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160511"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160511"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160611.Text == "" && IG160611.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160611", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160611"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160611"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160711.Text == "" && IG160711.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160711", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160711"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160711"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160811.Text == "" && IG160811.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160811", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160811"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160811"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160911.Text == "" && IG160911.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160911", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160911"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160911"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601011.Text == "" && IG1601011.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601011", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601011"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601011"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601111.Text == "" && IG1601111.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601111", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601111"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601111"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601211.Text == "" && IG1601211.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601211", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601211"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601211"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160112.Text == "" && IG160112.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160112", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160112"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160112"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160212.Text == "" && IG160212.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160212", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160212"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160212"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160312.Text == "" && IG160312.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160312", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160312"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160312"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160412.Text == "" && IG160412.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160412", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160412"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160412"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160512.Text == "" && IG160512.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160512", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160512"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160512"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160612.Text == "" && IG160612.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160612", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160612"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160612"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160712.Text == "" && IG160712.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160712", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160712"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160712"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160812.Text == "" && IG160812.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160812", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160812"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160812"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160912.Text == "" && IG160912.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160912", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160912"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160912"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601012.Text == "" && IG1601012.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601012", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601012"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601012"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601112.Text == "" && IG1601112.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601112", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601112"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601112"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601212.Text == "" && IG1601212.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601212", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601212"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601212"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160113.Text == "" && IG160113.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160113", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160113"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160113"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160213.Text == "" && IG160213.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160213", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160213"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160213"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160313.Text == "" && IG160313.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160313", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160313"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160313"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160413.Text == "" && IG160413.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160413", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160413"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160413"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160513.Text == "" && IG160513.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160513", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160513"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160513"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160613.Text == "" && IG160613.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160613", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160613"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160613"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160713.Text == "" && IG160713.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160713", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160713"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160713"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160813.Text == "" && IG160813.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160813", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160813"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160813"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160913.Text == "" && IG160913.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160913", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160913"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160913"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601013.Text == "" && IG1601013.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601013", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601013"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601013"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601113.Text == "" && IG1601113.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601113", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601113"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601113"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601213.Text == "" && IG1601213.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601213", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601213"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601213"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160114.Text == "" && IG160114.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160114", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160114"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160114"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160214.Text == "" && IG160214.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160214", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160214"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160214"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160314.Text == "" && IG160314.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160314", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160314"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160314"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160414.Text == "" && IG160414.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160414", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160414"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160414"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160514.Text == "" && IG160514.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160514", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160514"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160514"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160614.Text == "" && IG160614.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160614", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160614"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160614"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160714.Text == "" && IG160714.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160714", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160714"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160714"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160814.Text == "" && IG160814.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160814", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160814"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160814"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160914.Text == "" && IG160914.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160914", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160914"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160914"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601014.Text == "" && IG1601014.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601014", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601014"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601014"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601114.Text == "" && IG1601114.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601114", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601114"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601114"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601214.Text == "" && IG1601214.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601214", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601214"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601214"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160115.Text == "" && IG160115.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160115", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160115"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160115"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160215.Text == "" && IG160215.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160215", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160215"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160215"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160315.Text == "" && IG160315.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160315", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160315"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160315"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160415.Text == "" && IG160415.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160415", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160415"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160415"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160515.Text == "" && IG160515.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160515", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160515"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160515"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160615.Text == "" && IG160615.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160615", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160615"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160615"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160715.Text == "" && IG160715.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160715", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160715"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160715"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160815.Text == "" && IG160815.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160815", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160815"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160815"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG160915.Text == "" && IG160915.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG160915", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG160915"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG160915"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601015.Text == "" && IG1601015.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601015", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601015"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601015"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601115.Text == "" && IG1601115.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601115", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601115"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601115"].Focus();
                                IsError = true;
                                return;
                            }
                            else if (IG1601215.Text == "" && IG1601215.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "IG1601215", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["IG1601215"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["IG1601215"].Focus();
                                IsError = true;
                                return;
                            }

                            #endregion IB05

                        }
                        else if (IB05.Text == "" && IB05.Enabled == true)
                        {
                            IsError = true;

                            MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            error_fldName = tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name;
                            tabControl1.SelectedIndex = Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString());
                            tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Focus();

                            IsError = false;

                            return;
                        }


                    }
                    else if (tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"])].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP03")
                    {

                        #region 

                        if (QCFUP03.Text == "2")
                        {
                            if (QCFUP04.Text == "" && QCFUP04.Enabled == true)
                            {
                                IsError = true;
                                int tab_page_no = Convert.ToInt16(obj_op.Get_Dictionary_FieldValue("Form1BL", "QCFUP04", "TabPageNo"));
                                MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                error_fldName = tabControl1.TabPages[tab_page_no].Controls["QCFUP04"].Name;
                                tabControl1.SelectedIndex = tab_page_no;
                                tabControl1.TabPages[tab_page_no].Controls["QCFUP04"].Focus();
                                IsError = true;
                                return;
                            }

                        }
                        else if (QCFUP03.Text == "" && QCFUP03.Enabled == true)
                        {
                            IsError = true;

                            MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            error_fldName = tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name;
                            tabControl1.SelectedIndex = Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString());
                            tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Focus();

                            IsError = false;

                            return;
                        }

                        #endregion

                    }
                    else
                    {

                        if (tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Text == "" ||
                            tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Text == "  :" ||
                            tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Text == "  /  /")
                        {

                            if (

        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB06" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB07" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB08" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB0901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB0902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB0903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IB0996" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC03" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC04" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC05" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby1" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0601" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0701" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0801" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01001" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby2" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0602" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0702" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0802" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01002" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby3" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0603" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0703" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0803" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01003" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby4" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0604" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0704" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0804" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0904" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01004" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "ID01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "ID02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "ID03" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "ID04" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE03" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE04" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkHHMem1" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0701" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkHHMem2" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0702" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkHHMem3" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0703" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkHHMem4" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0704" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0801" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0802" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0803" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0804" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IE0904" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF03" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF04" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkPW1" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF0601" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkPW2" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF0602" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkPW3" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF0603" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkPW4" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IF0604" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG03010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember1" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0401" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0501" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060401" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060501" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070401" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember2" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0402" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0502" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060402" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060502" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070402" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember3" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0403" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0503" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060403" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060503" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070403" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember4" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0404" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0504" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060404" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060504" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070404" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember5" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0405" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0505" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060405" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060505" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070405" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070501" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070601" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070701" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070801" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701001" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0801" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01001" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01401" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01501" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160301" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160401" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160501" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160601" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160701" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160801" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160901" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601001" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601101" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601201" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070502" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070602" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070702" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070802" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701002" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0802" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01002" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01402" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01502" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160302" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160402" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160502" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160602" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160702" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160802" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160902" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601002" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601102" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601202" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070503" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070603" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070703" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070803" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701003" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0803" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01003" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01403" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01503" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160303" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160403" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160503" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160603" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160703" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160803" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160903" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601003" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601103" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601203" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070504" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070604" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070704" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070804" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070904" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701004" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0804" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0904" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01004" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01404" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01504" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160304" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160404" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160504" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160604" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160704" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160804" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160904" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601004" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601104" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601204" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070505" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070605" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070705" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070805" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070905" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701005" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0805" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0905" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01005" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01405" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01505" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160305" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160405" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160505" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160605" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160705" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160805" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160905" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601005" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601205" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP01" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP02" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP03" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP04" ||
        //tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP05" ||
        //tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP06" ||
        //tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "QCFUP07" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby5" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0605" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0705" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0805" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0905" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01005" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01105" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby6" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0606" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0706" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0806" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0906" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01006" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby7" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0607" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0707" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0807" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0907" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01007" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby8" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0608" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0708" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0808" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0908" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01008" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby9" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0609" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0709" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0809" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC0909" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01009" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby10" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC06010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC07010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC08010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC09010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkBaby11" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC06011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC07011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC08011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC09011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IC01111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember6" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0406" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0506" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060406" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060506" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070406" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070506" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070606" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070706" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070806" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070906" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701006" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0806" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0906" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01006" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember7" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0407" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0507" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060407" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060507" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070407" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070507" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070607" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070707" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070807" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070907" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701007" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0807" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0907" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01007" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember8" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0408" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0508" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060408" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060508" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070408" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070508" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070608" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070708" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070808" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070908" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701008" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0808" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0908" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01008" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember9" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0409" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0509" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060409" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060509" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070409" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070509" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070609" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070709" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070809" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070909" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701009" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0809" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0909" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01009" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember10" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0410" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0510" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060310" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060410" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060510" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070310" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070410" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070510" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070610" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070710" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070810" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070910" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701310" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0810" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0910" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01406" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01506" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01407" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01507" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01408" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01508" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01409" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01509" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01310" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01410" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01510" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160306" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160406" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160506" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160606" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160706" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160806" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160906" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601006" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601106" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601206" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160307" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160407" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160507" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160607" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160707" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160807" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160907" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601007" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601107" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601207" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160308" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160408" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160508" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160608" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160708" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160808" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160908" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601008" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601108" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601208" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160309" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160409" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160509" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160609" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160709" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160809" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160909" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601009" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601109" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601209" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160310" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160410" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160510" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160610" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160710" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160810" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160910" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601010" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601110" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601210" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember11" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0411" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0511" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060311" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060411" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060511" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember12" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0412" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0512" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060312" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060412" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060512" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember13" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0413" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0513" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060313" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060413" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060513" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember14" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0414" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0514" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060314" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060414" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060514" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "chkMember15" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0415" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0515" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060215" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060315" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060415" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG060515" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070311" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070411" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070511" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070611" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070711" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070811" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070911" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701311" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0811" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0911" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01311" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01411" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01511" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070312" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070412" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070512" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070612" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070712" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070812" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070912" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701012" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701312" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0812" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0912" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01012" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01312" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01412" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01512" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070313" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070413" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070513" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070613" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070713" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070813" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070913" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701013" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701313" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0813" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0913" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01013" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01313" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01413" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01513" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070314" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070414" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070514" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070614" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070714" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070814" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070914" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701014" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701314" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0814" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0914" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01014" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01314" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01414" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01514" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070215" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070315" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070415" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070515" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070615" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070715" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070815" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG070915" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701015" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701215" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0701315" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0815" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG0915" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01015" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01215" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01315" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01415" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG01515" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160311" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160411" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160511" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160611" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160711" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160811" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160911" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601011" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601111" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601211" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160312" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160412" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160512" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160612" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160712" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160812" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160912" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601012" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601112" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601212" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160313" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160413" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160513" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160613" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160713" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160813" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160913" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601013" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601113" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601213" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160314" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160414" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160514" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160614" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160714" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160814" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160914" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601014" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601114" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601214" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160215" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160315" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160415" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160515" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160615" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160715" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160815" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG160915" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601015" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601115" ||
        tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name == "IG1601215"

                                )
                            {

                            }
                            else
                            {
                                if (tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name != "RES_DROP")
                                {

                                    MessageBox.Show("Data cannot save because you have left blank few fields ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                    error_fldName = tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Name;


                                    IsError = true;

                                    tabControl1.SelectedIndex = Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString());
                                    tabControl1.TabPages[Convert.ToInt32(ds_new.Tables[0].Rows[b]["TabPageNo"].ToString())].Controls[ds_new.Tables[0].Rows[b]["var_id"].ToString()].Focus();

                                    IsError = false;

                                    return;

                                }


                            }

                        }


                    }


                }

            }

            error_fldName = "";

            //}
            //}

            if (error_fldName == "")
            {
                SaveData();
            }

            obj_op = null;
            ds_new = null;
        }


        private bool IsRecordExists()
        {

            bool isexists = false;

            DataSet ds = null;
            CDBOperations obj_op = null;

            try
            {
                ds = new DataSet();

                if (CVariables.IsUserFirstOrSecond == "User1")
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1bl where form_id='" + FORM_ID.Text + "'", "0", FORM_ID.Text);

                    if (ds != null)
                    {
                        if (ds.Tables.Count > 0)
                        {
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                isexists = true;
                            }
                        }
                    }
                }
                else if (CVariables.IsUserFirstOrSecond == "User2")
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1blx where form_id='" + FORM_ID.Text + "'", "1", FORM_ID.Text);


                    if (ds != null)
                    {
                        if (ds.Tables.Count > 0)
                        {
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                isexists = true;
                            }
                        }
                    }

                }

            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return isexists;
        }




        private void SaveData()
        {

            if (CVariables.IsUserFirstOrSecond == "User1")
            {
                if (IsRecordExists())
                {
                    AuditTrials("");
                    UpdateRecord("form1bl");
                }
                else
                {
                    InsertRecord("form1bl");
                }

            }
            else if (CVariables.IsUserFirstOrSecond == "User2")
            {
                if (IsRecordExists())
                {
                    AuditTrials("sp_AddAuditTrialsx");
                    UpdateRecord("form1blx");
                }
                else
                {
                    InsertRecord("form1blx");
                }
            }



            ClearFields();
            GetTotalForms();

            tabControl1.SelectedIndex = 0;
            FORM_ID.Focus();
        }

        private void Form1BL_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == '\r')
            {
                SendKeys.Send("{TAB}");
            }
        }

        private void Form1BL_Shown(object sender, EventArgs e)
        {
            FORM_ID.Focus();
        }

        private void FORM_ID_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            if (string.IsNullOrEmpty(FORM_ID.Text))
            {
                MessageBox.Show("Please enter form id ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                FORM_ID.Focus();
            }
            else
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'form_id'", FORM_ID.Text) == true)
                {
                    FORM_ID.Focus();
                }
                else
                {
                    ClearFields();
                    SearchRecord();
                }
            }

            obj_op = null;
        }


        private void Disabled_IG060101_Q47()
        {
            CDBOperations obj_op = new CDBOperations();


            obj_op.DisableControls(IG070101);
            obj_op.DisableControls(IG070201);
            obj_op.DisableControls(IG070301);
            obj_op.DisableControls(IG070401);
            obj_op.DisableControls(IG070501);
            obj_op.DisableControls(IG070601);
            obj_op.DisableControls(IG070701);
            obj_op.DisableControls(IG070801);
            obj_op.DisableControls(IG070901);
            obj_op.DisableControls(IG0701001);
            obj_op.DisableControls(IG0701101);
            obj_op.DisableControls(IG0701201);
            obj_op.DisableControls(IG0701301);
            obj_op.DisableControls(IG0801);
            obj_op.DisableControls(IG0901);
            obj_op.DisableControls(IG01001);
            obj_op.DisableControls(IG01101);
            obj_op.DisableControls(IG01201);
            obj_op.DisableControls(IG01301);
            obj_op.DisableControls(IG01401);
            obj_op.DisableControls(IG01501);
            obj_op.DisableControls(IG160101);
            obj_op.DisableControls(IG160201);
            obj_op.DisableControls(IG160301);
            obj_op.DisableControls(IG160401);
            obj_op.DisableControls(IG160501);
            obj_op.DisableControls(IG160601);
            obj_op.DisableControls(IG160701);
            obj_op.DisableControls(IG160801);
            obj_op.DisableControls(IG160901);
            obj_op.DisableControls(IG1601001);
            obj_op.DisableControls(IG1601101);
            obj_op.DisableControls(IG1601201);





            obj_op.DisableControls(IG070102);
            obj_op.DisableControls(IG070202);
            obj_op.DisableControls(IG070302);
            obj_op.DisableControls(IG070402);
            obj_op.DisableControls(IG070502);
            obj_op.DisableControls(IG070602);
            obj_op.DisableControls(IG070702);
            obj_op.DisableControls(IG070802);
            obj_op.DisableControls(IG070902);
            obj_op.DisableControls(IG0701002);
            obj_op.DisableControls(IG0701102);
            obj_op.DisableControls(IG0701202);
            obj_op.DisableControls(IG0701302);
            obj_op.DisableControls(IG0802);
            obj_op.DisableControls(IG0902);
            obj_op.DisableControls(IG01002);
            obj_op.DisableControls(IG01102);
            obj_op.DisableControls(IG01202);
            obj_op.DisableControls(IG01302);
            obj_op.DisableControls(IG01402);
            obj_op.DisableControls(IG01502);
            obj_op.DisableControls(IG160102);
            obj_op.DisableControls(IG160202);
            obj_op.DisableControls(IG160302);
            obj_op.DisableControls(IG160402);
            obj_op.DisableControls(IG160502);
            obj_op.DisableControls(IG160602);
            obj_op.DisableControls(IG160702);
            obj_op.DisableControls(IG160802);
            obj_op.DisableControls(IG160902);
            obj_op.DisableControls(IG1601002);
            obj_op.DisableControls(IG1601102);
            obj_op.DisableControls(IG1601202);





            obj_op.DisableControls(IG070103);
            obj_op.DisableControls(IG070203);
            obj_op.DisableControls(IG070303);
            obj_op.DisableControls(IG070403);
            obj_op.DisableControls(IG070503);
            obj_op.DisableControls(IG070603);
            obj_op.DisableControls(IG070703);
            obj_op.DisableControls(IG070803);
            obj_op.DisableControls(IG070903);
            obj_op.DisableControls(IG0701003);
            obj_op.DisableControls(IG0701103);
            obj_op.DisableControls(IG0701203);
            obj_op.DisableControls(IG0701303);
            obj_op.DisableControls(IG0803);
            obj_op.DisableControls(IG0903);
            obj_op.DisableControls(IG01003);
            obj_op.DisableControls(IG01103);
            obj_op.DisableControls(IG01203);
            obj_op.DisableControls(IG01303);
            obj_op.DisableControls(IG01403);
            obj_op.DisableControls(IG01503);
            obj_op.DisableControls(IG160103);
            obj_op.DisableControls(IG160203);
            obj_op.DisableControls(IG160303);
            obj_op.DisableControls(IG160403);
            obj_op.DisableControls(IG160503);
            obj_op.DisableControls(IG160603);
            obj_op.DisableControls(IG160703);
            obj_op.DisableControls(IG160803);
            obj_op.DisableControls(IG160903);
            obj_op.DisableControls(IG1601003);
            obj_op.DisableControls(IG1601103);
            obj_op.DisableControls(IG1601203);





            obj_op.DisableControls(IG070104);
            obj_op.DisableControls(IG070204);
            obj_op.DisableControls(IG070304);
            obj_op.DisableControls(IG070404);
            obj_op.DisableControls(IG070504);
            obj_op.DisableControls(IG070604);
            obj_op.DisableControls(IG070704);
            obj_op.DisableControls(IG070804);
            obj_op.DisableControls(IG070904);
            obj_op.DisableControls(IG0701004);
            obj_op.DisableControls(IG0701104);
            obj_op.DisableControls(IG0701204);
            obj_op.DisableControls(IG0701304);
            obj_op.DisableControls(IG0804);
            obj_op.DisableControls(IG0904);
            obj_op.DisableControls(IG01004);
            obj_op.DisableControls(IG01104);
            obj_op.DisableControls(IG01204);
            obj_op.DisableControls(IG01304);
            obj_op.DisableControls(IG01404);
            obj_op.DisableControls(IG01504);
            obj_op.DisableControls(IG160104);
            obj_op.DisableControls(IG160204);
            obj_op.DisableControls(IG160304);
            obj_op.DisableControls(IG160404);
            obj_op.DisableControls(IG160504);
            obj_op.DisableControls(IG160604);
            obj_op.DisableControls(IG160704);
            obj_op.DisableControls(IG160804);
            obj_op.DisableControls(IG160904);
            obj_op.DisableControls(IG1601004);
            obj_op.DisableControls(IG1601104);
            obj_op.DisableControls(IG1601204);





            obj_op.DisableControls(IG070105);
            obj_op.DisableControls(IG070205);
            obj_op.DisableControls(IG070305);
            obj_op.DisableControls(IG070405);
            obj_op.DisableControls(IG070505);
            obj_op.DisableControls(IG070605);
            obj_op.DisableControls(IG070705);
            obj_op.DisableControls(IG070805);
            obj_op.DisableControls(IG070905);
            obj_op.DisableControls(IG0701005);
            obj_op.DisableControls(IG0701105);
            obj_op.DisableControls(IG0701205);
            obj_op.DisableControls(IG0701305);
            obj_op.DisableControls(IG0805);
            obj_op.DisableControls(IG0905);
            obj_op.DisableControls(IG01005);
            obj_op.DisableControls(IG01105);
            obj_op.DisableControls(IG01205);
            obj_op.DisableControls(IG01305);
            obj_op.DisableControls(IG01405);
            obj_op.DisableControls(IG01505);
            obj_op.DisableControls(IG160105);
            obj_op.DisableControls(IG160205);
            obj_op.DisableControls(IG160305);
            obj_op.DisableControls(IG160405);
            obj_op.DisableControls(IG160505);
            obj_op.DisableControls(IG160605);
            obj_op.DisableControls(IG160705);
            obj_op.DisableControls(IG160805);
            obj_op.DisableControls(IG160905);
            obj_op.DisableControls(IG1601005);
            obj_op.DisableControls(IG1601105);
            obj_op.DisableControls(IG1601205);

            obj_op = null;
        }



        private void Enabled_IG060101_Q47()
        {
            CDBOperations obj_op = new CDBOperations();


            obj_op.EnableControls(IG070101);
            obj_op.EnableControls(IG070201);
            obj_op.EnableControls(IG070301);
            obj_op.EnableControls(IG070401);
            obj_op.EnableControls(IG070501);
            obj_op.EnableControls(IG070601);
            obj_op.EnableControls(IG070701);
            obj_op.EnableControls(IG070801);
            obj_op.EnableControls(IG070901);
            obj_op.EnableControls(IG0701001);
            obj_op.EnableControls(IG0701101);
            obj_op.EnableControls(IG0701201);
            obj_op.EnableControls(IG0701301);
            obj_op.EnableControls(IG0801);
            obj_op.EnableControls(IG0901);
            obj_op.EnableControls(IG01001);
            obj_op.EnableControls(IG01101);
            obj_op.EnableControls(IG01201);
            obj_op.EnableControls(IG01301);
            obj_op.EnableControls(IG01401);
            obj_op.EnableControls(IG01501);
            obj_op.EnableControls(IG160101);
            obj_op.EnableControls(IG160201);
            obj_op.EnableControls(IG160301);
            obj_op.EnableControls(IG160401);
            obj_op.EnableControls(IG160501);
            obj_op.EnableControls(IG160601);
            obj_op.EnableControls(IG160701);
            obj_op.EnableControls(IG160801);
            obj_op.EnableControls(IG160901);
            obj_op.EnableControls(IG1601001);
            obj_op.EnableControls(IG1601101);
            obj_op.EnableControls(IG1601201);





            obj_op.EnableControls(IG070102);
            obj_op.EnableControls(IG070202);
            obj_op.EnableControls(IG070302);
            obj_op.EnableControls(IG070402);
            obj_op.EnableControls(IG070502);
            obj_op.EnableControls(IG070602);
            obj_op.EnableControls(IG070702);
            obj_op.EnableControls(IG070802);
            obj_op.EnableControls(IG070902);
            obj_op.EnableControls(IG0701002);
            obj_op.EnableControls(IG0701102);
            obj_op.EnableControls(IG0701202);
            obj_op.EnableControls(IG0701302);
            obj_op.EnableControls(IG0802);
            obj_op.EnableControls(IG0902);
            obj_op.EnableControls(IG01002);
            obj_op.EnableControls(IG01102);
            obj_op.EnableControls(IG01202);
            obj_op.EnableControls(IG01302);
            obj_op.EnableControls(IG01402);
            obj_op.EnableControls(IG01502);
            obj_op.EnableControls(IG160102);
            obj_op.EnableControls(IG160202);
            obj_op.EnableControls(IG160302);
            obj_op.EnableControls(IG160402);
            obj_op.EnableControls(IG160502);
            obj_op.EnableControls(IG160602);
            obj_op.EnableControls(IG160702);
            obj_op.EnableControls(IG160802);
            obj_op.EnableControls(IG160902);
            obj_op.EnableControls(IG1601002);
            obj_op.EnableControls(IG1601102);
            obj_op.EnableControls(IG1601202);





            obj_op.EnableControls(IG070103);
            obj_op.EnableControls(IG070203);
            obj_op.EnableControls(IG070303);
            obj_op.EnableControls(IG070403);
            obj_op.EnableControls(IG070503);
            obj_op.EnableControls(IG070603);
            obj_op.EnableControls(IG070703);
            obj_op.EnableControls(IG070803);
            obj_op.EnableControls(IG070903);
            obj_op.EnableControls(IG0701003);
            obj_op.EnableControls(IG0701103);
            obj_op.EnableControls(IG0701203);
            obj_op.EnableControls(IG0701303);
            obj_op.EnableControls(IG0803);
            obj_op.EnableControls(IG0903);
            obj_op.EnableControls(IG01003);
            obj_op.EnableControls(IG01103);
            obj_op.EnableControls(IG01203);
            obj_op.EnableControls(IG01303);
            obj_op.EnableControls(IG01403);
            obj_op.EnableControls(IG01503);
            obj_op.EnableControls(IG160103);
            obj_op.EnableControls(IG160203);
            obj_op.EnableControls(IG160303);
            obj_op.EnableControls(IG160403);
            obj_op.EnableControls(IG160503);
            obj_op.EnableControls(IG160603);
            obj_op.EnableControls(IG160703);
            obj_op.EnableControls(IG160803);
            obj_op.EnableControls(IG160903);
            obj_op.EnableControls(IG1601003);
            obj_op.EnableControls(IG1601103);
            obj_op.EnableControls(IG1601203);





            obj_op.EnableControls(IG070104);
            obj_op.EnableControls(IG070204);
            obj_op.EnableControls(IG070304);
            obj_op.EnableControls(IG070404);
            obj_op.EnableControls(IG070504);
            obj_op.EnableControls(IG070604);
            obj_op.EnableControls(IG070704);
            obj_op.EnableControls(IG070804);
            obj_op.EnableControls(IG070904);
            obj_op.EnableControls(IG0701004);
            obj_op.EnableControls(IG0701104);
            obj_op.EnableControls(IG0701204);
            obj_op.EnableControls(IG0701304);
            obj_op.EnableControls(IG0804);
            obj_op.EnableControls(IG0904);
            obj_op.EnableControls(IG01004);
            obj_op.EnableControls(IG01104);
            obj_op.EnableControls(IG01204);
            obj_op.EnableControls(IG01304);
            obj_op.EnableControls(IG01404);
            obj_op.EnableControls(IG01504);
            obj_op.EnableControls(IG160104);
            obj_op.EnableControls(IG160204);
            obj_op.EnableControls(IG160304);
            obj_op.EnableControls(IG160404);
            obj_op.EnableControls(IG160504);
            obj_op.EnableControls(IG160604);
            obj_op.EnableControls(IG160704);
            obj_op.EnableControls(IG160804);
            obj_op.EnableControls(IG160904);
            obj_op.EnableControls(IG1601004);
            obj_op.EnableControls(IG1601104);
            obj_op.EnableControls(IG1601204);





            obj_op.EnableControls(IG070105);
            obj_op.EnableControls(IG070205);
            obj_op.EnableControls(IG070305);
            obj_op.EnableControls(IG070405);
            obj_op.EnableControls(IG070505);
            obj_op.EnableControls(IG070605);
            obj_op.EnableControls(IG070705);
            obj_op.EnableControls(IG070805);
            obj_op.EnableControls(IG070905);
            obj_op.EnableControls(IG0701005);
            obj_op.EnableControls(IG0701105);
            obj_op.EnableControls(IG0701205);
            obj_op.EnableControls(IG0701305);
            obj_op.EnableControls(IG0805);
            obj_op.EnableControls(IG0905);
            obj_op.EnableControls(IG01005);
            obj_op.EnableControls(IG01105);
            obj_op.EnableControls(IG01205);
            obj_op.EnableControls(IG01305);
            obj_op.EnableControls(IG01405);
            obj_op.EnableControls(IG01505);
            obj_op.EnableControls(IG160105);
            obj_op.EnableControls(IG160205);
            obj_op.EnableControls(IG160305);
            obj_op.EnableControls(IG160405);
            obj_op.EnableControls(IG160505);
            obj_op.EnableControls(IG160605);
            obj_op.EnableControls(IG160705);
            obj_op.EnableControls(IG160805);
            obj_op.EnableControls(IG160905);
            obj_op.EnableControls(IG1601005);
            obj_op.EnableControls(IG1601105);
            obj_op.EnableControls(IG1601205);

            obj_op = null;
        }

        private void tabPage0_Click(object sender, EventArgs e)
        {

        }

        private void IB010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IB010.Text))
                {
                    MessageBox.Show("Please enter head of household name ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB010.Focus();
                }
                else
                {
                    if (IB05.Text == "1")
                    {
                        IB07.Focus();
                    }
                    else
                    {
                        tabControl1.SelectedIndex = 9;
                        QCFUP02.Focus();
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB010.BackColor = Color.Bisque;
        }



        private void tabPage3_Click(object sender, EventArgs e)
        {

        }

        private void IB08_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB08'", IB08.Text) == true)
                {
                    IB08.Focus();
                }
                else
                {
                    if (IB08.Text == "1")
                    {
                        obj_op.DisableControls(IB0901);
                        obj_op.DisableControls(IB0902);
                        obj_op.DisableControls(IB0903);
                        obj_op.DisableControls(IB0996);

                        IB011.Focus();
                    }
                    else if (IB08.Text == "2")
                    {
                        obj_op.EnableControls(IB0901);
                        obj_op.EnableControls(IB0902);
                        obj_op.EnableControls(IB0903);
                        obj_op.EnableControls(IB0996);

                        IB0901.Focus();
                    }
                    else if (IB08.Text == "4")
                    {
                        obj_op.DisableControls(IB0901);
                        obj_op.DisableControls(IB0902);
                        obj_op.DisableControls(IB0903);
                        obj_op.DisableControls(IB0996);

                        tabControl1.SelectedIndex = 1;
                        IC01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IB0901);
                        obj_op.EnableControls(IB0902);
                        obj_op.EnableControls(IB0903);
                        obj_op.EnableControls(IB0996);

                        IB0901.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB08.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB08);
        }

        private void IB0901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB0901'", IB0901.Text) == true)
                {
                    IB0901.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB0901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB0901);
        }

        private void IB0902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB0902'", IB0902.Text) == true)
                {
                    IB0902.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB0902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB0902);
        }

        private void IB0903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IB0903'", IB0903.Text) == true)
                {
                    IB0903.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB0903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB0903);
        }

        private void IB0996_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {

                if (IB011.Enabled == true)
                {
                    IB011.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 1;
                    IC01.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB0996.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IB0996);
        }

        private void IB011_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (string.IsNullOrEmpty(IB011.Text))
                {
                    MessageBox.Show("Please enter respondent phone number ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB011.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 1;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IB011.BackColor = Color.Bisque;
        }

        private void IC01101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IC01101'", IC01101.Text) == true)
                {
                    IC01101.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IC01101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IC01101);
        }

        private void IE04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE04'", IE04.Text) == true)
                {
                    IE04.Focus();
                }
                else
                {
                    if (!string.IsNullOrEmpty(IE01.Text) && !string.IsNullOrEmpty(IE02.Text) && !string.IsNullOrEmpty(IE03.Text))
                    {
                        if (Convert.ToInt32(IE01.Text) < Convert.ToInt32(IE02.Text) + Convert.ToInt32(IE03.Text) + Convert.ToInt32(IE04.Text))
                        {
                            MessageBox.Show("QNo.32 cannot be less than sum of QNo.33, QNo.34, QNo.35 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            tabControl1.SelectedIndex = 3;
                            IE01.Focus();
                        }
                        else
                        {
                            if (Convert.ToInt32(IE04.Text) > Convert.ToInt32(IE02.Text))
                            {
                                MessageBox.Show("QNo.34 cannot be greater than Q35 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                IE04.Focus();
                            }
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE04);
        }

        private void chkHHMem1_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkHHMem1'", chkHHMem1.Text) == true)
                {
                    chkHHMem1.Focus();
                }
                else
                {
                    if (chkHHMem1.Text == "1")
                    {
                        obj_op.EnableControls(IE0701);
                        obj_op.EnableControls(IE0801);
                        obj_op.EnableControls(IE0901);

                        IE0701.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IE0701);
                        obj_op.DisableControls(IE0801);
                        obj_op.DisableControls(IE0901);

                        obj_op.DisableControls(IE0702);
                        obj_op.DisableControls(IE0802);
                        obj_op.DisableControls(IE0902);

                        obj_op.DisableControls(IE0703);
                        obj_op.DisableControls(IE0803);
                        obj_op.DisableControls(IE0903);

                        obj_op.DisableControls(IE0704);
                        obj_op.DisableControls(IE0804);
                        obj_op.DisableControls(IE0904);

                        chkHHMem2.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkHHMem1.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkHHMem1);
        }

        private void chkHHMem2_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkHHMem2'", chkHHMem2.Text) == true)
                {
                    chkHHMem2.Focus();
                }
                else
                {

                    if (chkHHMem1.Text == "2" && chkHHMem2.Text == "1")
                    {
                        MessageBox.Show("You have to add 1st memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkHHMem2.Focus();
                        return;
                    }



                    if (chkHHMem2.Text == "1")
                    {
                        obj_op.EnableControls(IE0702);
                        obj_op.EnableControls(IE0802);
                        obj_op.EnableControls(IE0902);

                        IE0702.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IE0702);
                        obj_op.DisableControls(IE0802);
                        obj_op.DisableControls(IE0902);

                        obj_op.DisableControls(IE0703);
                        obj_op.DisableControls(IE0803);
                        obj_op.DisableControls(IE0903);

                        obj_op.DisableControls(IE0704);
                        obj_op.DisableControls(IE0804);
                        obj_op.DisableControls(IE0904);


                        chkHHMem3.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkHHMem2.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkHHMem2);
        }

        private void chkHHMem3_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkHHMem3'", chkHHMem3.Text) == true)
                {
                    chkHHMem3.Focus();
                }
                else
                {


                    if (chkHHMem2.Text == "2" && chkHHMem3.Text == "1")
                    {
                        MessageBox.Show("You have to add 2nd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkHHMem3.Focus();
                        return;
                    }



                    if (chkHHMem3.Text == "1")
                    {
                        obj_op.EnableControls(IE0703);
                        obj_op.EnableControls(IE0803);
                        obj_op.EnableControls(IE0903);

                        IE0703.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IE0703);
                        obj_op.DisableControls(IE0803);
                        obj_op.DisableControls(IE0903);

                        obj_op.DisableControls(IE0704);
                        obj_op.DisableControls(IE0804);
                        obj_op.DisableControls(IE0904);

                        chkHHMem4.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkHHMem3.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkHHMem3);
        }

        private void chkHHMem4_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkHHMem4'", chkHHMem4.Text) == true)
                {
                    chkHHMem4.Focus();
                }
                else
                {

                    if (chkHHMem3.Text == "2" && chkHHMem4.Text == "1")
                    {
                        MessageBox.Show("You have to add 3rd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkHHMem4.Focus();
                        return;
                    }


                    if (chkHHMem4.Text == "1")
                    {
                        obj_op.EnableControls(IE0704);
                        obj_op.EnableControls(IE0804);
                        obj_op.EnableControls(IE0904);

                        IE0704.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IE0704);
                        obj_op.DisableControls(IE0804);
                        obj_op.DisableControls(IE0904);


                        if (IE0702.Enabled == true)
                        {
                            IE0702.Focus();
                        }
                        else if (IE0703.Enabled == true)
                        {
                            IE0703.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 5;
                            IF01.Focus();
                        }

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkHHMem4.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkHHMem4);
        }

        private void IF01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF01'", IF01.Text) == true)
                {
                    IF01.Focus();
                }
                else
                {

                    if (!string.IsNullOrEmpty(IF02.Text) && !string.IsNullOrEmpty(IF03.Text) && !string.IsNullOrEmpty(IF04.Text))
                    {
                        if (Convert.ToInt32(IF01.Text) < Convert.ToInt32(IF02.Text) + Convert.ToInt32(IF03.Text) + Convert.ToInt32(IF04.Text))
                        {
                            MessageBox.Show("QNo.39 cannot be less than sum of QNo.40, QNo.41, QNo.42 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IF01.Focus();
                            return;
                        }
                    }


                    if (IF01.Text == "0")
                    {
                        obj_op.DisableControls(IF02);
                        obj_op.DisableControls(IF03);
                        obj_op.DisableControls(IF04);
                        obj_op.DisableControls(chkPW1);
                        obj_op.DisableControls(chkPW2);
                        obj_op.DisableControls(chkPW3);
                        obj_op.DisableControls(chkPW4);
                        obj_op.DisableControls(IF0601);
                        obj_op.DisableControls(IF0602);
                        obj_op.DisableControls(IF0603);
                        obj_op.DisableControls(IF0604);

                        tabControl1.SelectedIndex = 6;

                        IG01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IF02);
                        obj_op.EnableControls(IF03);
                        obj_op.EnableControls(IF04);
                        obj_op.EnableControls(chkPW1);
                        obj_op.EnableControls(chkPW2);
                        obj_op.EnableControls(chkPW3);
                        obj_op.EnableControls(chkPW4);
                        obj_op.EnableControls(IF0601);
                        obj_op.EnableControls(IF0602);
                        obj_op.EnableControls(IF0603);
                        obj_op.EnableControls(IF0604);

                        IF02.Focus();
                    }
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF01);
        }

        private void IF02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF02'", IF02.Text) == true)
                {
                    IF02.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF02);
        }

        private void IF03_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF03'", IF03.Text) == true)
                {
                    IF03.Focus();
                }
                else
                {
                    if (IF03.Text == "0")
                    {
                        obj_op.DisableControls(IF04);
                        obj_op.DisableControls(chkPW1);
                        obj_op.DisableControls(chkPW2);
                        obj_op.DisableControls(chkPW3);
                        obj_op.DisableControls(chkPW4);
                        obj_op.DisableControls(IF0601);
                        obj_op.DisableControls(IF0602);
                        obj_op.DisableControls(IF0603);
                        obj_op.DisableControls(IF0604);

                        tabControl1.SelectedIndex = 6;

                        IG01.Focus();
                    }
                    else
                    {
                        obj_op.EnableControls(IF04);
                        obj_op.EnableControls(chkPW1);
                        obj_op.EnableControls(chkPW2);
                        obj_op.EnableControls(chkPW3);
                        obj_op.EnableControls(chkPW4);
                        obj_op.EnableControls(IF0601);
                        obj_op.EnableControls(IF0602);
                        obj_op.EnableControls(IF0603);
                        obj_op.EnableControls(IF0604);

                        IF04.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF03.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF03);
        }

        private void IF04_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF04'", IF04.Text) == true)
                {
                    IF04.Focus();
                }
                else
                {
                    if (!string.IsNullOrEmpty(IF01.Text) && !string.IsNullOrEmpty(IF02.Text) && !string.IsNullOrEmpty(IF03.Text))
                    {
                        if (Convert.ToInt32(IF01.Text) < Convert.ToInt32(IF02.Text) + Convert.ToInt32(IF03.Text) + Convert.ToInt32(IF04.Text))
                        {
                            MessageBox.Show("QNo.39 cannot be less than sum of QNo.40, QNo.41, QNo.42 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IF04.Focus();
                        }
                        else
                        {
                            if (Convert.ToInt32(IF04.Text) > Convert.ToInt32(IF03.Text))
                            {
                                MessageBox.Show("QNo.42 cannot be greater than Q41 ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                                IF04.Focus();
                            }
                        }
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF04.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF04);
        }

        private void tabPage13_Click(object sender, EventArgs e)
        {

        }

        private void IE0701_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0701'", IE0701.Text) == true)
                {
                    IE0701.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0701.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0701);
        }

        private void IE0702_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0702'", IE0702.Text) == true)
                {
                    IE0702.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0702.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0702);
        }

        private void IE0703_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0703'", IE0703.Text) == true)
                {
                    IE0703.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0703.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0703);
        }

        private void IE0704_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IE0704'", IE0704.Text) == true)
                {
                    IE0704.Focus();
                }
                else
                {

                    if (IE0804.Enabled == true)
                    {
                        IE0804.Focus();
                    }
                    else if (IE0904.Enabled == true)
                    {
                        IE0904.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IE0704.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IE0704);
        }

        private void IE0701_Enter(object sender, EventArgs e)
        {
            IE0701.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0701);
            IE0701.SelectAll();
        }

        private void IE0702_Enter(object sender, EventArgs e)
        {
            IE0702.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0702);
            IE0702.SelectAll();
        }

        private void IE0703_Enter(object sender, EventArgs e)
        {
            IE0703.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0703);
            IE0703.SelectAll();
        }

        private void IE0704_Enter(object sender, EventArgs e)
        {
            IE0704.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE0704);
            IE0704.SelectAll();
        }

        private void IE04_Enter(object sender, EventArgs e)
        {
            IE04.BackColor = Color.Aqua;
            ChangeColorLabel(1, lbl_IE04);
            IE04.SelectAll();
        }

        private void IB011_Enter(object sender, EventArgs e)
        {
            IB011.BackColor = Color.Aqua;
            IB011.SelectAll();
        }

        private void chkPW1_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkPW1'", chkPW1.Text) == true)
                {
                    chkPW1.Focus();
                }
                else
                {
                    if (chkPW1.Text == "1")
                    {
                        obj_op.EnableControls(IF0601);
                        IF0601.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IF0601);
                        obj_op.DisableControls(IF0602);
                        obj_op.DisableControls(IF0603);
                        obj_op.DisableControls(IF0604);

                        chkPW2.Focus();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkPW1.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkPW1);
        }

        private void chkPW2_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkPW2'", chkPW2.Text) == true)
                {
                    chkPW2.Focus();
                }
                else
                {

                    if (chkPW1.Text == "2" && chkPW2.Text == "1")
                    {
                        MessageBox.Show("You have to add 1st memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkPW2.Focus();
                        return;
                    }



                    if (chkPW2.Text == "1")
                    {
                        obj_op.EnableControls(IF0602);
                        IF0602.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IF0602);
                        obj_op.DisableControls(IF0603);
                        obj_op.DisableControls(IF0604);

                        chkPW3.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkPW2.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkPW2);
        }

        private void chkPW3_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkPW3'", chkPW3.Text) == true)
                {
                    chkPW3.Focus();
                }
                else
                {

                    if (chkPW2.Text == "2" && chkPW3.Text == "1")
                    {
                        MessageBox.Show("You have to add 2nd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkPW3.Focus();
                        return;
                    }



                    if (chkPW3.Text == "1")
                    {
                        obj_op.EnableControls(IF0603);
                        IF0603.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IF0603);
                        obj_op.DisableControls(IF0604);

                        chkPW4.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkPW3.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkPW3);
        }

        private void chkPW4_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkPW4'", chkPW4.Text) == true)
                {
                    chkPW4.Focus();
                }
                else
                {

                    if (chkPW3.Text == "2" && chkPW4.Text == "1")
                    {
                        MessageBox.Show("You have to add 3rd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkPW4.Focus();
                        return;
                    }



                    if (chkPW4.Text == "1")
                    {
                        obj_op.EnableControls(IF0604);
                        IF0604.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IF0604);

                        tabControl1.SelectedIndex = 6;
                        IG01.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkPW4.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkPW4);
        }

        private void IF0601_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF0601'", IF0601.Text) == true)
                {
                    IF0601.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF0601.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF0601);
        }

        private void IF0602_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF0602'", IF0602.Text) == true)
                {
                    IF0602.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF0602.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF0602);
        }

        private void IF0603_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF0603'", IF0603.Text) == true)
                {
                    IF0603.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF0603.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF0603);
        }




        private void IF0604_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IF0604'", IF0604.Text) == true)
                {
                    IF0604.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 6;
                    IG01.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IF0604.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IF0604);
        }

        private void IG01_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG01'", IG01.Text) == true)
                {
                    IG01.Focus();
                }
                else
                {
                    if (IG01.Text == "0")
                    {
                        obj_op.DisableControls(IG02);
                        obj_op.DisableControls(IG0301);
                        obj_op.DisableControls(IG0302);
                        obj_op.DisableControls(IG0303);
                        obj_op.DisableControls(IG0304);
                        obj_op.DisableControls(IG0305);
                        obj_op.DisableControls(IG0306);
                        obj_op.DisableControls(IG0307);
                        obj_op.DisableControls(IG0308);
                        obj_op.DisableControls(IG0309);
                        obj_op.DisableControls(IG03010);

                        obj_op.DisableControls(chkMember1);
                        obj_op.DisableControls(chkMember2);
                        obj_op.DisableControls(chkMember3);
                        obj_op.DisableControls(chkMember4);
                        obj_op.DisableControls(chkMember5);

                        obj_op.DisableControls(IG0401);
                        obj_op.DisableControls(IG0501);
                        obj_op.DisableControls(IG060101);
                        obj_op.DisableControls(IG060201);
                        obj_op.DisableControls(IG060301);
                        obj_op.DisableControls(IG060401);
                        obj_op.DisableControls(IG060501);

                        obj_op.DisableControls(IG070101);
                        obj_op.DisableControls(IG070201);
                        obj_op.DisableControls(IG070301);
                        obj_op.DisableControls(IG070401);
                        obj_op.DisableControls(IG070501);
                        obj_op.DisableControls(IG070601);
                        obj_op.DisableControls(IG070701);
                        obj_op.DisableControls(IG070801);
                        obj_op.DisableControls(IG070901);
                        obj_op.DisableControls(IG0701001);
                        obj_op.DisableControls(IG0701101);
                        obj_op.DisableControls(IG0701201);
                        obj_op.DisableControls(IG0701301);
                        obj_op.DisableControls(IG0801);
                        obj_op.DisableControls(IG0901);
                        obj_op.DisableControls(IG01001);
                        obj_op.DisableControls(IG01101);
                        obj_op.DisableControls(IG01201);
                        obj_op.DisableControls(IG01301);
                        obj_op.DisableControls(IG01401);
                        obj_op.DisableControls(IG01501);
                        obj_op.DisableControls(IG160101);
                        obj_op.DisableControls(IG160201);
                        obj_op.DisableControls(IG160301);
                        obj_op.DisableControls(IG160401);
                        obj_op.DisableControls(IG160501);
                        obj_op.DisableControls(IG160601);
                        obj_op.DisableControls(IG160701);
                        obj_op.DisableControls(IG160801);
                        obj_op.DisableControls(IG160901);
                        obj_op.DisableControls(IG1601001);
                        obj_op.DisableControls(IG1601101);
                        obj_op.DisableControls(IG1601201);



                        obj_op.DisableControls(IG0402);
                        obj_op.DisableControls(IG0502);
                        obj_op.DisableControls(IG060102);
                        obj_op.DisableControls(IG060202);
                        obj_op.DisableControls(IG060302);
                        obj_op.DisableControls(IG060402);
                        obj_op.DisableControls(IG060502);

                        obj_op.DisableControls(IG070102);
                        obj_op.DisableControls(IG070202);
                        obj_op.DisableControls(IG070302);
                        obj_op.DisableControls(IG070402);
                        obj_op.DisableControls(IG070502);
                        obj_op.DisableControls(IG070602);
                        obj_op.DisableControls(IG070702);
                        obj_op.DisableControls(IG070802);
                        obj_op.DisableControls(IG070902);
                        obj_op.DisableControls(IG0701002);
                        obj_op.DisableControls(IG0701102);
                        obj_op.DisableControls(IG0701202);
                        obj_op.DisableControls(IG0701302);
                        obj_op.DisableControls(IG0802);
                        obj_op.DisableControls(IG0902);
                        obj_op.DisableControls(IG01002);
                        obj_op.DisableControls(IG01102);
                        obj_op.DisableControls(IG01202);
                        obj_op.DisableControls(IG01302);
                        obj_op.DisableControls(IG01402);
                        obj_op.DisableControls(IG01502);
                        obj_op.DisableControls(IG160102);
                        obj_op.DisableControls(IG160202);
                        obj_op.DisableControls(IG160302);
                        obj_op.DisableControls(IG160402);
                        obj_op.DisableControls(IG160502);
                        obj_op.DisableControls(IG160602);
                        obj_op.DisableControls(IG160702);
                        obj_op.DisableControls(IG160802);
                        obj_op.DisableControls(IG160902);
                        obj_op.DisableControls(IG1601002);
                        obj_op.DisableControls(IG1601102);
                        obj_op.DisableControls(IG1601202);


                        obj_op.DisableControls(IG0403);
                        obj_op.DisableControls(IG0503);
                        obj_op.DisableControls(IG060103);
                        obj_op.DisableControls(IG060203);
                        obj_op.DisableControls(IG060303);
                        obj_op.DisableControls(IG060403);
                        obj_op.DisableControls(IG060503);

                        obj_op.DisableControls(IG070103);
                        obj_op.DisableControls(IG070203);
                        obj_op.DisableControls(IG070303);
                        obj_op.DisableControls(IG070403);
                        obj_op.DisableControls(IG070503);
                        obj_op.DisableControls(IG070603);
                        obj_op.DisableControls(IG070703);
                        obj_op.DisableControls(IG070803);
                        obj_op.DisableControls(IG070903);
                        obj_op.DisableControls(IG0701003);
                        obj_op.DisableControls(IG0701103);
                        obj_op.DisableControls(IG0701203);
                        obj_op.DisableControls(IG0701303);
                        obj_op.DisableControls(IG0803);
                        obj_op.DisableControls(IG0903);
                        obj_op.DisableControls(IG01003);
                        obj_op.DisableControls(IG01103);
                        obj_op.DisableControls(IG01203);
                        obj_op.DisableControls(IG01303);
                        obj_op.DisableControls(IG01403);
                        obj_op.DisableControls(IG01503);
                        obj_op.DisableControls(IG160103);
                        obj_op.DisableControls(IG160203);
                        obj_op.DisableControls(IG160303);
                        obj_op.DisableControls(IG160403);
                        obj_op.DisableControls(IG160503);
                        obj_op.DisableControls(IG160603);
                        obj_op.DisableControls(IG160703);
                        obj_op.DisableControls(IG160803);
                        obj_op.DisableControls(IG160903);
                        obj_op.DisableControls(IG1601003);
                        obj_op.DisableControls(IG1601103);
                        obj_op.DisableControls(IG1601203);



                        obj_op.DisableControls(IG0404);
                        obj_op.DisableControls(IG0504);
                        obj_op.DisableControls(IG060104);
                        obj_op.DisableControls(IG060204);
                        obj_op.DisableControls(IG060304);
                        obj_op.DisableControls(IG060404);
                        obj_op.DisableControls(IG060504);

                        obj_op.DisableControls(IG070104);
                        obj_op.DisableControls(IG070204);
                        obj_op.DisableControls(IG070304);
                        obj_op.DisableControls(IG070404);
                        obj_op.DisableControls(IG070504);
                        obj_op.DisableControls(IG070604);
                        obj_op.DisableControls(IG070704);
                        obj_op.DisableControls(IG070804);
                        obj_op.DisableControls(IG070904);
                        obj_op.DisableControls(IG0701004);
                        obj_op.DisableControls(IG0701104);
                        obj_op.DisableControls(IG0701204);
                        obj_op.DisableControls(IG0701304);
                        obj_op.DisableControls(IG0804);
                        obj_op.DisableControls(IG0904);
                        obj_op.DisableControls(IG01004);
                        obj_op.DisableControls(IG01104);
                        obj_op.DisableControls(IG01204);
                        obj_op.DisableControls(IG01304);
                        obj_op.DisableControls(IG01404);
                        obj_op.DisableControls(IG01504);
                        obj_op.DisableControls(IG160104);
                        obj_op.DisableControls(IG160204);
                        obj_op.DisableControls(IG160304);
                        obj_op.DisableControls(IG160404);
                        obj_op.DisableControls(IG160504);
                        obj_op.DisableControls(IG160604);
                        obj_op.DisableControls(IG160704);
                        obj_op.DisableControls(IG160804);
                        obj_op.DisableControls(IG160904);
                        obj_op.DisableControls(IG1601004);
                        obj_op.DisableControls(IG1601104);
                        obj_op.DisableControls(IG1601204);



                        obj_op.DisableControls(IG0405);
                        obj_op.DisableControls(IG0505);
                        obj_op.DisableControls(IG060105);
                        obj_op.DisableControls(IG060205);
                        obj_op.DisableControls(IG060305);
                        obj_op.DisableControls(IG060405);
                        obj_op.DisableControls(IG060505);

                        obj_op.DisableControls(IG070105);
                        obj_op.DisableControls(IG070205);
                        obj_op.DisableControls(IG070305);
                        obj_op.DisableControls(IG070405);
                        obj_op.DisableControls(IG070505);
                        obj_op.DisableControls(IG070605);
                        obj_op.DisableControls(IG070705);
                        obj_op.DisableControls(IG070805);
                        obj_op.DisableControls(IG070905);
                        obj_op.DisableControls(IG0701005);
                        obj_op.DisableControls(IG0701105);
                        obj_op.DisableControls(IG0701205);
                        obj_op.DisableControls(IG0701305);
                        obj_op.DisableControls(IG0805);
                        obj_op.DisableControls(IG0905);
                        obj_op.DisableControls(IG01005);
                        obj_op.DisableControls(IG01105);
                        obj_op.DisableControls(IG01205);
                        obj_op.DisableControls(IG01305);
                        obj_op.DisableControls(IG01405);
                        obj_op.DisableControls(IG01505);
                        obj_op.DisableControls(IG160105);
                        obj_op.DisableControls(IG160205);
                        obj_op.DisableControls(IG160305);
                        obj_op.DisableControls(IG160405);
                        obj_op.DisableControls(IG160505);
                        obj_op.DisableControls(IG160605);
                        obj_op.DisableControls(IG160705);
                        obj_op.DisableControls(IG160805);
                        obj_op.DisableControls(IG160905);
                        obj_op.DisableControls(IG1601005);
                        obj_op.DisableControls(IG1601105);
                        obj_op.DisableControls(IG1601205);

                        tabControl1.SelectedIndex = 9;
                        QCFUP02.Focus();

                    }
                    else
                    {

                        obj_op.EnableControls(IG02);
                        obj_op.EnableControls(IG0301);
                        obj_op.EnableControls(IG0302);
                        obj_op.EnableControls(IG0303);
                        obj_op.EnableControls(IG0304);
                        obj_op.EnableControls(IG0305);
                        obj_op.EnableControls(IG0306);
                        obj_op.EnableControls(IG0307);
                        obj_op.EnableControls(IG0308);
                        obj_op.EnableControls(IG0309);
                        obj_op.EnableControls(IG03010);

                        obj_op.EnableControls(chkMember1);
                        obj_op.EnableControls(chkMember2);
                        obj_op.EnableControls(chkMember3);
                        obj_op.EnableControls(chkMember4);
                        obj_op.EnableControls(chkMember5);

                        if (chkMember1.Text == "1")
                        {

                            obj_op.EnableControls(IG0401);
                            obj_op.EnableControls(IG0501);
                            obj_op.EnableControls(IG060101);
                            obj_op.EnableControls(IG060201);
                            obj_op.EnableControls(IG060301);
                            obj_op.EnableControls(IG060401);
                            obj_op.EnableControls(IG060501);

                            obj_op.EnableControls(IG070101);
                            obj_op.EnableControls(IG070201);
                            obj_op.EnableControls(IG070301);
                            obj_op.EnableControls(IG070401);
                            obj_op.EnableControls(IG070501);
                            obj_op.EnableControls(IG070601);
                            obj_op.EnableControls(IG070701);
                            obj_op.EnableControls(IG070801);
                            obj_op.EnableControls(IG070901);
                            obj_op.EnableControls(IG0701001);
                            obj_op.EnableControls(IG0701101);
                            obj_op.EnableControls(IG0701201);
                            obj_op.EnableControls(IG0701301);
                            obj_op.EnableControls(IG0801);
                            obj_op.EnableControls(IG0901);
                            obj_op.EnableControls(IG01001);
                            obj_op.EnableControls(IG01101);
                            obj_op.EnableControls(IG01201);
                            obj_op.EnableControls(IG01301);
                            obj_op.EnableControls(IG01401);
                            obj_op.EnableControls(IG01501);
                            obj_op.EnableControls(IG160101);
                            obj_op.EnableControls(IG160201);
                            obj_op.EnableControls(IG160301);
                            obj_op.EnableControls(IG160401);
                            obj_op.EnableControls(IG160501);
                            obj_op.EnableControls(IG160601);
                            obj_op.EnableControls(IG160701);
                            obj_op.EnableControls(IG160801);
                            obj_op.EnableControls(IG160901);
                            obj_op.EnableControls(IG1601001);
                            obj_op.EnableControls(IG1601101);
                            obj_op.EnableControls(IG1601201);
                        }


                        if (chkMember1.Text == "1")
                        {

                            obj_op.EnableControls(IG0402);
                            obj_op.EnableControls(IG0502);
                            obj_op.EnableControls(IG060102);
                            obj_op.EnableControls(IG060202);
                            obj_op.EnableControls(IG060302);
                            obj_op.EnableControls(IG060402);
                            obj_op.EnableControls(IG060502);

                            obj_op.EnableControls(IG070102);
                            obj_op.EnableControls(IG070202);
                            obj_op.EnableControls(IG070302);
                            obj_op.EnableControls(IG070402);
                            obj_op.EnableControls(IG070502);
                            obj_op.EnableControls(IG070602);
                            obj_op.EnableControls(IG070702);
                            obj_op.EnableControls(IG070802);
                            obj_op.EnableControls(IG070902);
                            obj_op.EnableControls(IG0701002);
                            obj_op.EnableControls(IG0701102);
                            obj_op.EnableControls(IG0701202);
                            obj_op.EnableControls(IG0701302);
                            obj_op.EnableControls(IG0802);
                            obj_op.EnableControls(IG0902);
                            obj_op.EnableControls(IG01002);
                            obj_op.EnableControls(IG01102);
                            obj_op.EnableControls(IG01202);
                            obj_op.EnableControls(IG01302);
                            obj_op.EnableControls(IG01402);
                            obj_op.EnableControls(IG01502);
                            obj_op.EnableControls(IG160102);
                            obj_op.EnableControls(IG160202);
                            obj_op.EnableControls(IG160302);
                            obj_op.EnableControls(IG160402);
                            obj_op.EnableControls(IG160502);
                            obj_op.EnableControls(IG160602);
                            obj_op.EnableControls(IG160702);
                            obj_op.EnableControls(IG160802);
                            obj_op.EnableControls(IG160902);
                            obj_op.EnableControls(IG1601002);
                            obj_op.EnableControls(IG1601102);
                            obj_op.EnableControls(IG1601202);

                        }


                        if (chkMember3.Text == "1")
                        {

                            obj_op.EnableControls(IG0403);
                            obj_op.EnableControls(IG0503);
                            obj_op.EnableControls(IG060103);
                            obj_op.EnableControls(IG060203);
                            obj_op.EnableControls(IG060303);
                            obj_op.EnableControls(IG060403);
                            obj_op.EnableControls(IG060503);

                            obj_op.EnableControls(IG070103);
                            obj_op.EnableControls(IG070203);
                            obj_op.EnableControls(IG070303);
                            obj_op.EnableControls(IG070403);
                            obj_op.EnableControls(IG070503);
                            obj_op.EnableControls(IG070603);
                            obj_op.EnableControls(IG070703);
                            obj_op.EnableControls(IG070803);
                            obj_op.EnableControls(IG070903);
                            obj_op.EnableControls(IG0701003);
                            obj_op.EnableControls(IG0701103);
                            obj_op.EnableControls(IG0701203);
                            obj_op.EnableControls(IG0701303);
                            obj_op.EnableControls(IG0803);
                            obj_op.EnableControls(IG0903);
                            obj_op.EnableControls(IG01003);
                            obj_op.EnableControls(IG01103);
                            obj_op.EnableControls(IG01203);
                            obj_op.EnableControls(IG01303);
                            obj_op.EnableControls(IG01403);
                            obj_op.EnableControls(IG01503);
                            obj_op.EnableControls(IG160103);
                            obj_op.EnableControls(IG160203);
                            obj_op.EnableControls(IG160303);
                            obj_op.EnableControls(IG160403);
                            obj_op.EnableControls(IG160503);
                            obj_op.EnableControls(IG160603);
                            obj_op.EnableControls(IG160703);
                            obj_op.EnableControls(IG160803);
                            obj_op.EnableControls(IG160903);
                            obj_op.EnableControls(IG1601003);
                            obj_op.EnableControls(IG1601103);
                            obj_op.EnableControls(IG1601203);

                        }


                        if (chkMember4.Text == "1")
                        {

                            obj_op.EnableControls(IG0404);
                            obj_op.EnableControls(IG0504);
                            obj_op.EnableControls(IG060104);
                            obj_op.EnableControls(IG060204);
                            obj_op.EnableControls(IG060304);
                            obj_op.EnableControls(IG060404);
                            obj_op.EnableControls(IG060504);

                            obj_op.EnableControls(IG070104);
                            obj_op.EnableControls(IG070204);
                            obj_op.EnableControls(IG070304);
                            obj_op.EnableControls(IG070404);
                            obj_op.EnableControls(IG070504);
                            obj_op.EnableControls(IG070604);
                            obj_op.EnableControls(IG070704);
                            obj_op.EnableControls(IG070804);
                            obj_op.EnableControls(IG070904);
                            obj_op.EnableControls(IG0701004);
                            obj_op.EnableControls(IG0701104);
                            obj_op.EnableControls(IG0701204);
                            obj_op.EnableControls(IG0701304);
                            obj_op.EnableControls(IG0804);
                            obj_op.EnableControls(IG0904);
                            obj_op.EnableControls(IG01004);
                            obj_op.EnableControls(IG01104);
                            obj_op.EnableControls(IG01204);
                            obj_op.EnableControls(IG01304);
                            obj_op.EnableControls(IG01404);
                            obj_op.EnableControls(IG01504);
                            obj_op.EnableControls(IG160104);
                            obj_op.EnableControls(IG160204);
                            obj_op.EnableControls(IG160304);
                            obj_op.EnableControls(IG160404);
                            obj_op.EnableControls(IG160504);
                            obj_op.EnableControls(IG160604);
                            obj_op.EnableControls(IG160704);
                            obj_op.EnableControls(IG160804);
                            obj_op.EnableControls(IG160904);
                            obj_op.EnableControls(IG1601004);
                            obj_op.EnableControls(IG1601104);
                            obj_op.EnableControls(IG1601204);

                        }



                        if (chkMember5.Text == "1")
                        {

                            obj_op.EnableControls(IG0405);
                            obj_op.EnableControls(IG0505);
                            obj_op.EnableControls(IG060105);
                            obj_op.EnableControls(IG060205);
                            obj_op.EnableControls(IG060305);
                            obj_op.EnableControls(IG060405);
                            obj_op.EnableControls(IG060505);

                            obj_op.EnableControls(IG070105);
                            obj_op.EnableControls(IG070205);
                            obj_op.EnableControls(IG070305);
                            obj_op.EnableControls(IG070405);
                            obj_op.EnableControls(IG070505);
                            obj_op.EnableControls(IG070605);
                            obj_op.EnableControls(IG070705);
                            obj_op.EnableControls(IG070805);
                            obj_op.EnableControls(IG070905);
                            obj_op.EnableControls(IG0701005);
                            obj_op.EnableControls(IG0701105);
                            obj_op.EnableControls(IG0701205);
                            obj_op.EnableControls(IG0701305);
                            obj_op.EnableControls(IG0805);
                            obj_op.EnableControls(IG0905);
                            obj_op.EnableControls(IG01005);
                            obj_op.EnableControls(IG01105);
                            obj_op.EnableControls(IG01205);
                            obj_op.EnableControls(IG01305);
                            obj_op.EnableControls(IG01405);
                            obj_op.EnableControls(IG01505);
                            obj_op.EnableControls(IG160105);
                            obj_op.EnableControls(IG160205);
                            obj_op.EnableControls(IG160305);
                            obj_op.EnableControls(IG160405);
                            obj_op.EnableControls(IG160505);
                            obj_op.EnableControls(IG160605);
                            obj_op.EnableControls(IG160705);
                            obj_op.EnableControls(IG160805);
                            obj_op.EnableControls(IG160905);
                            obj_op.EnableControls(IG1601005);
                            obj_op.EnableControls(IG1601105);
                            obj_op.EnableControls(IG1601205);

                        }

                        IG02.Focus();

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG01.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG01);
        }

        private void IG02_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG02'", IG02.Text) == true)
                {
                    IG02.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG02.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG02);
        }

        private void IG0301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0301'", IG0301.Text) == true)
                {
                    IG0301.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0301);
        }

        private void IG0302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0302'", IG0302.Text) == true)
                {
                    IG0302.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0302);
        }

        private void IG0303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0303'", IG0303.Text) == true)
                {
                    IG0303.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0303);
        }

        private void IG0304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0304'", IG0304.Text) == true)
                {
                    IG0304.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0304);
        }

        private void IG0305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0305'", IG0305.Text) == true)
                {
                    IG0305.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0305);
        }

        private void IG0306_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0306'", IG0306.Text) == true)
                {
                    IG0306.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0306.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0306);
        }

        private void IG0307_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0307'", IG0307.Text) == true)
                {
                    IG0307.Focus();
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0307.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0307);
        }

        private void IG0308_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0308'", IG0308.Text) == true)
                {
                    IG0308.Focus();
                }
                else
                {
                    if (IG0301.Text == "1" &&
                        IG0302.Text == "1" &&
                        IG0303.Text == "1" &&
                        IG0304.Text == "1" &&
                        IG0305.Text == "1" &&
                        IG0306.Text == "1" &&
                        IG0307.Text == "1" &&
                        IG0308.Text == "1"
                        )
                    {
                        MessageBox.Show("if any of the above option is 1 - Yes then I was not aware of lockdown cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0308.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0308.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0308);
        }

        private void IG0309_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0309'", IG0309.Text) == true)
                {
                    IG0309.Focus();
                }
                else
                {
                    if (IG0301.Text == "1" &&
                        IG0302.Text == "1" &&
                        IG0303.Text == "1" &&
                        IG0304.Text == "1" &&
                        IG0305.Text == "1" &&
                        IG0306.Text == "1" &&
                        IG0307.Text == "1" &&
                        IG0309.Text == "1"
                        )
                    {
                        MessageBox.Show("if any of the above option is 1 - Yes then none of the above cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0309.Focus();
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0309.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0309);
        }

        private void IG03010_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG03010'", IG03010.Text) == true)
                {
                    IG03010.Focus();
                }
                else
                {
                    if (IG0301.Text == "1" &&
                        IG0302.Text == "1" &&
                        IG0303.Text == "1" &&
                        IG0304.Text == "1" &&
                        IG0305.Text == "1" &&
                        IG0306.Text == "1" &&
                        IG0307.Text == "1" &&
                        IG03010.Text == "1"
                        )
                    {
                        MessageBox.Show("if any of the above option is 1 - Yes then Dont Know cannot be 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG03010.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG03010.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG03010);
        }

        private void chkMember1_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember1'", chkMember1.Text) == true)
                {
                    chkMember1.Focus();
                }
                else
                {
                    if (chkMember1.Text == "1")
                    {
                        obj_op.EnableControls(IG0401);
                        obj_op.EnableControls(IG0501);
                        obj_op.EnableControls(IG060101);
                        obj_op.EnableControls(IG060201);
                        obj_op.EnableControls(IG060301);
                        obj_op.EnableControls(IG060401);
                        obj_op.EnableControls(IG060501);
                        obj_op.EnableControls(IG070101);
                        obj_op.EnableControls(IG070201);
                        obj_op.EnableControls(IG070301);
                        obj_op.EnableControls(IG070401);

                        obj_op.EnableControls(IG070501);
                        obj_op.EnableControls(IG070601);
                        obj_op.EnableControls(IG070701);
                        obj_op.EnableControls(IG070801);
                        obj_op.EnableControls(IG070901);
                        obj_op.EnableControls(IG0701001);
                        obj_op.EnableControls(IG0701101);
                        obj_op.EnableControls(IG0701201);
                        obj_op.EnableControls(IG0701301);
                        obj_op.EnableControls(IG0801);
                        obj_op.EnableControls(IG0901);
                        obj_op.EnableControls(IG01001);
                        obj_op.EnableControls(IG01101);
                        obj_op.EnableControls(IG01201);
                        obj_op.EnableControls(IG01301);
                        obj_op.EnableControls(IG01401);
                        obj_op.EnableControls(IG01501);
                        obj_op.EnableControls(IG160101);
                        obj_op.EnableControls(IG160201);
                        obj_op.EnableControls(IG160301);
                        obj_op.EnableControls(IG160401);
                        obj_op.EnableControls(IG160501);
                        obj_op.EnableControls(IG160601);
                        obj_op.EnableControls(IG160701);
                        obj_op.EnableControls(IG160801);
                        obj_op.EnableControls(IG160901);
                        obj_op.EnableControls(IG1601001);
                        obj_op.EnableControls(IG1601101);
                        obj_op.EnableControls(IG1601201);

                        IG0401.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IG0401);
                        obj_op.DisableControls(IG0501);
                        obj_op.DisableControls(IG060101);
                        obj_op.DisableControls(IG060201);
                        obj_op.DisableControls(IG060301);
                        obj_op.DisableControls(IG060401);
                        obj_op.DisableControls(IG060501);
                        obj_op.DisableControls(IG070101);
                        obj_op.DisableControls(IG070201);
                        obj_op.DisableControls(IG070301);
                        obj_op.DisableControls(IG070401);

                        obj_op.DisableControls(IG070501);
                        obj_op.DisableControls(IG070601);
                        obj_op.DisableControls(IG070701);
                        obj_op.DisableControls(IG070801);
                        obj_op.DisableControls(IG070901);
                        obj_op.DisableControls(IG0701001);
                        obj_op.DisableControls(IG0701101);
                        obj_op.DisableControls(IG0701201);
                        obj_op.DisableControls(IG0701301);
                        obj_op.DisableControls(IG0801);
                        obj_op.DisableControls(IG0901);
                        obj_op.DisableControls(IG01001);
                        obj_op.DisableControls(IG01101);
                        obj_op.DisableControls(IG01201);
                        obj_op.DisableControls(IG01301);
                        obj_op.DisableControls(IG01401);
                        obj_op.DisableControls(IG01501);
                        obj_op.DisableControls(IG160101);
                        obj_op.DisableControls(IG160201);
                        obj_op.DisableControls(IG160301);
                        obj_op.DisableControls(IG160401);
                        obj_op.DisableControls(IG160501);
                        obj_op.DisableControls(IG160601);
                        obj_op.DisableControls(IG160701);
                        obj_op.DisableControls(IG160801);
                        obj_op.DisableControls(IG160901);
                        obj_op.DisableControls(IG1601001);
                        obj_op.DisableControls(IG1601101);
                        obj_op.DisableControls(IG1601201);


                        chkMember2.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember1.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember1);
        }

        private void chkMember2_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember2'", chkMember2.Text) == true)
                {
                    chkMember2.Focus();
                }
                else
                {

                    if (chkMember1.Text == "2" && chkMember2.Text == "1")
                    {
                        MessageBox.Show("You have to add 1st memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember2.Focus();
                        return;
                    }



                    if (chkMember2.Text == "1")
                    {
                        obj_op.EnableControls(IG0402);
                        obj_op.EnableControls(IG0502);
                        obj_op.EnableControls(IG060102);
                        obj_op.EnableControls(IG060202);
                        obj_op.EnableControls(IG060302);
                        obj_op.EnableControls(IG060402);
                        obj_op.EnableControls(IG060502);
                        obj_op.EnableControls(IG070102);
                        obj_op.EnableControls(IG070202);
                        obj_op.EnableControls(IG070302);
                        obj_op.EnableControls(IG070402);

                        obj_op.EnableControls(IG070502);
                        obj_op.EnableControls(IG070602);
                        obj_op.EnableControls(IG070702);
                        obj_op.EnableControls(IG070802);
                        obj_op.EnableControls(IG070902);
                        obj_op.EnableControls(IG0701002);
                        obj_op.EnableControls(IG0701102);
                        obj_op.EnableControls(IG0701202);
                        obj_op.EnableControls(IG0701302);
                        obj_op.EnableControls(IG0802);
                        obj_op.EnableControls(IG0902);
                        obj_op.EnableControls(IG01002);
                        obj_op.EnableControls(IG01102);
                        obj_op.EnableControls(IG01202);
                        obj_op.EnableControls(IG01302);
                        obj_op.EnableControls(IG01402);
                        obj_op.EnableControls(IG01502);
                        obj_op.EnableControls(IG160102);
                        obj_op.EnableControls(IG160202);
                        obj_op.EnableControls(IG160302);
                        obj_op.EnableControls(IG160402);
                        obj_op.EnableControls(IG160502);
                        obj_op.EnableControls(IG160602);
                        obj_op.EnableControls(IG160702);
                        obj_op.EnableControls(IG160802);
                        obj_op.EnableControls(IG160902);
                        obj_op.EnableControls(IG1601002);
                        obj_op.EnableControls(IG1601102);
                        obj_op.EnableControls(IG1601202);

                        IG0402.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IG0402);
                        obj_op.DisableControls(IG0502);
                        obj_op.DisableControls(IG060102);
                        obj_op.DisableControls(IG060202);
                        obj_op.DisableControls(IG060302);
                        obj_op.DisableControls(IG060402);
                        obj_op.DisableControls(IG060502);
                        obj_op.DisableControls(IG070102);
                        obj_op.DisableControls(IG070202);
                        obj_op.DisableControls(IG070302);
                        obj_op.DisableControls(IG070402);

                        obj_op.DisableControls(IG070502);
                        obj_op.DisableControls(IG070602);
                        obj_op.DisableControls(IG070702);
                        obj_op.DisableControls(IG070802);
                        obj_op.DisableControls(IG070902);
                        obj_op.DisableControls(IG0701002);
                        obj_op.DisableControls(IG0701102);
                        obj_op.DisableControls(IG0701202);
                        obj_op.DisableControls(IG0701302);
                        obj_op.DisableControls(IG0802);
                        obj_op.DisableControls(IG0902);
                        obj_op.DisableControls(IG01002);
                        obj_op.DisableControls(IG01102);
                        obj_op.DisableControls(IG01202);
                        obj_op.DisableControls(IG01302);
                        obj_op.DisableControls(IG01402);
                        obj_op.DisableControls(IG01502);
                        obj_op.DisableControls(IG160102);
                        obj_op.DisableControls(IG160202);
                        obj_op.DisableControls(IG160302);
                        obj_op.DisableControls(IG160402);
                        obj_op.DisableControls(IG160502);
                        obj_op.DisableControls(IG160602);
                        obj_op.DisableControls(IG160702);
                        obj_op.DisableControls(IG160802);
                        obj_op.DisableControls(IG160902);
                        obj_op.DisableControls(IG1601002);
                        obj_op.DisableControls(IG1601102);
                        obj_op.DisableControls(IG1601202);

                        chkMember3.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember2.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember2);
        }

        private void chkMember3_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember3'", chkMember3.Text) == true)
                {
                    chkMember3.Focus();
                }
                else
                {

                    if (chkMember2.Text == "2" && chkMember3.Text == "1")
                    {
                        MessageBox.Show("You have to add 2nd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember3.Focus();
                        return;
                    }



                    if (chkMember3.Text == "1")
                    {
                        obj_op.EnableControls(IG0403);
                        obj_op.EnableControls(IG0503);
                        obj_op.EnableControls(IG060103);
                        obj_op.EnableControls(IG060203);
                        obj_op.EnableControls(IG060303);
                        obj_op.EnableControls(IG060403);
                        obj_op.EnableControls(IG060503);
                        obj_op.EnableControls(IG070103);
                        obj_op.EnableControls(IG070203);
                        obj_op.EnableControls(IG070303);
                        obj_op.EnableControls(IG070403);


                        obj_op.EnableControls(IG070503);
                        obj_op.EnableControls(IG070603);
                        obj_op.EnableControls(IG070703);
                        obj_op.EnableControls(IG070803);
                        obj_op.EnableControls(IG070903);
                        obj_op.EnableControls(IG0701003);
                        obj_op.EnableControls(IG0701103);
                        obj_op.EnableControls(IG0701203);
                        obj_op.EnableControls(IG0701303);
                        obj_op.EnableControls(IG0803);
                        obj_op.EnableControls(IG0903);
                        obj_op.EnableControls(IG01003);
                        obj_op.EnableControls(IG01103);
                        obj_op.EnableControls(IG01203);
                        obj_op.EnableControls(IG01303);
                        obj_op.EnableControls(IG01403);
                        obj_op.EnableControls(IG01503);
                        obj_op.EnableControls(IG160103);
                        obj_op.EnableControls(IG160203);
                        obj_op.EnableControls(IG160303);
                        obj_op.EnableControls(IG160403);
                        obj_op.EnableControls(IG160503);
                        obj_op.EnableControls(IG160603);
                        obj_op.EnableControls(IG160703);
                        obj_op.EnableControls(IG160803);
                        obj_op.EnableControls(IG160903);
                        obj_op.EnableControls(IG1601003);
                        obj_op.EnableControls(IG1601103);
                        obj_op.EnableControls(IG1601203);


                        IG0403.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IG0403);
                        obj_op.DisableControls(IG0503);
                        obj_op.DisableControls(IG060103);
                        obj_op.DisableControls(IG060203);
                        obj_op.DisableControls(IG060303);
                        obj_op.DisableControls(IG060403);
                        obj_op.DisableControls(IG060503);
                        obj_op.DisableControls(IG070103);
                        obj_op.DisableControls(IG070203);
                        obj_op.DisableControls(IG070303);
                        obj_op.DisableControls(IG070403);


                        obj_op.DisableControls(IG070503);
                        obj_op.DisableControls(IG070603);
                        obj_op.DisableControls(IG070703);
                        obj_op.DisableControls(IG070803);
                        obj_op.DisableControls(IG070903);
                        obj_op.DisableControls(IG0701003);
                        obj_op.DisableControls(IG0701103);
                        obj_op.DisableControls(IG0701203);
                        obj_op.DisableControls(IG0701303);
                        obj_op.DisableControls(IG0803);
                        obj_op.DisableControls(IG0903);
                        obj_op.DisableControls(IG01003);
                        obj_op.DisableControls(IG01103);
                        obj_op.DisableControls(IG01203);
                        obj_op.DisableControls(IG01303);
                        obj_op.DisableControls(IG01403);
                        obj_op.DisableControls(IG01503);
                        obj_op.DisableControls(IG160103);
                        obj_op.DisableControls(IG160203);
                        obj_op.DisableControls(IG160303);
                        obj_op.DisableControls(IG160403);
                        obj_op.DisableControls(IG160503);
                        obj_op.DisableControls(IG160603);
                        obj_op.DisableControls(IG160703);
                        obj_op.DisableControls(IG160803);
                        obj_op.DisableControls(IG160903);
                        obj_op.DisableControls(IG1601003);
                        obj_op.DisableControls(IG1601103);
                        obj_op.DisableControls(IG1601203);


                        chkMember4.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember3.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember3);
        }

        private void chkMember4_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember4'", chkMember4.Text) == true)
                {
                    chkMember4.Focus();
                }
                else
                {

                    if (chkMember3.Text == "2" && chkMember4.Text == "1")
                    {
                        MessageBox.Show("You have to add 3rd memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember4.Focus();
                        return;
                    }



                    if (chkMember4.Text == "1")
                    {
                        obj_op.EnableControls(IG0404);
                        obj_op.EnableControls(IG0504);
                        obj_op.EnableControls(IG060104);
                        obj_op.EnableControls(IG060204);
                        obj_op.EnableControls(IG060304);
                        obj_op.EnableControls(IG060404);
                        obj_op.EnableControls(IG060504);
                        obj_op.EnableControls(IG070104);
                        obj_op.EnableControls(IG070204);
                        obj_op.EnableControls(IG070304);
                        obj_op.EnableControls(IG070404);

                        obj_op.EnableControls(IG070504);
                        obj_op.EnableControls(IG070604);
                        obj_op.EnableControls(IG070704);
                        obj_op.EnableControls(IG070804);
                        obj_op.EnableControls(IG070904);
                        obj_op.EnableControls(IG0701004);
                        obj_op.EnableControls(IG0701104);
                        obj_op.EnableControls(IG0701204);
                        obj_op.EnableControls(IG0701304);
                        obj_op.EnableControls(IG0804);
                        obj_op.EnableControls(IG0904);
                        obj_op.EnableControls(IG01004);
                        obj_op.EnableControls(IG01104);
                        obj_op.EnableControls(IG01204);
                        obj_op.EnableControls(IG01304);
                        obj_op.EnableControls(IG01404);
                        obj_op.EnableControls(IG01504);
                        obj_op.EnableControls(IG160104);
                        obj_op.EnableControls(IG160204);
                        obj_op.EnableControls(IG160304);
                        obj_op.EnableControls(IG160404);
                        obj_op.EnableControls(IG160504);
                        obj_op.EnableControls(IG160604);
                        obj_op.EnableControls(IG160704);
                        obj_op.EnableControls(IG160804);
                        obj_op.EnableControls(IG160904);
                        obj_op.EnableControls(IG1601004);
                        obj_op.EnableControls(IG1601104);
                        obj_op.EnableControls(IG1601204);

                        IG0404.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IG0404);
                        obj_op.DisableControls(IG0504);
                        obj_op.DisableControls(IG060104);
                        obj_op.DisableControls(IG060204);
                        obj_op.DisableControls(IG060304);
                        obj_op.DisableControls(IG060404);
                        obj_op.DisableControls(IG060504);
                        obj_op.DisableControls(IG070104);
                        obj_op.DisableControls(IG070204);
                        obj_op.DisableControls(IG070304);
                        obj_op.DisableControls(IG070404);

                        obj_op.DisableControls(IG070504);
                        obj_op.DisableControls(IG070604);
                        obj_op.DisableControls(IG070704);
                        obj_op.DisableControls(IG070804);
                        obj_op.DisableControls(IG070904);
                        obj_op.DisableControls(IG0701004);
                        obj_op.DisableControls(IG0701104);
                        obj_op.DisableControls(IG0701204);
                        obj_op.DisableControls(IG0701304);
                        obj_op.DisableControls(IG0804);
                        obj_op.DisableControls(IG0904);
                        obj_op.DisableControls(IG01004);
                        obj_op.DisableControls(IG01104);
                        obj_op.DisableControls(IG01204);
                        obj_op.DisableControls(IG01304);
                        obj_op.DisableControls(IG01404);
                        obj_op.DisableControls(IG01504);
                        obj_op.DisableControls(IG160104);
                        obj_op.DisableControls(IG160204);
                        obj_op.DisableControls(IG160304);
                        obj_op.DisableControls(IG160404);
                        obj_op.DisableControls(IG160504);
                        obj_op.DisableControls(IG160604);
                        obj_op.DisableControls(IG160704);
                        obj_op.DisableControls(IG160804);
                        obj_op.DisableControls(IG160904);
                        obj_op.DisableControls(IG1601004);
                        obj_op.DisableControls(IG1601104);
                        obj_op.DisableControls(IG1601204);

                        chkMember5.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember4.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember4);
        }

        private void chkMember5_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkMember5'", chkMember5.Text) == true)
                {
                    chkMember5.Focus();
                }
                else
                {

                    if (chkMember4.Text == "2" && chkMember5.Text == "1")
                    {
                        MessageBox.Show("You have to add 4th memmber first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkMember5.Focus();
                        return;
                    }



                    if (chkMember5.Text == "1")
                    {
                        obj_op.EnableControls(IG0405);
                        obj_op.EnableControls(IG0505);
                        obj_op.EnableControls(IG060105);
                        obj_op.EnableControls(IG060205);
                        obj_op.EnableControls(IG060305);
                        obj_op.EnableControls(IG060405);
                        obj_op.EnableControls(IG060505);
                        obj_op.EnableControls(IG070105);
                        obj_op.EnableControls(IG070205);
                        obj_op.EnableControls(IG070305);
                        obj_op.EnableControls(IG070405);

                        obj_op.EnableControls(IG070505);
                        obj_op.EnableControls(IG070605);
                        obj_op.EnableControls(IG070705);
                        obj_op.EnableControls(IG070805);
                        obj_op.EnableControls(IG070905);
                        obj_op.EnableControls(IG0701005);
                        obj_op.EnableControls(IG0701105);
                        obj_op.EnableControls(IG0701205);
                        obj_op.EnableControls(IG0701305);
                        obj_op.EnableControls(IG0805);
                        obj_op.EnableControls(IG0905);
                        obj_op.EnableControls(IG01005);
                        obj_op.EnableControls(IG01105);
                        obj_op.EnableControls(IG01205);
                        obj_op.EnableControls(IG01305);
                        obj_op.EnableControls(IG01405);
                        obj_op.EnableControls(IG01505);
                        obj_op.EnableControls(IG160105);
                        obj_op.EnableControls(IG160205);
                        obj_op.EnableControls(IG160305);
                        obj_op.EnableControls(IG160405);
                        obj_op.EnableControls(IG160505);
                        obj_op.EnableControls(IG160605);
                        obj_op.EnableControls(IG160705);
                        obj_op.EnableControls(IG160805);
                        obj_op.EnableControls(IG160905);
                        obj_op.EnableControls(IG1601005);
                        obj_op.EnableControls(IG1601105);
                        obj_op.EnableControls(IG1601205);

                        IG0405.Focus();
                    }
                    else
                    {
                        obj_op.DisableControls(IG0405);
                        obj_op.DisableControls(IG0505);
                        obj_op.DisableControls(IG060105);
                        obj_op.DisableControls(IG060205);
                        obj_op.DisableControls(IG060305);
                        obj_op.DisableControls(IG060405);
                        obj_op.DisableControls(IG060505);
                        obj_op.DisableControls(IG070105);
                        obj_op.DisableControls(IG070205);
                        obj_op.DisableControls(IG070305);
                        obj_op.DisableControls(IG070405);

                        obj_op.DisableControls(IG070505);
                        obj_op.DisableControls(IG070605);
                        obj_op.DisableControls(IG070705);
                        obj_op.DisableControls(IG070805);
                        obj_op.DisableControls(IG070905);
                        obj_op.DisableControls(IG0701005);
                        obj_op.DisableControls(IG0701105);
                        obj_op.DisableControls(IG0701205);
                        obj_op.DisableControls(IG0701305);
                        obj_op.DisableControls(IG0805);
                        obj_op.DisableControls(IG0905);
                        obj_op.DisableControls(IG01005);
                        obj_op.DisableControls(IG01105);
                        obj_op.DisableControls(IG01205);
                        obj_op.DisableControls(IG01305);
                        obj_op.DisableControls(IG01405);
                        obj_op.DisableControls(IG01505);
                        obj_op.DisableControls(IG160105);
                        obj_op.DisableControls(IG160205);
                        obj_op.DisableControls(IG160305);
                        obj_op.DisableControls(IG160405);
                        obj_op.DisableControls(IG160505);
                        obj_op.DisableControls(IG160605);
                        obj_op.DisableControls(IG160705);
                        obj_op.DisableControls(IG160805);
                        obj_op.DisableControls(IG160905);
                        obj_op.DisableControls(IG1601005);
                        obj_op.DisableControls(IG1601105);
                        obj_op.DisableControls(IG1601205);


                        if (IG060101.Enabled == true)
                        {
                            tabControl1.SelectedIndex = 7;
                            IG060101.Focus();
                        }
                        else if (IG060102.Enabled == true)
                        {
                            tabControl1.SelectedIndex = 7;
                            IG060102.Focus();
                        }
                        else if (IG060103.Enabled == true)
                        {
                            tabControl1.SelectedIndex = 7;
                            IG060103.Focus();
                        }
                        else if (IG060104.Enabled == true)
                        {
                            tabControl1.SelectedIndex = 7;
                            IG060104.Focus();
                        }
                        else if (IG060105.Enabled == true)
                        {
                            tabControl1.SelectedIndex = 7;
                            IG060105.Focus();
                        }
                        else
                        {
                            tabControl1.SelectedIndex = 9;
                            QCFUP02.Focus();
                        }

                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkMember5.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_chkMember5);
        }

        private void IG0401_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0401'", IG0401.Text) == true)
                {
                    IG0401.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0401.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0401);
        }

        private void IG0501_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0501'", IG0501.Text) == true)
                {
                    IG0501.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0501.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0501);
        }

        private void IG0402_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0402'", IG0402.Text) == true)
                {
                    IG0402.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0402.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0402);
        }

        private void IG0502_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0502'", IG0502.Text) == true)
                {
                    IG0502.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0502.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0502);
        }

        private void IG0403_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0403'", IG0403.Text) == true)
                {
                    IG0403.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0403.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0403);
        }

        private void IG0503_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0503'", IG0503.Text) == true)
                {
                    IG0503.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0503.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0503);
        }

        private void IG0404_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0404'", IG0404.Text) == true)
                {
                    IG0404.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0404.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0404);
        }

        private void IG0504_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0504'", IG0504.Text) == true)
                {
                    IG0504.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0504.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0504);
        }

        private void IG0405_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0405'", IG0405.Text) == true)
                {
                    IG0405.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0405.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0405);
        }

        private void IG0505_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0505'", IG0505.Text) == true)
                {
                    IG0505.Focus();
                }
                else
                {
                    tabControl1.SelectedIndex = 7;
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0505.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0505);
        }

        private void IG060101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060101'", IG060101.Text) == true)
                {
                    IG060101.Focus();
                }
                else
                {
                    //if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                    //{
                    //    Disabled_IG060101_Q47();
                    //}
                    //else
                    //{
                    //    Enabled_IG060101_Q47();
                    //}
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060101);
        }

        private void IG060201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060201'", IG060201.Text) == true)
                {
                    IG060201.Focus();
                }
                else
                {
                    if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                    {
                        Disabled_IG060101_Q47();
                    }
                    else
                    {
                        Enabled_IG060101_Q47();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060201);
        }

        private void IG060301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060301'", IG060301.Text) == true)
                {
                    IG060301.Focus();
                }
                else
                {
                    if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                    {
                        Disabled_IG060101_Q47();
                    }
                    else
                    {
                        Enabled_IG060101_Q47();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060301);
        }

        private void IG060401_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060401'", IG060401.Text) == true)
                {
                    IG060401.Focus();
                }
                else
                {
                    if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                    {
                        Disabled_IG060101_Q47();
                    }
                    else
                    {
                        Enabled_IG060101_Q47();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060401.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060401);
        }

        private void IG060501_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060501'", IG060501.Text) == true)
                {
                    IG060501.Focus();
                }
                else
                {
                    if (IG060101.Text == "0" || IG060201.Text == "0" || IG060301.Text == "0" || IG060401.Text == "0" || IG060501.Text == "0")
                    {
                        Disabled_IG060101_Q47();
                    }
                    else
                    {
                        Enabled_IG060101_Q47();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060501.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060501);
        }

        private void IG060102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060102'", IG060102.Text) == true)
                {
                    IG060102.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060102);
        }

        private void IG060202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060202'", IG060202.Text) == true)
                {
                    IG060202.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060202);
        }

        private void IG060302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060302'", IG060302.Text) == true)
                {
                    IG060302.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060302);
        }

        private void IG060402_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060402'", IG060402.Text) == true)
                {
                    IG060402.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060402.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060402);
        }

        private void IG060502_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060502'", IG060502.Text) == true)
                {
                    IG060502.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060502.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060502);
        }

        private void IG060103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060103'", IG060103.Text) == true)
                {
                    IG060103.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060103);
        }

        private void IG060203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060203'", IG060203.Text) == true)
                {
                    IG060203.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060203);
        }

        private void IG060303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060303'", IG060303.Text) == true)
                {
                    IG060303.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060303);
        }

        private void IG060403_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060403'", IG060403.Text) == true)
                {
                    IG060403.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060403.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060403);
        }

        private void IG060503_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060503'", IG060503.Text) == true)
                {
                    IG060503.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060503.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060503);
        }

        private void IG060104_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060104'", IG060104.Text) == true)
                {
                    IG060104.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060104.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060104);
        }

        private void IG060204_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060204'", IG060204.Text) == true)
                {
                    IG060204.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060204.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060204);
        }

        private void IG060304_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060304'", IG060304.Text) == true)
                {
                    IG060304.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060304.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060304);
        }

        private void IG060404_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060404'", IG060404.Text) == true)
                {
                    IG060404.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060404.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060404);
        }

        private void IG060504_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060504'", IG060504.Text) == true)
                {
                    IG060504.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060504.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060504);
        }

        private void IG060105_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060105'", IG060105.Text) == true)
                {
                    IG060105.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060105.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060105);
        }

        private void IG060205_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060205'", IG060205.Text) == true)
                {
                    IG060205.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060205.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060205);
        }

        private void IG060305_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060305'", IG060305.Text) == true)
                {
                    IG060305.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060305.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060305);
        }

        private void IG060405_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060405'", IG060405.Text) == true)
                {
                    IG060405.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060405.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060405);
        }

        private void IG060505_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG060505'", IG060505.Text) == true)
                {
                    IG060505.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG060505.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG060505);
        }

        private void IG070101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070101'", IG070101.Text) == true)
                {
                    IG070101.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070101);
        }

        private void IG070201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070201'", IG070201.Text) == true)
                {
                    IG070201.Focus();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070201);
        }

        private void IG070301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070301'", IG070301.Text) == true)
                {
                    IG070301.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070301);
        }

        private void IG070401_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070401'", IG070401.Text) == true)
                {
                    IG070401.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070401.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070401);
        }

        private void IG070501_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070501'", IG070501.Text) == true)
                {
                    IG070501.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070501.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070501);
        }

        private void IG070601_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070601'", IG070601.Text) == true)
                {
                    IG070601.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070601.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070601);
        }

        private void IG070701_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070701'", IG070701.Text) == true)
                {
                    IG070701.Focus();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070701.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070701);
        }

        private void IG070801_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070801'", IG070801.Text) == true)
                {
                    IG070801.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070801.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070801);
        }

        private void IG070901_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070901'", IG070901.Text) == true)
                {
                    IG070901.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070901.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070901);
        }

        private void IG0701001_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701001'", IG0701001.Text) == true)
                {
                    IG0701001.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701001.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701001);
        }

        private void IG0701101_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701101'", IG0701101.Text) == true)
                {
                    IG0701101.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701101.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701101);
        }

        private void IG0701201_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701201'", IG0701201.Text) == true)
                {
                    IG0701201.Focus();
                }
                else
                {

                    if (IG070101.Text == "1" &&
                        IG070201.Text == "1" &&
                        IG070301.Text == "1" &&
                        IG070401.Text == "1" &&
                        IG070501.Text == "1" &&
                        IG070601.Text == "1" &&
                        IG070701.Text == "1" &&
                        IG070801.Text == "1" &&
                        IG070901.Text == "1" &&
                        IG0701001.Text == "1" &&
                        IG0701101.Text == "1" &&
                        IG0701201.Text == "1"
                        )
                    {
                        MessageBox.Show("Dont know cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701201.Focus();
                    }
                    else
                    {
                        if (IG0701201.Text == "1")
                        {
                            obj_op.DisableControls(IG0701301);
                            obj_op.DisableControls(IG0801);

                            IG0901.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701301);
                            obj_op.EnableControls(IG0801);

                            IG0701301.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701201.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701201);
        }

        private void IG0701301_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701301'", IG0701301.Text) == true)
                {
                    IG0701301.Focus();
                }
                else
                {
                    if (IG070101.Text == "1" &&
                       IG070201.Text == "1" &&
                       IG070301.Text == "1" &&
                       IG070401.Text == "1" &&
                       IG070501.Text == "1" &&
                       IG070601.Text == "1" &&
                       IG070701.Text == "1" &&
                       IG070801.Text == "1" &&
                       IG070901.Text == "1" &&
                       IG0701001.Text == "1" &&
                       IG0701101.Text == "1" &&
                       IG0701301.Text == "1"
                       )
                    {
                        MessageBox.Show("None of the above cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701301.Focus();
                    }
                    else
                    {
                        if (IG0701301.Text == "1")
                        {
                            obj_op.DisableControls(IG0801);
                            IG0901.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0801);
                            IG0801.Focus();
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701301.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701301);
        }

        private void IG070102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070102'", IG070102.Text) == true)
                {
                    IG070102.Focus();
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070102);
        }

        private void IG070202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070202'", IG070202.Text) == true)
                {
                    IG070202.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070202);
        }

        private void IG070302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070302'", IG070302.Text) == true)
                {
                    IG070302.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070302);
        }

        private void IG070402_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070402'", IG070402.Text) == true)
                {
                    IG070402.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070402.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070402);
        }

        private void IG070502_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070502'", IG070502.Text) == true)
                {
                    IG070502.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070502.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070502);
        }

        private void IG070602_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070602'", IG070602.Text) == true)
                {
                    IG070602.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070602.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070602);
        }

        private void IG070702_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070702'", IG070702.Text) == true)
                {
                    IG070702.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070702.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070702);
        }

        private void IG070802_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070802'", IG070802.Text) == true)
                {
                    IG070802.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070802.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070802);
        }

        private void IG070902_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070902'", IG070902.Text) == true)
                {
                    IG070902.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070902.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070902);
        }

        private void IG0701002_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701002'", IG0701002.Text) == true)
                {
                    IG0701002.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701002.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701002);
        }

        private void IG0701102_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701102'", IG0701102.Text) == true)
                {
                    IG0701102.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701102.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701102);
        }

        private void IG0701202_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701202'", IG0701202.Text) == true)
                {
                    IG0701202.Focus();
                }
                else
                {
                    if (IG070102.Text == "1" &&
                       IG070202.Text == "1" &&
                       IG070302.Text == "1" &&
                       IG070402.Text == "1" &&
                       IG070502.Text == "1" &&
                       IG070602.Text == "1" &&
                       IG070702.Text == "1" &&
                       IG070802.Text == "1" &&
                       IG070902.Text == "1" &&
                       IG0701002.Text == "1" &&
                       IG0701102.Text == "1" &&
                       IG0701202.Text == "1"
                       )
                    {
                        MessageBox.Show("Dont know cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701202.Focus();
                    }
                    else
                    {
                        if (IG0701202.Text == "1")
                        {
                            obj_op.DisableControls(IG0701302);
                            obj_op.DisableControls(IG0802);

                            IG0902.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701302);
                            obj_op.EnableControls(IG0802);

                            IG0701302.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701202.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701202);
        }

        private void IG0701302_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701302'", IG0701302.Text) == true)
                {
                    IG0701302.Focus();
                }
                else
                {

                    if (IG070102.Text == "1" &&
                       IG070202.Text == "1" &&
                       IG070302.Text == "1" &&
                       IG070402.Text == "1" &&
                       IG070502.Text == "1" &&
                       IG070602.Text == "1" &&
                       IG070702.Text == "1" &&
                       IG070802.Text == "1" &&
                       IG070902.Text == "1" &&
                       IG0701002.Text == "1" &&
                       IG0701102.Text == "1" &&
                       IG0701302.Text == "1"
                       )
                    {
                        MessageBox.Show("None of the above cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701302.Focus();
                    }
                    else
                    {
                        if (IG0701302.Text == "1")
                        {
                            obj_op.DisableControls(IG0802);
                            IG0902.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0802);
                            IG0802.Focus();
                        }
                    }

                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701302.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701302);
        }

        private void IG070103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070103'", IG070103.Text) == true)
                {
                    IG070103.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070103);
        }

        private void IG070203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070203'", IG070203.Text) == true)
                {
                    IG070203.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070203);
        }

        private void IG070303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070303'", IG070303.Text) == true)
                {
                    IG070303.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070303);
        }

        private void IG070403_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070403'", IG070403.Text) == true)
                {
                    IG070403.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070403.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070403);
        }

        private void IG070503_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070503'", IG070503.Text) == true)
                {
                    IG070503.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070503.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070503);
        }

        private void IG070603_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070603'", IG070603.Text) == true)
                {
                    IG070603.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070603.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070603);
        }

        private void IG070703_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070703'", IG070703.Text) == true)
                {
                    IG070703.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070703.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070703);
        }

        private void IG070803_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070803'", IG070803.Text) == true)
                {
                    IG070803.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070803.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070803);
        }

        private void IG070903_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG070903'", IG070903.Text) == true)
                {
                    IG070903.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG070903.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG070903);
        }

        private void IG0701003_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701003'", IG0701003.Text) == true)
                {
                    IG0701003.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701003.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701003);
        }

        private void IG0701103_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701103'", IG0701103.Text) == true)
                {
                    IG0701103.Focus();
                }



            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701103.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701103);
        }

        private void IG0701203_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701203'", IG0701203.Text) == true)
                {
                    IG0701203.Focus();
                }
                else
                {

                    if (IG070103.Text == "1" &&
                       IG070203.Text == "1" &&
                       IG070303.Text == "1" &&
                       IG070403.Text == "1" &&
                       IG070503.Text == "1" &&
                       IG070603.Text == "1" &&
                       IG070703.Text == "1" &&
                       IG070803.Text == "1" &&
                       IG070903.Text == "1" &&
                       IG0701003.Text == "1" &&
                       IG0701103.Text == "1" &&
                       IG0701203.Text == "1"
                       )
                    {
                        MessageBox.Show("Dont know cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701203.Focus();
                    }
                    else
                    {
                        if (IG0701203.Text == "1")
                        {
                            obj_op.DisableControls(IG0701303);
                            obj_op.DisableControls(IG0803);

                            IG0903.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0701303);
                            obj_op.EnableControls(IG0803);

                            IG0701303.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701203.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701203);
        }

        private void IG0701303_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'IG0701303'", IG0701303.Text) == true)
                {
                    IG0701303.Focus();
                }
                else
                {

                    if (IG070103.Text == "1" &&
                       IG070203.Text == "1" &&
                       IG070303.Text == "1" &&
                       IG070403.Text == "1" &&
                       IG070503.Text == "1" &&
                       IG070603.Text == "1" &&
                       IG070703.Text == "1" &&
                       IG070803.Text == "1" &&
                       IG070903.Text == "1" &&
                       IG0701003.Text == "1" &&
                       IG0701103.Text == "1" &&
                       IG0701303.Text == "1"
                       )
                    {
                        MessageBox.Show("None of the above cannot be 1 - Yes if all of the above symptoms is 1 - Yes ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IG0701303.Focus();
                    }
                    else
                    {
                        if (IG0701303.Text == "1")
                        {
                            obj_op.DisableControls(IG0803);
                            IG0903.Focus();
                        }
                        else
                        {
                            obj_op.EnableControls(IG0803);
                            IG0803.Focus();
                        }
                    }

                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            IG0701303.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_IG0701303);
        }


        private void chkBaby5_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby5'", chkBaby5.Text) == true)
                {
                    chkBaby5.Focus();
                }
                else
                {
                    if (chkBaby5.Text == "1")
                    {
                        obj_op.EnableControls(IC0605);
                        obj_op.EnableControls(IC0705);
                        obj_op.EnableControls(IC0805);
                        obj_op.EnableControls(IC0905);
                        obj_op.EnableControls(IC01005);
                        obj_op.EnableControls(IC01105);

                        IC0605.Focus();

                    }
                    else
                    {
                        obj_op.DisableControls(IC0605);
                        obj_op.DisableControls(IC0705);
                        obj_op.DisableControls(IC0805);
                        obj_op.DisableControls(IC0905);
                        obj_op.DisableControls(IC01005);
                        obj_op.DisableControls(IC01105);

                        obj_op.DisableControls(IC0606);
                        obj_op.DisableControls(IC0706);
                        obj_op.DisableControls(IC0806);
                        obj_op.DisableControls(IC0906);
                        obj_op.DisableControls(IC01006);
                        obj_op.DisableControls(IC01106);

                        obj_op.DisableControls(IC0607);
                        obj_op.DisableControls(IC0707);
                        obj_op.DisableControls(IC0807);
                        obj_op.DisableControls(IC0907);
                        obj_op.DisableControls(IC01007);
                        obj_op.DisableControls(IC01107);

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        chkBaby6.Focus();
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby5.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby5);
        }

        private void chkBaby6_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby6'", chkBaby6.Text) == true)
                {
                    chkBaby6.Focus();
                }
                else
                {

                    if (chkBaby5.Text == "2" && chkBaby6.Text == "1")
                    {
                        MessageBox.Show("You have to add 5th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby6.Focus();
                        return;
                    }



                    if (chkBaby6.Text == "1")
                    {
                        obj_op.EnableControls(IC0606);
                        obj_op.EnableControls(IC0706);
                        obj_op.EnableControls(IC0806);
                        obj_op.EnableControls(IC0906);
                        obj_op.EnableControls(IC01006);
                        obj_op.EnableControls(IC01106);

                        IC0606.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IC0606);
                        obj_op.DisableControls(IC0706);
                        obj_op.DisableControls(IC0806);
                        obj_op.DisableControls(IC0906);
                        obj_op.DisableControls(IC01006);
                        obj_op.DisableControls(IC01106);


                        obj_op.DisableControls(IC0607);
                        obj_op.DisableControls(IC0707);
                        obj_op.DisableControls(IC0807);
                        obj_op.DisableControls(IC0907);
                        obj_op.DisableControls(IC01007);
                        obj_op.DisableControls(IC01107);

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);


                        chkBaby7.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby6.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby6);
        }

        private void chkBaby7_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby7'", chkBaby7.Text) == true)
                {
                    chkBaby7.Focus();
                }
                else
                {


                    if (chkBaby6.Text == "2" && chkBaby7.Text == "1")
                    {
                        MessageBox.Show("You have to add 6th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby7.Focus();
                        return;
                    }



                    if (chkBaby7.Text == "1")
                    {
                        obj_op.EnableControls(IC0607);
                        obj_op.EnableControls(IC0707);
                        obj_op.EnableControls(IC0807);
                        obj_op.EnableControls(IC0907);
                        obj_op.EnableControls(IC01007);
                        obj_op.EnableControls(IC01107);

                        IC0607.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IC0607);
                        obj_op.DisableControls(IC0707);
                        obj_op.DisableControls(IC0807);
                        obj_op.DisableControls(IC0907);
                        obj_op.DisableControls(IC01007);
                        obj_op.DisableControls(IC01107);

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        chkBaby8.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby7.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby7);
        }

        private void chkBaby8_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby8'", chkBaby8.Text) == true)
                {
                    chkBaby8.Focus();
                }
                else
                {

                    if (chkBaby7.Text == "2" && chkBaby8.Text == "1")
                    {
                        MessageBox.Show("You have to add 7th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby8.Focus();
                        return;
                    }


                    if (chkBaby8.Text == "1")
                    {
                        obj_op.EnableControls(IC0608);
                        obj_op.EnableControls(IC0708);
                        obj_op.EnableControls(IC0808);
                        obj_op.EnableControls(IC0908);
                        obj_op.EnableControls(IC01008);
                        obj_op.EnableControls(IC01108);

                        IC0608.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IC0608);
                        obj_op.DisableControls(IC0708);
                        obj_op.DisableControls(IC0808);
                        obj_op.DisableControls(IC0908);
                        obj_op.DisableControls(IC01008);
                        obj_op.DisableControls(IC01108);

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        chkBaby9.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby8.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby8);
        }

        private void chkBaby9_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby9'", chkBaby9.Text) == true)
                {
                    chkBaby9.Focus();
                }
                else
                {

                    if (chkBaby8.Text == "2" && chkBaby9.Text == "1")
                    {
                        MessageBox.Show("You have to add 8th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby9.Focus();
                        return;
                    }


                    if (chkBaby9.Text == "1")
                    {
                        obj_op.EnableControls(IC0609);
                        obj_op.EnableControls(IC0709);
                        obj_op.EnableControls(IC0809);
                        obj_op.EnableControls(IC0909);
                        obj_op.EnableControls(IC01009);
                        obj_op.EnableControls(IC01109);

                        IC0609.Focus();

                    }
                    else
                    {

                        obj_op.DisableControls(IC0609);
                        obj_op.DisableControls(IC0709);
                        obj_op.DisableControls(IC0809);
                        obj_op.DisableControls(IC0909);
                        obj_op.DisableControls(IC01009);
                        obj_op.DisableControls(IC01109);

                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        chkBaby10.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby9.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby9);
        }

        private void chkBaby10_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby10'", chkBaby10.Text) == true)
                {
                    chkBaby10.Focus();
                }
                else
                {

                    if (chkBaby9.Text == "2" && chkBaby10.Text == "1")
                    {
                        MessageBox.Show("You have to add 9th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby10.Focus();
                        return;
                    }



                    if (chkBaby10.Text == "1")
                    {
                        obj_op.EnableControls(IC06010);
                        obj_op.EnableControls(IC07010);
                        obj_op.EnableControls(IC08010);
                        obj_op.EnableControls(IC09010);
                        obj_op.EnableControls(IC01010);
                        obj_op.EnableControls(IC01110);

                        IC06010.Focus();

                    }
                    else
                    {
                        obj_op.DisableControls(IC06010);
                        obj_op.DisableControls(IC07010);
                        obj_op.DisableControls(IC08010);
                        obj_op.DisableControls(IC09010);
                        obj_op.DisableControls(IC01010);
                        obj_op.DisableControls(IC01110);

                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        chkBaby11.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby10.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby10);
        }

        private void chkBaby11_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();

            try
            {
                if (obj_op.Validate_Dictionary("0", "select * from tbldict ", " where tabname = 'Form1BL' and var_id = 'chkBaby11'", chkBaby11.Text) == true)
                {
                    chkBaby11.Focus();
                }
                else
                {

                    if (chkBaby10.Text == "2" && chkBaby11.Text == "1")
                    {
                        MessageBox.Show("You have to add 10th Baby first ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        chkBaby11.Focus();
                        return;
                    }



                    if (chkBaby11.Text == "1")
                    {
                        obj_op.EnableControls(IC06011);
                        obj_op.EnableControls(IC07011);
                        obj_op.EnableControls(IC08011);
                        obj_op.EnableControls(IC09011);
                        obj_op.EnableControls(IC01011);
                        obj_op.EnableControls(IC01111);

                        IC06011.Focus();

                    }
                    else
                    {
                        obj_op.DisableControls(IC06011);
                        obj_op.DisableControls(IC07011);
                        obj_op.DisableControls(IC08011);
                        obj_op.DisableControls(IC09011);
                        obj_op.DisableControls(IC01011);
                        obj_op.DisableControls(IC01111);

                        tabControl1.SelectedIndex = 3;

                        ID01.Focus();
                    }
                }


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                obj_op = null;
            }

            chkBaby11.BackColor = Color.Bisque;
            ChangeColorLabel(0, lbl_ckkBaby11);
        }

        private void IB04a_Leave(object sender, EventArgs e)
        {
            CDBOperations obj_op = new CDBOperations();


            try
            {
                DateTime dt = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                dt = Convert.ToDateTime(IB04a.Text);


                DateTime dt1 = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                dt1 = Convert.ToDateTime(IB04.Text);


                DateTime study_dt = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                study_dt = Convert.ToDateTime("01/06/2021");


                if (dt > DateTime.Now.Date)
                {
                    MessageBox.Show("Date cannot be greater than todays's date ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB04a.Focus();
                }
                else
                {
                    if (dt < study_dt)
                    {
                        MessageBox.Show("Date cannot be less than study starting date  ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        IB04a.Focus();
                    }
                    else
                    {
                        if (dt != dt1)
                        {
                            MessageBox.Show("Dates are different in both format ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                            IB04a.Focus();
                        }
                    }
                }



            }

            catch (Exception ex)
            {
                if (ex.Message == "String was not recognized as a valid DateTime.")
                {
                    MessageBox.Show("Invalid Date format. Date must be entered in dd/mm/yyyy format ", "Date Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB04a.Focus();
                }
                else
                {
                    MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    IB04a.Focus();
                }
            }

            finally
            {
                obj_op = null;
            }


            IB04a.BackColor = Color.Bisque;
        }



        private void AuditTrials(string spName)
        {
            CDBOperations obj_op = null;
            DataSet ds = null;
            DataSet ds_dict = null;


            try
            {

                if (CVariables.IsUserFirstOrSecond == "User1")
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1bl where form_id='" + FORM_ID.Text + "'", "0", FORM_ID.Text);
                }
                else
                {
                    obj_op = new CDBOperations();
                    ds = obj_op.GetFormData("select * from form1blx where form_id='" + FORM_ID.Text + "'", "0", FORM_ID.Text);
                }


                ds_dict = obj_op.GetFormData("select * from tbldict where tabname = 'Form1BL' order by var_seq", "0", "Form1BL");



                for (int a = 0; a <= ds_dict.Tables[0].Rows.Count - 1; a++)
                {

                    for (int b = 0; b <= ds.Tables[0].Rows.Count - 1; b++)
                    {

                        //if (ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "ID" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "FORM_ID" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "COMP_ID" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "EntryDate" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "UserID" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "IsPilotPhase" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "RR1_DIFF" && ds_dict.Tables[0].Rows[a]["var_id"].ToString() != "RR2_DIFF")

                        if (IsIncludedAudit("Form1BL", ds_dict.Tables[0].Rows[a]["var_id"].ToString()))
                        {

                            //if (ds.Tables[0].Rows[b][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString() != tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text)


                            if (ds.Tables[0].Rows[b][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString() != tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text)
                            {

                                if (ds_dict.Tables[0].Rows[a]["var_id"].ToString() == "IB04"
                                    || ds_dict.Tables[0].Rows[a]["var_id"].ToString() == "QCFUP05"
                                    )
                                {

                                    if (ds.Tables[0].Rows[b][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString() == "" && tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text == "  /  /")
                                    {

                                    }
                                    else
                                    {
                                        AddRecord(spName, ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", "Update", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), ds.Tables[0].Rows[0][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, CVariables.dual_normal_update.ToString(), CVariables.dualisupdate.ToString());
                                        AddRecord1("sp_Create_DualEntry", ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, "2");
                                    }

                                }
                                else if (ds_dict.Tables[0].Rows[a]["var_id"].ToString() == "IB06" ||
                                    ds_dict.Tables[0].Rows[a]["var_id"].ToString() == "QCFUP02" ||
                                    ds_dict.Tables[0].Rows[a]["var_id"].ToString() == "QCFUP06"
                                    )
                                {

                                    if (ds.Tables[0].Rows[b][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString() == "" && tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text == "  :")
                                    {

                                    }
                                    else
                                    {
                                        AddRecord(spName, ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", "Update", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), ds.Tables[0].Rows[0][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, CVariables.dual_normal_update.ToString(), CVariables.dualisupdate.ToString());
                                        AddRecord1("sp_Create_DualEntry", ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, "2");
                                    }

                                }
                                else
                                {
                                    AddRecord(spName, ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", "Update", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), ds.Tables[0].Rows[0][ds_dict.Tables[0].Rows[a]["var_id"].ToString()].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, CVariables.dual_normal_update.ToString(), CVariables.dualisupdate.ToString());
                                    AddRecord1("sp_Create_DualEntry", ds.Tables[0].Rows[b]["Form_ID"].ToString(), "0", "", "Form1BL", ds_dict.Tables[0].Rows[a]["var_id"].ToString(), tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, tabControl1.TabPages[Convert.ToInt32(ds_dict.Tables[0].Rows[a]["TabPageNo"].ToString())].Controls[ds_dict.Tables[0].Rows[a]["var_id"].ToString()].Text, "2");
                                }

                            }


                        }  //   if (ds.Tables[0].Rows[0][a].ToString() == tabControl1.TabPages[b].Controls[c].Name)



                    }     //   for (int b = 0; b <= tabControl1.TabPages[b].Controls.Count - 1; c++)


                }     //    for (int a = 0; a <= ds.Tables[0].Columns.Count - 1; a++)


            }


            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
                ds = null;
            }
        }



        private bool IsIncludedAudit(string tabname, string fieldname)
        {
            CDBOperations obj_op = new CDBOperations();
            DataSet ds = null;

            bool IsError = false;

            try
            {
                string[] fldname = { "tabname", "var_name", "var_id", "var_nmae", "var_seq", "field_desc", "remarks", "data_type", "field_len", "field_decimal", "MinValue", "MaxValue", "value1", "value2", "value3", "value4", "value5", "taborder", "msg", "IsOthers", "Others_Value", "No_Options", "Isblank", "fldvalue" };
                string[] fldvalue = { tabname, "", fieldname, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "8" };


                string qry = "select * from tbldict where tabname = '" + tabname + "' and var_id  = '" + fieldname + "' and isaudit = 1";


                ds = obj_op.GetFormData(qry, "", "");

                if (ds != null)
                {
                    if (ds.Tables.Count > 0)
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            IsError = true;
                        }
                    }
                }
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                ds = null;
                obj_op = null;
            }

            return IsError;
        }





        private void AddRecord(string spName, string ChildID, string VisitID, string formNo, string FormName, string ActionPerformed, string FieldName, string OldValue, string NewValue, string IsUpdateNormal, string IsDualUpdate)
        {
            CDBOperations obj_op = null;
            string[] st_dt;

            try
            {
                obj_op = new CDBOperations();

                st_dt = DateTime.Now.ToShortDateString().Split('/');


                DateTime start_dt = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                start_dt = Convert.ToDateTime(DateTime.Now.ToShortDateString());

                DateTime start_dt1 = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                start_dt1 = Convert.ToDateTime(DateTime.Now.ToShortTimeString());


                //string[] fldname = { "FormID", "VisitID", "FormNo", "FormName", "ActionPerformed", "EntryDate", "EntryTime", "ComputerName", "WinUserName", "LoginUserName", "FieldName", "OldValue", "NewValue", "IsUpdateNormal", "IsDualUpdate" };
                //string[] fldvalue = { ChildID, VisitID, formNo, FormName, ActionPerformed, start_dt.ToShortDateString(), start_dt1.ToShortTimeString(), comp_name, user_name, CVariables.UserID.ToString(), FieldName, OldValue, NewValue, IsUpdateNormal, IsDualUpdate };


                string[] fldname = { };
                string[] fldvalue = { };


                string qry = "insert into tblAuditTrials (FormID, VisitID, FormNo, FormName, ActionPerformed, EntryDate, EntryTime, ComputerName, WinUserName, LoginUserName, FieldName, OldValue, NewValue, IsUpdateNormal, IsDualUpdate) values('" +
                    ChildID + "', '" + VisitID + "', '" + formNo + "', '" + FormName + "', '" + ActionPerformed + "', '" + start_dt.ToShortDateString() + "', '" + start_dt1.ToShortTimeString() + "', '" + comp_name + "', '" + user_name + "', '" + CVariables.UserID.ToString() + "', '" + FieldName + "', '" + OldValue + "', '" + NewValue + "', '" + IsUpdateNormal + "', '" + IsDualUpdate + "')";


                obj_op.ExecuteNonQuery(fldname, fldvalue, qry);
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }
        }




        private void AddRecord1(string spName, string formid, string VisitID, string formNo, string FormName, string fieldname, string entry1, string entry2, string status)
        {
            CDBOperations obj_op = null;

            try
            {
                obj_op = new CDBOperations();

                DateTime start_dt = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                start_dt = Convert.ToDateTime(DateTime.Now.ToShortDateString());

                DateTime start_dt1 = new DateTime();
                System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-GB");
                start_dt1 = Convert.ToDateTime(DateTime.Now.ToShortTimeString());


                if (CVariables.dual_whichentry == "1st Entry")
                {
                    string[] fldname = { "formno", "compid", "fieldname", "entry1", "entry2", "serialno", "tcompid", "var_seq", "field_desc", "field_type", "field_len", "tabname", "taborder", "rep_val", "upd_by", "upd_date", "fldvalue", "status", "criteria", "whichentry" };
                    string[] fldvalue = { formid, "", fieldname, entry1, entry2, VisitID, "0", "", "", "", "0", "", "", "", "", "", "2", "1", "", CVariables.dual_whichentry };


                    string qry = "insert into tblDualEntry_Dict (formno, compid, fieldname, entry1, entry2, serialno, tcompid, var_seq, field_desc, field_type, field_len, tabname, taborder, rep_val, upd_by, upd_date, fldvalue, status, criteria, whichentry) values('" +
                        formid + "', '" + "" + "', '" + fieldname + "', '" + entry1 + "', '" + entry2 + "', '" + VisitID + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "2" + "', '" + "1" + "', '" + "" + "', '" + CVariables.dual_whichentry + "')";


                    obj_op.ExecuteNonQuery_Dual(fldname, fldvalue, qry);
                }
                else if (CVariables.dual_whichentry == "2nd Entry")
                {
                    string[] fldname = { "formno", "compid", "fieldname", "entry1", "entry2", "serialno", "tcompid", "var_seq", "field_desc", "field_type", "field_len", "tabname", "taborder", "rep_val", "upd_by", "upd_date", "fldvalue", "status", "criteria", "whichentry" };
                    string[] fldvalue = { formid, "", fieldname, entry1, entry2, VisitID, "0", "", "", "", "0", "", "", "", "", "", "2", "1", "", CVariables.dual_whichentry };


                    string qry = "insert into tblDualEntry_Dict (formno, compid, fieldname, entry1, entry2, serialno, tcompid, var_seq, field_desc, field_type, field_len, tabname, taborder, rep_val, upd_by, upd_date, fldvalue, status, criteria, whichentry) values('" +
                        formid + "', '" + "" + "', '" + fieldname + "', '" + entry1 + "', '" + entry2 + "', '" + VisitID + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "2" + "', '" + "1" + "', '" + "" + "', '" + CVariables.dual_whichentry + "')";


                    obj_op.ExecuteNonQuery_Dual(fldname, fldvalue, qry);
                }
                else if (CVariables.dual_whichentry == "3rd Entry")
                {
                    string[] fldname = { "formno", "compid", "fieldname", "entry1", "entry2", "serialno", "tcompid", "var_seq", "field_desc", "field_type", "field_len", "tabname", "taborder", "rep_val", "upd_by", "upd_date", "fldvalue", "status", "criteria", "whichentry" };
                    string[] fldvalue = { formid, "", fieldname, entry1, entry2, VisitID, "0", "", "", "", "0", "", "", "", "", "", "2", "1", "", CVariables.dual_whichentry };


                    string qry = "insert into tblDualEntry_Dict (formno, compid, fieldname, entry1, entry2, serialno, tcompid, var_seq, field_desc, field_type, field_len, tabname, taborder, rep_val, upd_by, upd_date, fldvalue, status, criteria, whichentry) values('" +
                        formid + "', '" + "" + "', '" + fieldname + "', '" + entry1 + "', '" + entry2 + "', '" + VisitID + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "0" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "" + "', '" + "2" + "', '" + "1" + "', '" + "" + "', '" + CVariables.dual_whichentry + "')";


                    obj_op.ExecuteNonQuery_Dual(fldname, fldvalue, qry);
                }

            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            finally
            {
                obj_op = null;
            }
        }

        private void IG01202_TypeValidationCompleted(object sender, TypeValidationEventArgs e)
        {

        }

        private void tabPage7_Click(object sender, EventArgs e)
        {

        }
    }
}